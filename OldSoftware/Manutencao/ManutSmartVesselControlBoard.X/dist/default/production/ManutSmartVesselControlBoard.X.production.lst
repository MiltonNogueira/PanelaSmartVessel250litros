

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Aug 14 18:09:42 2019

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    28  0000                     
    29                           	psect	idataBANK0
    30  001404                     __pidataBANK0:
    31                           	opt stack 0
    32                           
    33                           ;initializer for _StrDiasDaSemana
    34  001404  44                 	db	68
    35  001405  4F                 	db	79
    36  001406  4D                 	db	77
    37  001407  00                 	db	0
    38  001408  53                 	db	83
    39  001409  45                 	db	69
    40  00140A  47                 	db	71
    41  00140B  00                 	db	0
    42  00140C  54                 	db	84
    43  00140D  45                 	db	69
    44  00140E  52                 	db	82
    45  00140F  00                 	db	0
    46  001410  51                 	db	81
    47  001411  55                 	db	85
    48  001412  41                 	db	65
    49  001413  00                 	db	0
    50  001414  51                 	db	81
    51  001415  55                 	db	85
    52  001416  49                 	db	73
    53  001417  00                 	db	0
    54  001418  53                 	db	83
    55  001419  45                 	db	69
    56  00141A  58                 	db	88
    57  00141B  00                 	db	0
    58  00141C  53                 	db	83
    59  00141D  41                 	db	65
    60  00141E  42                 	db	66
    61  00141F  00                 	db	0
    62  0000                     _ADCON0	set	4034
    63  0000                     _ADCON0bits	set	4034
    64  0000                     _ADCON1	set	4033
    65  0000                     _ADCON2	set	4032
    66  0000                     _ADRESH	set	4036
    67  0000                     _ADRESL	set	4035
    68  0000                     _BAUDCONbits	set	4024
    69  0000                     _CCP2CON	set	4026
    70  0000                     _CCPR2L	set	4027
    71  0000                     _CMCON	set	4020
    72  0000                     _HLVDCON	set	4050
    73  0000                     _HLVDCONbits	set	4050
    74  0000                     _INTCON2bits	set	4081
    75  0000                     _INTCONbits	set	4082
    76  0000                     _IPR1bits	set	3999
    77  0000                     _IPR2bits	set	4002
    78  0000                     _PIE1bits	set	3997
    79  0000                     _PIE2bits	set	4000
    80  0000                     _PIR1bits	set	3998
    81  0000                     _PIR2bits	set	4001
    82  0000                     _PORTA	set	3968
    83  0000                     _PORTAbits	set	3968
    84  0000                     _PORTB	set	3969
    85  0000                     _PORTBbits	set	3969
    86  0000                     _PORTC	set	3970
    87  0000                     _PORTCbits	set	3970
    88  0000                     _PORTD	set	3971
    89  0000                     _PORTE	set	3972
    90  0000                     _PR2	set	4043
    91  0000                     _RCONbits	set	4048
    92  0000                     _RCREG	set	4014
    93  0000                     _RCSTAbits	set	4011
    94  0000                     _SPBRG	set	4015
    95  0000                     _SPBRGH	set	4016
    96  0000                     _T0CON	set	4053
    97  0000                     _T1CONbits	set	4045
    98  0000                     _T2CON	set	4042
    99  0000                     _TMR0L	set	4054
   100  0000                     _TMR1H	set	4047
   101  0000                     _TMR1L	set	4046
   102  0000                     _TRISA	set	3986
   103  0000                     _TRISB	set	3987
   104  0000                     _TRISC	set	3988
   105  0000                     _TRISD	set	3989
   106  0000                     _TRISE	set	3990
   107  0000                     _TXREG	set	4013
   108  0000                     _TXSTAbits	set	4012
   109                           
   110                           ; #config settings
   111  0000                     
   112                           	psect	cinit
   113  001396                     __pcinit:
   114                           	opt stack 0
   115  001396                     start_initialization:
   116                           	opt stack 0
   117  001396                     __initialization:
   118                           	opt stack 0
   119                           
   120                           ; Clear objects allocated to BANK0 (100 bytes)
   121  001396  EE00  F060         	lfsr	0,__pbssBANK0
   122  00139A  0E64               	movlw	100
   123  00139C                     clear_0:
   124  00139C  6AEE               	clrf	postinc0,c
   125  00139E  06E8               	decf	wreg,f,c
   126  0013A0  E1FD               	bnz	clear_0
   127                           
   128                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   129  0013A2  6A44               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   130                           
   131                           ; Clear objects allocated to COMRAM (40 bytes)
   132  0013A4  EE00  F001         	lfsr	0,__pbssCOMRAM
   133  0013A8  0E28               	movlw	40
   134  0013AA                     clear_1:
   135  0013AA  6AEE               	clrf	postinc0,c
   136  0013AC  06E8               	decf	wreg,f,c
   137  0013AE  E1FD               	bnz	clear_1
   138                           
   139                           ; Initialize objects allocated to BANK0 (28 bytes)
   140                           ; load TBLPTR registers with __pidataBANK0
   141  0013B0  0E04               	movlw	low __pidataBANK0
   142  0013B2  6EF6               	movwf	tblptrl,c
   143  0013B4  0E14               	movlw	high __pidataBANK0
   144  0013B6  6EF7               	movwf	tblptrh,c
   145  0013B8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   146  0013BA  6EF8               	movwf	tblptru,c
   147  0013BC  EE00  F0C4         	lfsr	0,__pdataBANK0
   148  0013C0  EE10 F01C          	lfsr	1,28
   149  0013C4                     copy_data0:
   150  0013C4  0009               	tblrd		*+
   151  0013C6  CFF5 FFEE          	movff	tablat,postinc0
   152  0013CA  50E5               	movf	postdec1,w,c
   153  0013CC  50E1               	movf	fsr1l,w,c
   154  0013CE  E1FA               	bnz	copy_data0
   155  0013D0                     end_of_initialization:
   156                           	opt stack 0
   157  0013D0                     __end_of__initialization:
   158                           	opt stack 0
   159  0013D0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   160  0013D2  6EF8               	movwf	tblptru,c
   161  0013D4  0100               	movlb	0
   162  0013D6  EFAC  F000         	goto	_main	;jump to C main() function
   163                           tblptru	equ	0xFF8
   164                           tblptrh	equ	0xFF7
   165                           tblptrl	equ	0xFF6
   166                           tablat	equ	0xFF5
   167                           postinc0	equ	0xFEE
   168                           wreg	equ	0xFE8
   169                           postdec1	equ	0xFE5
   170                           fsr1l	equ	0xFE1
   171                           
   172                           	psect	bitbssCOMRAM
   173  000220                     __pbitbssCOMRAM:
   174                           	opt stack 0
   175  000220                     _IN0:
   176                           	opt stack 0
   177  000220                     	ds	1
   178  000221                     _IN1:
   179                           	opt stack 0
   180  000221                     	ds	1
   181  000222                     _OUT0:
   182                           	opt stack 0
   183  000222                     	ds	1
   184  000223                     _OUT1:
   185                           	opt stack 0
   186  000223                     	ds	1
   187  000224                     _POWER_FAULT:
   188                           	opt stack 0
   189  000224                     	ds	1
   190                           tblptru	equ	0xFF8
   191                           tblptrh	equ	0xFF7
   192                           tblptrl	equ	0xFF6
   193                           tablat	equ	0xFF5
   194                           postinc0	equ	0xFEE
   195                           wreg	equ	0xFE8
   196                           postdec1	equ	0xFE5
   197                           fsr1l	equ	0xFE1
   198                           
   199                           	psect	bssCOMRAM
   200  000001                     __pbssCOMRAM:
   201                           	opt stack 0
   202  000001                     HighISR@AccValoresAD:
   203                           	opt stack 0
   204  000001                     	ds	8
   205  000009                     HighISR@ValoresADanteriores1:
   206                           	opt stack 0
   207  000009                     	ds	8
   208  000011                     HighISR@ValoresADanteriores2:
   209                           	opt stack 0
   210  000011                     	ds	8
   211  000019                     _ValoresAD:
   212                           	opt stack 0
   213  000019                     	ds	8
   214  000021                     _MinutosDia:
   215                           	opt stack 0
   216  000021                     	ds	2
   217  000023                     HighISR@CanalAD:
   218                           	opt stack 0
   219  000023                     	ds	1
   220  000024                     HighISR@ContMedia:
   221                           	opt stack 0
   222  000024                     	ds	1
   223  000025                     HighISR@EstadoAD:
   224                           	opt stack 0
   225  000025                     	ds	1
   226  000026                     LowISR@Indice:
   227                           	opt stack 0
   228  000026                     	ds	1
   229  000027                     _Outputs10to17:
   230                           	opt stack 0
   231  000027                     	ds	1
   232  000028                     _Outputs2to9:
   233                           	opt stack 0
   234  000028                     	ds	1
   235                           tblptru	equ	0xFF8
   236                           tblptrh	equ	0xFF7
   237                           tblptrl	equ	0xFF6
   238                           tablat	equ	0xFF5
   239                           postinc0	equ	0xFEE
   240                           wreg	equ	0xFE8
   241                           postdec1	equ	0xFE5
   242                           fsr1l	equ	0xFE1
   243                           
   244                           	psect	bssBANK0
   245  000060                     __pbssBANK0:
   246                           	opt stack 0
   247  000060                     _SerialIn:
   248                           	opt stack 0
   249  000060                     	ds	40
   250  000088                     _SerialOut:
   251                           	opt stack 0
   252  000088                     	ds	40
   253  0000B0                     HighISR@ValoresADanteriores3:
   254                           	opt stack 0
   255  0000B0                     	ds	8
   256  0000B8                     _PressaommCA:
   257                           	opt stack 0
   258  0000B8                     	ds	4
   259  0000BC                     _DiaDaSemana:
   260                           	opt stack 0
   261  0000BC                     	ds	1
   262  0000BD                     _EstadoMain:
   263                           	opt stack 0
   264  0000BD                     	ds	1
   265  0000BE                     _Inputs10to17:
   266                           	opt stack 0
   267  0000BE                     	ds	1
   268  0000BF                     _Inputs18to25:
   269                           	opt stack 0
   270  0000BF                     	ds	1
   271  0000C0                     _Inputs2to9:
   272                           	opt stack 0
   273  0000C0                     	ds	1
   274  0000C1                     _horas:
   275                           	opt stack 0
   276  0000C1                     	ds	1
   277  0000C2                     _minutos:
   278                           	opt stack 0
   279  0000C2                     	ds	1
   280  0000C3                     _segundos:
   281                           	opt stack 0
   282  0000C3                     	ds	1
   283                           tblptru	equ	0xFF8
   284                           tblptrh	equ	0xFF7
   285                           tblptrl	equ	0xFF6
   286                           tablat	equ	0xFF5
   287                           postinc0	equ	0xFEE
   288                           wreg	equ	0xFE8
   289                           postdec1	equ	0xFE5
   290                           fsr1l	equ	0xFE1
   291                           
   292                           	psect	dataBANK0
   293  0000C4                     __pdataBANK0:
   294                           	opt stack 0
   295  0000C4                     _StrDiasDaSemana:
   296                           	opt stack 0
   297  0000C4                     	ds	28
   298                           tblptru	equ	0xFF8
   299                           tblptrh	equ	0xFF7
   300                           tblptrl	equ	0xFF6
   301                           tablat	equ	0xFF5
   302                           postinc0	equ	0xFEE
   303                           wreg	equ	0xFE8
   304                           postdec1	equ	0xFE5
   305                           fsr1l	equ	0xFE1
   306                           
   307                           	psect	cstackBANK1
   308  000100                     __pcstackBANK1:
   309                           	opt stack 0
   310  000100                     ??_DelayDWIN:
   311                           
   312                           ; 0 bytes @ 0x0
   313  000100                     	ds	1
   314  000101                     DelayDWIN@cont:
   315                           	opt stack 0
   316                           
   317                           ; 1 bytes @ 0x1
   318  000101                     	ds	1
   319  000102                     ?_LerDWINram:
   320                           	opt stack 0
   321  000102                     ?_LerDWINreg:
   322                           	opt stack 0
   323  000102                     EscreverDWINram@endereco:
   324                           	opt stack 0
   325  000102                     EscreverDWINreg@valor:
   326                           	opt stack 0
   327  000102                     LerDWINram@endereco:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0x2
   331  000102                     	ds	2
   332  000104                     EscreverDWINreg@endereco:
   333                           	opt stack 0
   334  000104                     LerDWINreg@endereco:
   335                           	opt stack 0
   336  000104                     EscreverDWINram@valor:
   337                           	opt stack 0
   338  000104                     LerDWINram@VPrecebido:
   339                           	opt stack 0
   340                           
   341                           ; 2 bytes @ 0x4
   342  000104                     	ds	1
   343  000105                     EscreverDWINreg@cont:
   344                           	opt stack 0
   345  000105                     LerDWINreg@recebido:
   346                           	opt stack 0
   347                           
   348                           ; 1 bytes @ 0x5
   349  000105                     	ds	1
   350  000106                     EscreverDWINram@cont:
   351                           	opt stack 0
   352  000106                     LerDWINram@cont:
   353                           	opt stack 0
   354  000106                     LerDWINreg@cont:
   355                           	opt stack 0
   356                           
   357                           ; 1 bytes @ 0x6
   358  000106                     	ds	1
   359  000107                     ??_main:
   360                           
   361                           ; 0 bytes @ 0x7
   362  000107                     	ds	2
   363  000109                     main@diminui:
   364                           	opt stack 0
   365                           
   366                           ; 2 bytes @ 0x9
   367  000109                     	ds	2
   368  00010B                     main@aumenta:
   369                           	opt stack 0
   370                           
   371                           ; 2 bytes @ 0xB
   372  00010B                     	ds	2
   373  00010D                     main@imagem:
   374                           	opt stack 0
   375                           
   376                           ; 2 bytes @ 0xD
   377  00010D                     	ds	2
   378  00010F                     main@temp:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0xF
   382  00010F                     	ds	2
   383  000111                     main@TelaAtual:
   384                           	opt stack 0
   385                           
   386                           ; 1 bytes @ 0x11
   387  000111                     	ds	1
   388                           tblptru	equ	0xFF8
   389                           tblptrh	equ	0xFF7
   390                           tblptrl	equ	0xFF6
   391                           tablat	equ	0xFF5
   392                           postinc0	equ	0xFEE
   393                           wreg	equ	0xFE8
   394                           postdec1	equ	0xFE5
   395                           fsr1l	equ	0xFE1
   396                           
   397                           	psect	cstackBANK0
   398  0000E0                     __pcstackBANK0:
   399                           	opt stack 0
   400  0000E0                     ??_HighISR:
   401                           
   402                           ; 0 bytes @ 0x0
   403  0000E0                     	ds	16
   404                           tblptru	equ	0xFF8
   405                           tblptrh	equ	0xFF7
   406                           tblptrl	equ	0xFF6
   407                           tablat	equ	0xFF5
   408                           postinc0	equ	0xFEE
   409                           wreg	equ	0xFE8
   410                           postdec1	equ	0xFE5
   411                           fsr1l	equ	0xFE1
   412                           
   413                           	psect	cstackCOMRAM
   414  000029                     __pcstackCOMRAM:
   415                           	opt stack 0
   416  000029                     ??_LowISR:
   417  000029                     
   418                           ; 0 bytes @ 0x0
   419  000029                     	ds	17
   420  00003A                     ?___lwdiv:
   421                           	opt stack 0
   422  00003A                     ___lwdiv@dividend:
   423                           	opt stack 0
   424                           
   425                           ; 2 bytes @ 0x11
   426  00003A                     	ds	2
   427  00003C                     ___lwdiv@divisor:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x13
   431  00003C                     	ds	2
   432  00003E                     ___lwdiv@quotient:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x15
   436  00003E                     	ds	2
   437  000040                     ___lwdiv@counter:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0x17
   441  000040                     	ds	1
   442  000041                     HighISR@Temp16:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0x18
   446  000041                     	ds	2
   447  000043                     HighISR@Temp8:
   448                           	opt stack 0
   449                           
   450                           ; 1 bytes @ 0x1A
   451  000043                     	ds	1
   452  000044                     tblptru	equ	0xFF8
   453                           tblptrh	equ	0xFF7
   454                           tblptrl	equ	0xFF6
   455                           tablat	equ	0xFF5
   456                           postinc0	equ	0xFEE
   457                           wreg	equ	0xFE8
   458                           postdec1	equ	0xFE5
   459                           fsr1l	equ	0xFE1
   460                           
   461                           ; 0 bytes @ 0x1B
   462 ;;
   463 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   464 ;;
   465 ;; *************** function _main *****************
   466 ;; Defined at:
   467 ;;		line 515 in file "main.c"
   468 ;; Parameters:    Size  Location     Type
   469 ;;		None
   470 ;; Auto vars:     Size  Location     Type
   471 ;;  temp            2   15[BANK1 ] unsigned int 
   472 ;;  imagem          2   13[BANK1 ] unsigned int 
   473 ;;  aumenta         2   11[BANK1 ] unsigned int 
   474 ;;  diminui         2    9[BANK1 ] unsigned int 
   475 ;;  TelaAtual       1   17[BANK1 ] unsigned char 
   476 ;; Return value:  Size  Location     Type
   477 ;;		None               void
   478 ;; Registers used:
   479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   485 ;;      Params:         0       0       0       0       0       0       0       0       0
   486 ;;      Locals:         0       0       9       0       0       0       0       0       0
   487 ;;      Temps:          0       0       2       0       0       0       0       0       0
   488 ;;      Totals:         0       0      11       0       0       0       0       0       0
   489 ;;Total ram usage:       11 bytes
   490 ;; Hardware stack levels required when called:    5
   491 ;; This function calls:
   492 ;;		_CiclarOUT1
   493 ;;		_DelayDWIN
   494 ;;		_EscreverDWINram
   495 ;;		_EscreverDWINreg
   496 ;;		_Inicializacao
   497 ;;		_LerDWINram
   498 ;;		_LerDWINreg
   499 ;; This function is called by:
   500 ;;		Startup code after reset
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           	psect	text0
   505  000158                     __ptext0:
   506                           	opt stack 0
   507  000158                     _main:
   508                           	opt stack 26
   509                           
   510                           ;main.c: 516: unsigned int imagem;
   511                           ;main.c: 517: unsigned int temp;
   512                           ;main.c: 518: unsigned int diminui;
   513                           ;main.c: 519: unsigned int aumenta;
   514                           ;main.c: 520: unsigned char TelaAtual;
   515                           ;main.c: 522: Inicializacao();
   516                           
   517                           ;incstack = 0
   518  000158  ECDE  F008         	call	_Inicializacao	;wreg free
   519                           
   520                           ;main.c: 523: temp = 0;
   521  00015C  0E00               	movlw	0
   522  00015E  0101               	movlb	1	; () banked
   523  000160  6F10               	movwf	(main@temp+1)& (0+255),b
   524  000162  0E00               	movlw	0
   525  000164  6F0F               	movwf	main@temp& (0+255),b
   526                           
   527                           ; BSR set to: 1
   528                           ;main.c: 524: imagem = 0;
   529  000166  0E00               	movlw	0
   530  000168  0101               	movlb	1	; () banked
   531  00016A  6F0E               	movwf	(main@imagem+1)& (0+255),b
   532  00016C  0E00               	movlw	0
   533  00016E  6F0D               	movwf	main@imagem& (0+255),b
   534                           
   535                           ; BSR set to: 1
   536                           ;main.c: 525: __nop();
   537  000170  F000               	nop	
   538                           
   539                           ;main.c: 526: for(temp = 0;temp<25;temp++)
   540  000172  0E00               	movlw	0
   541  000174  0101               	movlb	1	; () banked
   542  000176  6F10               	movwf	(main@temp+1)& (0+255),b
   543  000178  0E00               	movlw	0
   544  00017A  6F0F               	movwf	main@temp& (0+255),b
   545  00017C                     l3111:
   546                           
   547                           ; BSR set to: 1
   548  00017C  0101               	movlb	1	; () banked
   549  00017E  5110               	movf	(main@temp+1)& (0+255),w,b
   550  000180  E10E               	bnz	l3121
   551  000182  0E19               	movlw	25
   552  000184  0101               	movlb	1	; () banked
   553  000186  5D0F               	subwf	main@temp& (0+255),w,b
   554  000188  B0D8               	btfsc	status,0,c
   555  00018A  D009               	goto	l3121
   556  00018C  D001               	goto	l3115
   557                           
   558                           ; BSR set to: 1
   559  00018E  D007               	goto	l3121
   560  000190                     l3115:
   561                           
   562                           ; BSR set to: 1
   563                           ;main.c: 527: DelayDWIN();
   564  000190  ECED  F009         	call	_DelayDWIN	;wreg free
   565  000194  0101               	movlb	1	; () banked
   566  000196  4B0F               	infsnz	main@temp& (0+255),f,b
   567  000198  2B10               	incf	(main@temp+1)& (0+255),f,b
   568  00019A  D7F0               	goto	l3111
   569                           
   570                           ; BSR set to: 1
   571  00019C  D000               	goto	l3121
   572  00019E                     l3121:
   573                           
   574                           ; BSR set to: 1
   575                           ;main.c: 528: EscreverDWINram(0x1A,0);
   576  00019E  0E00               	movlw	0
   577  0001A0  0101               	movlb	1	; () banked
   578  0001A2  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
   579  0001A4  0E1A               	movlw	26
   580  0001A6  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
   581  0001A8  0E00               	movlw	0
   582  0001AA  0101               	movlb	1	; () banked
   583  0001AC  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
   584  0001AE  0E00               	movlw	0
   585  0001B0  6F04               	movwf	EscreverDWINram@valor& (0+255),b
   586  0001B2  EC2B  F009         	call	_EscreverDWINram	;wreg free
   587                           
   588                           ;main.c: 529: EscreverDWINram(0x1B,0);
   589  0001B6  0E00               	movlw	0
   590  0001B8  0101               	movlb	1	; () banked
   591  0001BA  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
   592  0001BC  0E1B               	movlw	27
   593  0001BE  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
   594  0001C0  0E00               	movlw	0
   595  0001C2  0101               	movlb	1	; () banked
   596  0001C4  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
   597  0001C6  0E00               	movlw	0
   598  0001C8  6F04               	movwf	EscreverDWINram@valor& (0+255),b
   599  0001CA  EC2B  F009         	call	_EscreverDWINram	;wreg free
   600                           
   601                           ;main.c: 531: PORTBbits.RB5 = 0;
   602  0001CE  9A81               	bcf	3969,5,c	;volatile
   603                           
   604                           ;main.c: 532: Outputs2to9 = 0;
   605  0001D0  0E00               	movlw	0
   606  0001D2  6E28               	movwf	_Outputs2to9,c
   607                           
   608                           ;main.c: 533: Outputs10to17 = 0;
   609  0001D4  0E00               	movlw	0
   610  0001D6  6E27               	movwf	_Outputs10to17,c
   611                           
   612                           ;main.c: 535: segundos = 0;
   613  0001D8  0E00               	movlw	0
   614  0001DA  0100               	movlb	0	; () banked
   615  0001DC  6FC3               	movwf	_segundos& (0+255),b
   616                           
   617                           ; BSR set to: 0
   618                           ;main.c: 536: minutos = 0;
   619  0001DE  0E00               	movlw	0
   620  0001E0  0100               	movlb	0	; () banked
   621  0001E2  6FC2               	movwf	_minutos& (0+255),b
   622                           
   623                           ; BSR set to: 0
   624                           ;main.c: 537: horas = 12;
   625  0001E4  0E0C               	movlw	12
   626  0001E6  0100               	movlb	0	; () banked
   627  0001E8  6FC1               	movwf	_horas& (0+255),b
   628                           
   629                           ; BSR set to: 0
   630                           ;main.c: 538: DiaDaSemana = DOM;
   631  0001EA  0E00               	movlw	0
   632  0001EC  0100               	movlb	0	; () banked
   633  0001EE  6FBC               	movwf	_DiaDaSemana& (0+255),b
   634                           
   635                           ; BSR set to: 0
   636                           ;main.c: 539: POWER_FAULT = 0;
   637  0001F0  9844               	bcf	_POWER_FAULT/(0+8),_POWER_FAULT& (0+7),c
   638  0001F2  EF42  F006         	goto	l3451
   639                           
   640                           ; BSR set to: 0
   641                           ;main.c: 543: switch(EstadoMain){
   642                           
   643                           ;main.c: 542: while(1){
   644                           
   645                           ; BSR set to: 0
   646                           ;main.c: 540: EstadoMain = POWERON;
   647  0001F6  EF57  F006         	goto	l3463
   648  0001FA                     l3141:
   649                           
   650                           ; BSR set to: 0
   651                           ;main.c: 545: TelaAtual = LerDWINreg(03);
   652  0001FA  0E03               	movlw	3
   653  0001FC  EC7E  F008         	call	_LerDWINreg
   654  000200  0101               	movlb	1	; () banked
   655  000202  5102               	movf	?_LerDWINreg& (0+255),w,b
   656  000204  0101               	movlb	1	; () banked
   657  000206  6F11               	movwf	main@TelaAtual& (0+255),b
   658                           
   659                           ; BSR set to: 1
   660                           ;main.c: 547: if(TelaAtual == 6){
   661  000208  0E06               	movlw	6
   662  00020A  0101               	movlb	1	; () banked
   663  00020C  1911               	xorwf	main@TelaAtual& (0+255),w,b
   664  00020E  A4D8               	btfss	status,2,c
   665  000210  D04A               	goto	l3149
   666                           
   667                           ; BSR set to: 1
   668                           ;main.c: 548: EscreverDWINram(0x23,horas);
   669  000212  0E00               	movlw	0
   670  000214  0101               	movlb	1	; () banked
   671  000216  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
   672  000218  0E23               	movlw	35
   673  00021A  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
   674  00021C  C0C1  F104         	movff	_horas,EscreverDWINram@valor
   675  000220  0101               	movlb	1	; () banked
   676  000222  6B05               	clrf	(EscreverDWINram@valor+1)& (0+255),b
   677  000224  EC2B  F009         	call	_EscreverDWINram	;wreg free
   678                           
   679                           ;main.c: 549: EscreverDWINram(0x24,minutos);
   680  000228  0E00               	movlw	0
   681  00022A  0101               	movlb	1	; () banked
   682  00022C  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
   683  00022E  0E24               	movlw	36
   684  000230  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
   685  000232  C0C2  F104         	movff	_minutos,EscreverDWINram@valor
   686  000236  0101               	movlb	1	; () banked
   687  000238  6B05               	clrf	(EscreverDWINram@valor+1)& (0+255),b
   688  00023A  EC2B  F009         	call	_EscreverDWINram	;wreg free
   689                           
   690                           ;main.c: 550: if(LerDWINram(0x0027) > 0){
   691  00023E  0E00               	movlw	0
   692  000240  0101               	movlb	1	; () banked
   693  000242  6F03               	movwf	(LerDWINram@endereco+1)& (0+255),b
   694  000244  0E27               	movlw	39
   695  000246  6F02               	movwf	LerDWINram@endereco& (0+255),b
   696  000248  EC18  F008         	call	_LerDWINram	;wreg free
   697  00024C  0101               	movlb	1	; () banked
   698  00024E  BF03               	btfsc	(?_LerDWINram+1)& (0+255),7,b
   699  000250  D02A               	goto	l3149
   700  000252  0101               	movlb	1	; () banked
   701  000254  5103               	movf	(?_LerDWINram+1)& (0+255),w,b
   702  000256  E104               	bnz	u2900
   703  000258  0101               	movlb	1	; () banked
   704  00025A  0502               	decf	?_LerDWINram& (0+255),w,b
   705  00025C  A0D8               	btfss	status,0,c
   706  00025E  D023               	goto	l3149
   707  000260                     u2900:
   708                           
   709                           ; BSR set to: 1
   710                           ;main.c: 551: horas = LerDWINram(0x0025);
   711  000260  0E00               	movlw	0
   712  000262  0101               	movlb	1	; () banked
   713  000264  6F03               	movwf	(LerDWINram@endereco+1)& (0+255),b
   714  000266  0E25               	movlw	37
   715  000268  6F02               	movwf	LerDWINram@endereco& (0+255),b
   716  00026A  EC18  F008         	call	_LerDWINram	;wreg free
   717  00026E  0101               	movlb	1	; () banked
   718  000270  5102               	movf	?_LerDWINram& (0+255),w,b
   719  000272  0100               	movlb	0	; () banked
   720  000274  6FC1               	movwf	_horas& (0+255),b
   721                           
   722                           ;main.c: 552: minutos = LerDWINram(0x0026);
   723  000276  0E00               	movlw	0
   724  000278  0101               	movlb	1	; () banked
   725  00027A  6F03               	movwf	(LerDWINram@endereco+1)& (0+255),b
   726  00027C  0E26               	movlw	38
   727  00027E  6F02               	movwf	LerDWINram@endereco& (0+255),b
   728  000280  EC18  F008         	call	_LerDWINram	;wreg free
   729  000284  0101               	movlb	1	; () banked
   730  000286  5102               	movf	?_LerDWINram& (0+255),w,b
   731  000288  0100               	movlb	0	; () banked
   732  00028A  6FC2               	movwf	_minutos& (0+255),b
   733                           
   734                           ;main.c: 553: EscreverDWINram(0x27,0);
   735  00028C  0E00               	movlw	0
   736  00028E  0101               	movlb	1	; () banked
   737  000290  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
   738  000292  0E27               	movlw	39
   739  000294  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
   740  000296  0E00               	movlw	0
   741  000298  0101               	movlb	1	; () banked
   742  00029A  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
   743  00029C  0E00               	movlw	0
   744  00029E  6F04               	movwf	EscreverDWINram@valor& (0+255),b
   745  0002A0  EC2B  F009         	call	_EscreverDWINram	;wreg free
   746  0002A4  D000               	goto	l3149
   747  0002A6                     l3149:
   748                           
   749                           ;main.c: 554: }
   750                           ;main.c: 555: }
   751                           ;main.c: 557: if(TelaAtual == 7){
   752  0002A6  0E07               	movlw	7
   753  0002A8  0101               	movlb	1	; () banked
   754  0002AA  1911               	xorwf	main@TelaAtual& (0+255),w,b
   755  0002AC  A4D8               	btfss	status,2,c
   756  0002AE  D034               	goto	l3157
   757                           
   758                           ; BSR set to: 1
   759                           ;main.c: 558: EscreverDWINram(0x1C,ValoresAD[0]);
   760  0002B0  0E00               	movlw	0
   761  0002B2  0101               	movlb	1	; () banked
   762  0002B4  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
   763  0002B6  0E1C               	movlw	28
   764  0002B8  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
   765  0002BA  C019  F104         	movff	_ValoresAD,EscreverDWINram@valor
   766  0002BE  C01A  F105         	movff	_ValoresAD+1,EscreverDWINram@valor+1
   767  0002C2  EC2B  F009         	call	_EscreverDWINram	;wreg free
   768                           
   769                           ;main.c: 559: EscreverDWINram(0x1D,ValoresAD[1]);
   770  0002C6  0E00               	movlw	0
   771  0002C8  0101               	movlb	1	; () banked
   772  0002CA  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
   773  0002CC  0E1D               	movlw	29
   774  0002CE  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
   775  0002D0  C01B  F104         	movff	_ValoresAD+2,EscreverDWINram@valor
   776  0002D4  C01C  F105         	movff	_ValoresAD+3,EscreverDWINram@valor+1
   777  0002D8  EC2B  F009         	call	_EscreverDWINram	;wreg free
   778                           
   779                           ;main.c: 560: EscreverDWINram(0x1E,ValoresAD[2]);
   780  0002DC  0E00               	movlw	0
   781  0002DE  0101               	movlb	1	; () banked
   782  0002E0  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
   783  0002E2  0E1E               	movlw	30
   784  0002E4  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
   785  0002E6  C01D  F104         	movff	_ValoresAD+4,EscreverDWINram@valor
   786  0002EA  C01E  F105         	movff	_ValoresAD+5,EscreverDWINram@valor+1
   787  0002EE  EC2B  F009         	call	_EscreverDWINram	;wreg free
   788                           
   789                           ;main.c: 561: PressaommCA = ValoresAD[3];
   790  0002F2  C01F  F0B8         	movff	_ValoresAD+6,_PressaommCA
   791  0002F6  C020  F0B9         	movff	_ValoresAD+7,_PressaommCA+1
   792  0002FA  0100               	movlb	0	; () banked
   793  0002FC  6BBA               	clrf	(_PressaommCA+2)& (0+255),b
   794  0002FE  6BBB               	clrf	(_PressaommCA+3)& (0+255),b
   795                           
   796                           ; BSR set to: 0
   797                           ;main.c: 563: EscreverDWINram(0x1F,PressaommCA);
   798  000300  0E00               	movlw	0
   799  000302  0101               	movlb	1	; () banked
   800  000304  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
   801  000306  0E1F               	movlw	31
   802  000308  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
   803  00030A  C0B8  F104         	movff	_PressaommCA,EscreverDWINram@valor
   804  00030E  C0B9  F105         	movff	_PressaommCA+1,EscreverDWINram@valor+1
   805  000312  EC2B  F009         	call	_EscreverDWINram	;wreg free
   806  000316  D000               	goto	l3157
   807  000318                     l3157:
   808                           
   809                           ;main.c: 564: }
   810                           ;main.c: 566: if(TelaAtual == 8){
   811  000318  0E08               	movlw	8
   812  00031A  0101               	movlb	1	; () banked
   813  00031C  1911               	xorwf	main@TelaAtual& (0+255),w,b
   814  00031E  A4D8               	btfss	status,2,c
   815  000320  D075               	goto	l259
   816                           
   817                           ; BSR set to: 1
   818                           ;main.c: 567: EscreverDWINram(0x20,CCPR2L-1);
   819  000322  0E00               	movlw	0
   820  000324  0101               	movlb	1	; () banked
   821  000326  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
   822  000328  0E20               	movlw	32
   823  00032A  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
   824  00032C  0EFF               	movlw	255
   825  00032E  24BB               	addwf	4027,w,c	;volatile
   826  000330  0101               	movlb	1	; () banked
   827  000332  6F04               	movwf	EscreverDWINram@valor& (0+255),b
   828  000334  0101               	movlb	1	; () banked
   829  000336  6B05               	clrf	(EscreverDWINram@valor+1)& (0+255),b
   830  000338  0EFF               	movlw	255
   831  00033A  2305               	addwfc	(EscreverDWINram@valor+1)& (0+255),f,b
   832  00033C  EC2B  F009         	call	_EscreverDWINram	;wreg free
   833                           
   834                           ;main.c: 568: diminui = LerDWINram(0x0021);
   835  000340  0E00               	movlw	0
   836  000342  0101               	movlb	1	; () banked
   837  000344  6F03               	movwf	(LerDWINram@endereco+1)& (0+255),b
   838  000346  0E21               	movlw	33
   839  000348  6F02               	movwf	LerDWINram@endereco& (0+255),b
   840  00034A  EC18  F008         	call	_LerDWINram	;wreg free
   841  00034E  C102  F109         	movff	?_LerDWINram,main@diminui
   842  000352  C103  F10A         	movff	?_LerDWINram+1,main@diminui+1
   843                           
   844                           ;main.c: 569: if(diminui > 0){
   845  000356  0101               	movlb	1	; () banked
   846  000358  5109               	movf	main@diminui& (0+255),w,b
   847  00035A  0101               	movlb	1	; () banked
   848  00035C  110A               	iorwf	(main@diminui+1)& (0+255),w,b
   849  00035E  B4D8               	btfsc	status,2,c
   850  000360  D022               	goto	l3171
   851                           
   852                           ; BSR set to: 1
   853                           ;main.c: 570: if(CCPR2L>10){
   854  000362  0E0A               	movlw	10
   855  000364  64BB               	cpfsgt	4027,c	;volatile
   856  000366  D012               	goto	l3169
   857                           
   858                           ; BSR set to: 1
   859                           ;main.c: 571: CCPR2L -= 10;
   860  000368  0E0A               	movlw	10
   861  00036A  5EBB               	subwf	4027,f,c	;volatile
   862                           
   863                           ; BSR set to: 1
   864                           ;main.c: 572: EscreverDWINram(0x20,CCPR2L-1);
   865  00036C  0E00               	movlw	0
   866  00036E  0101               	movlb	1	; () banked
   867  000370  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
   868  000372  0E20               	movlw	32
   869  000374  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
   870  000376  0EFF               	movlw	255
   871  000378  24BB               	addwf	4027,w,c	;volatile
   872  00037A  0101               	movlb	1	; () banked
   873  00037C  6F04               	movwf	EscreverDWINram@valor& (0+255),b
   874  00037E  0101               	movlb	1	; () banked
   875  000380  6B05               	clrf	(EscreverDWINram@valor+1)& (0+255),b
   876  000382  0EFF               	movlw	255
   877  000384  2305               	addwfc	(EscreverDWINram@valor+1)& (0+255),f,b
   878  000386  EC2B  F009         	call	_EscreverDWINram	;wreg free
   879  00038A  D000               	goto	l3169
   880  00038C                     l3169:
   881                           
   882                           ;main.c: 573: }
   883                           ;main.c: 574: EscreverDWINram(0x21,0);
   884  00038C  0E00               	movlw	0
   885  00038E  0101               	movlb	1	; () banked
   886  000390  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
   887  000392  0E21               	movlw	33
   888  000394  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
   889  000396  0E00               	movlw	0
   890  000398  0101               	movlb	1	; () banked
   891  00039A  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
   892  00039C  0E00               	movlw	0
   893  00039E  6F04               	movwf	EscreverDWINram@valor& (0+255),b
   894  0003A0  EC2B  F009         	call	_EscreverDWINram	;wreg free
   895  0003A4  D000               	goto	l3171
   896  0003A6                     l3171:
   897                           
   898                           ;main.c: 575: }
   899                           ;main.c: 577: aumenta = LerDWINram(0x0022);
   900  0003A6  0E00               	movlw	0
   901  0003A8  0101               	movlb	1	; () banked
   902  0003AA  6F03               	movwf	(LerDWINram@endereco+1)& (0+255),b
   903  0003AC  0E22               	movlw	34
   904  0003AE  6F02               	movwf	LerDWINram@endereco& (0+255),b
   905  0003B0  EC18  F008         	call	_LerDWINram	;wreg free
   906  0003B4  C102  F10B         	movff	?_LerDWINram,main@aumenta
   907  0003B8  C103  F10C         	movff	?_LerDWINram+1,main@aumenta+1
   908                           
   909                           ;main.c: 578: if(aumenta > 0){
   910  0003BC  0101               	movlb	1	; () banked
   911  0003BE  510B               	movf	main@aumenta& (0+255),w,b
   912  0003C0  0101               	movlb	1	; () banked
   913  0003C2  110C               	iorwf	(main@aumenta+1)& (0+255),w,b
   914  0003C4  B4D8               	btfsc	status,2,c
   915  0003C6  D022               	goto	l259
   916                           
   917                           ; BSR set to: 1
   918                           ;main.c: 579: if(CCPR2L<91){
   919  0003C8  0E5B               	movlw	91
   920  0003CA  60BB               	cpfslt	4027,c	;volatile
   921  0003CC  D012               	goto	l3181
   922                           
   923                           ; BSR set to: 1
   924                           ;main.c: 580: CCPR2L += 10;
   925  0003CE  0E0A               	movlw	10
   926  0003D0  26BB               	addwf	4027,f,c	;volatile
   927                           
   928                           ; BSR set to: 1
   929                           ;main.c: 581: EscreverDWINram(0x20,CCPR2L-1);
   930  0003D2  0E00               	movlw	0
   931  0003D4  0101               	movlb	1	; () banked
   932  0003D6  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
   933  0003D8  0E20               	movlw	32
   934  0003DA  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
   935  0003DC  0EFF               	movlw	255
   936  0003DE  24BB               	addwf	4027,w,c	;volatile
   937  0003E0  0101               	movlb	1	; () banked
   938  0003E2  6F04               	movwf	EscreverDWINram@valor& (0+255),b
   939  0003E4  0101               	movlb	1	; () banked
   940  0003E6  6B05               	clrf	(EscreverDWINram@valor+1)& (0+255),b
   941  0003E8  0EFF               	movlw	255
   942  0003EA  2305               	addwfc	(EscreverDWINram@valor+1)& (0+255),f,b
   943  0003EC  EC2B  F009         	call	_EscreverDWINram	;wreg free
   944  0003F0  D000               	goto	l3181
   945  0003F2                     l3181:
   946                           
   947                           ;main.c: 582: }
   948                           ;main.c: 583: EscreverDWINram(0x22,0);
   949  0003F2  0E00               	movlw	0
   950  0003F4  0101               	movlb	1	; () banked
   951  0003F6  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
   952  0003F8  0E22               	movlw	34
   953  0003FA  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
   954  0003FC  0E00               	movlw	0
   955  0003FE  0101               	movlb	1	; () banked
   956  000400  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
   957  000402  0E00               	movlw	0
   958  000404  6F04               	movwf	EscreverDWINram@valor& (0+255),b
   959  000406  EC2B  F009         	call	_EscreverDWINram	;wreg free
   960  00040A  D000               	goto	l259
   961  00040C                     l259:
   962                           
   963                           ;main.c: 584: }
   964                           ;main.c: 585: }
   965                           ;main.c: 587: if(TelaAtual == 1){
   966  00040C  0101               	movlb	1	; () banked
   967  00040E  0511               	decf	main@TelaAtual& (0+255),w,b
   968  000410  A4D8               	btfss	status,2,c
   969  000412  D120               	goto	l3243
   970                           
   971                           ; BSR set to: 1
   972                           ;main.c: 588: if(IN0)
   973  000414  A044               	btfss	_IN0/(0+8),_IN0& (0+7),c
   974  000416  D00D               	goto	l3187
   975                           
   976                           ; BSR set to: 1
   977                           ;main.c: 589: EscreverDWINram(0x80,1);
   978  000418  0E00               	movlw	0
   979  00041A  0101               	movlb	1	; () banked
   980  00041C  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
   981  00041E  0E80               	movlw	128
   982  000420  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
   983  000422  0E00               	movlw	0
   984  000424  0101               	movlb	1	; () banked
   985  000426  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
   986  000428  0E01               	movlw	1
   987  00042A  6F04               	movwf	EscreverDWINram@valor& (0+255),b
   988  00042C  EC2B  F009         	call	_EscreverDWINram	;wreg free
   989  000430  D00D               	goto	l3189
   990  000432                     l3187:
   991                           
   992                           ;main.c: 590: else
   993                           ;main.c: 591: EscreverDWINram(0x80,0);
   994  000432  0E00               	movlw	0
   995  000434  0101               	movlb	1	; () banked
   996  000436  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
   997  000438  0E80               	movlw	128
   998  00043A  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
   999  00043C  0E00               	movlw	0
  1000  00043E  0101               	movlb	1	; () banked
  1001  000440  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1002  000442  0E00               	movlw	0
  1003  000444  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1004  000446  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1005  00044A  D000               	goto	l3189
  1006  00044C                     l3189:
  1007                           
  1008                           ;main.c: 592: if(IN1)
  1009  00044C  A244               	btfss	_IN1/(0+8),_IN1& (0+7),c
  1010  00044E  D00D               	goto	l3193
  1011                           
  1012                           ;main.c: 593: EscreverDWINram(0x81,1);
  1013  000450  0E00               	movlw	0
  1014  000452  0101               	movlb	1	; () banked
  1015  000454  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1016  000456  0E81               	movlw	129
  1017  000458  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1018  00045A  0E00               	movlw	0
  1019  00045C  0101               	movlb	1	; () banked
  1020  00045E  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1021  000460  0E01               	movlw	1
  1022  000462  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1023  000464  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1024  000468  D00D               	goto	l3195
  1025  00046A                     l3193:
  1026                           
  1027                           ;main.c: 594: else
  1028                           ;main.c: 595: EscreverDWINram(0x81,0);
  1029  00046A  0E00               	movlw	0
  1030  00046C  0101               	movlb	1	; () banked
  1031  00046E  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1032  000470  0E81               	movlw	129
  1033  000472  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1034  000474  0E00               	movlw	0
  1035  000476  0101               	movlb	1	; () banked
  1036  000478  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1037  00047A  0E00               	movlw	0
  1038  00047C  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1039  00047E  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1040  000482  D000               	goto	l3195
  1041  000484                     l3195:
  1042                           
  1043                           ;main.c: 596: if(( (Inputs2to9 & 1) ? (1) : (0) ))
  1044  000484  0100               	movlb	0	; () banked
  1045  000486  A1C0               	btfss	_Inputs2to9& (0+255),0,b
  1046  000488  D00D               	goto	l3199
  1047                           
  1048                           ; BSR set to: 0
  1049                           ;main.c: 597: EscreverDWINram(0x82,1);
  1050  00048A  0E00               	movlw	0
  1051  00048C  0101               	movlb	1	; () banked
  1052  00048E  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1053  000490  0E82               	movlw	130
  1054  000492  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1055  000494  0E00               	movlw	0
  1056  000496  0101               	movlb	1	; () banked
  1057  000498  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1058  00049A  0E01               	movlw	1
  1059  00049C  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1060  00049E  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1061  0004A2  D00D               	goto	l3201
  1062  0004A4                     l3199:
  1063                           
  1064                           ;main.c: 598: else
  1065                           ;main.c: 599: EscreverDWINram(0x82,0);
  1066  0004A4  0E00               	movlw	0
  1067  0004A6  0101               	movlb	1	; () banked
  1068  0004A8  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1069  0004AA  0E82               	movlw	130
  1070  0004AC  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1071  0004AE  0E00               	movlw	0
  1072  0004B0  0101               	movlb	1	; () banked
  1073  0004B2  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1074  0004B4  0E00               	movlw	0
  1075  0004B6  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1076  0004B8  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1077  0004BC  D000               	goto	l3201
  1078  0004BE                     l3201:
  1079                           
  1080                           ;main.c: 600: if(( (Inputs2to9 & 2) ? (1) : (0) ))
  1081  0004BE  0100               	movlb	0	; () banked
  1082  0004C0  A3C0               	btfss	_Inputs2to9& (0+255),1,b
  1083  0004C2  D00D               	goto	l3205
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;main.c: 601: EscreverDWINram(0x83,1);
  1087  0004C4  0E00               	movlw	0
  1088  0004C6  0101               	movlb	1	; () banked
  1089  0004C8  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1090  0004CA  0E83               	movlw	131
  1091  0004CC  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1092  0004CE  0E00               	movlw	0
  1093  0004D0  0101               	movlb	1	; () banked
  1094  0004D2  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1095  0004D4  0E01               	movlw	1
  1096  0004D6  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1097  0004D8  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1098  0004DC  D00D               	goto	l3207
  1099  0004DE                     l3205:
  1100                           
  1101                           ;main.c: 602: else
  1102                           ;main.c: 603: EscreverDWINram(0x83,0);
  1103  0004DE  0E00               	movlw	0
  1104  0004E0  0101               	movlb	1	; () banked
  1105  0004E2  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1106  0004E4  0E83               	movlw	131
  1107  0004E6  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1108  0004E8  0E00               	movlw	0
  1109  0004EA  0101               	movlb	1	; () banked
  1110  0004EC  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1111  0004EE  0E00               	movlw	0
  1112  0004F0  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1113  0004F2  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1114  0004F6  D000               	goto	l3207
  1115  0004F8                     l3207:
  1116                           
  1117                           ;main.c: 604: if(( (Inputs2to9 & 4) ? (1) : (0) ))
  1118  0004F8  0100               	movlb	0	; () banked
  1119  0004FA  A5C0               	btfss	_Inputs2to9& (0+255),2,b
  1120  0004FC  D00D               	goto	l3211
  1121                           
  1122                           ; BSR set to: 0
  1123                           ;main.c: 605: EscreverDWINram(0x84,1);
  1124  0004FE  0E00               	movlw	0
  1125  000500  0101               	movlb	1	; () banked
  1126  000502  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1127  000504  0E84               	movlw	132
  1128  000506  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1129  000508  0E00               	movlw	0
  1130  00050A  0101               	movlb	1	; () banked
  1131  00050C  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1132  00050E  0E01               	movlw	1
  1133  000510  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1134  000512  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1135  000516  D00D               	goto	l3213
  1136  000518                     l3211:
  1137                           
  1138                           ;main.c: 606: else
  1139                           ;main.c: 607: EscreverDWINram(0x84,0);
  1140  000518  0E00               	movlw	0
  1141  00051A  0101               	movlb	1	; () banked
  1142  00051C  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1143  00051E  0E84               	movlw	132
  1144  000520  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1145  000522  0E00               	movlw	0
  1146  000524  0101               	movlb	1	; () banked
  1147  000526  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1148  000528  0E00               	movlw	0
  1149  00052A  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1150  00052C  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1151  000530  D000               	goto	l3213
  1152  000532                     l3213:
  1153                           
  1154                           ;main.c: 608: if(( (Inputs2to9 & 8) ? (1) : (0) ))
  1155  000532  0100               	movlb	0	; () banked
  1156  000534  A7C0               	btfss	_Inputs2to9& (0+255),3,b
  1157  000536  D00D               	goto	l3217
  1158                           
  1159                           ; BSR set to: 0
  1160                           ;main.c: 609: EscreverDWINram(0x85,1);
  1161  000538  0E00               	movlw	0
  1162  00053A  0101               	movlb	1	; () banked
  1163  00053C  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1164  00053E  0E85               	movlw	133
  1165  000540  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1166  000542  0E00               	movlw	0
  1167  000544  0101               	movlb	1	; () banked
  1168  000546  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1169  000548  0E01               	movlw	1
  1170  00054A  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1171  00054C  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1172  000550  D00D               	goto	l3219
  1173  000552                     l3217:
  1174                           
  1175                           ;main.c: 610: else
  1176                           ;main.c: 611: EscreverDWINram(0x85,0);
  1177  000552  0E00               	movlw	0
  1178  000554  0101               	movlb	1	; () banked
  1179  000556  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1180  000558  0E85               	movlw	133
  1181  00055A  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1182  00055C  0E00               	movlw	0
  1183  00055E  0101               	movlb	1	; () banked
  1184  000560  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1185  000562  0E00               	movlw	0
  1186  000564  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1187  000566  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1188  00056A  D000               	goto	l3219
  1189  00056C                     l3219:
  1190                           
  1191                           ;main.c: 612: if(( (Inputs2to9 & 16) ? (1) : (0) ))
  1192  00056C  0100               	movlb	0	; () banked
  1193  00056E  A9C0               	btfss	_Inputs2to9& (0+255),4,b
  1194  000570  D00D               	goto	l3223
  1195                           
  1196                           ; BSR set to: 0
  1197                           ;main.c: 613: EscreverDWINram(0x86,1);
  1198  000572  0E00               	movlw	0
  1199  000574  0101               	movlb	1	; () banked
  1200  000576  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1201  000578  0E86               	movlw	134
  1202  00057A  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1203  00057C  0E00               	movlw	0
  1204  00057E  0101               	movlb	1	; () banked
  1205  000580  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1206  000582  0E01               	movlw	1
  1207  000584  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1208  000586  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1209  00058A  D00D               	goto	l3225
  1210  00058C                     l3223:
  1211                           
  1212                           ;main.c: 614: else
  1213                           ;main.c: 615: EscreverDWINram(0x86,0);
  1214  00058C  0E00               	movlw	0
  1215  00058E  0101               	movlb	1	; () banked
  1216  000590  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1217  000592  0E86               	movlw	134
  1218  000594  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1219  000596  0E00               	movlw	0
  1220  000598  0101               	movlb	1	; () banked
  1221  00059A  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1222  00059C  0E00               	movlw	0
  1223  00059E  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1224  0005A0  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1225  0005A4  D000               	goto	l3225
  1226  0005A6                     l3225:
  1227                           
  1228                           ;main.c: 616: if(( (Inputs2to9 & 32) ? (1) : (0) ))
  1229  0005A6  0100               	movlb	0	; () banked
  1230  0005A8  ABC0               	btfss	_Inputs2to9& (0+255),5,b
  1231  0005AA  D00D               	goto	l3229
  1232                           
  1233                           ; BSR set to: 0
  1234                           ;main.c: 617: EscreverDWINram(0x87,1);
  1235  0005AC  0E00               	movlw	0
  1236  0005AE  0101               	movlb	1	; () banked
  1237  0005B0  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1238  0005B2  0E87               	movlw	135
  1239  0005B4  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1240  0005B6  0E00               	movlw	0
  1241  0005B8  0101               	movlb	1	; () banked
  1242  0005BA  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1243  0005BC  0E01               	movlw	1
  1244  0005BE  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1245  0005C0  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1246  0005C4  D00D               	goto	l3231
  1247  0005C6                     l3229:
  1248                           
  1249                           ;main.c: 618: else
  1250                           ;main.c: 619: EscreverDWINram(0x87,0);
  1251  0005C6  0E00               	movlw	0
  1252  0005C8  0101               	movlb	1	; () banked
  1253  0005CA  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1254  0005CC  0E87               	movlw	135
  1255  0005CE  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1256  0005D0  0E00               	movlw	0
  1257  0005D2  0101               	movlb	1	; () banked
  1258  0005D4  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1259  0005D6  0E00               	movlw	0
  1260  0005D8  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1261  0005DA  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1262  0005DE  D000               	goto	l3231
  1263  0005E0                     l3231:
  1264                           
  1265                           ;main.c: 620: if(( (Inputs2to9 & 64) ? (1) : (0) ))
  1266  0005E0  0100               	movlb	0	; () banked
  1267  0005E2  ADC0               	btfss	_Inputs2to9& (0+255),6,b
  1268  0005E4  D00D               	goto	l3235
  1269                           
  1270                           ; BSR set to: 0
  1271                           ;main.c: 621: EscreverDWINram(0x88,1);
  1272  0005E6  0E00               	movlw	0
  1273  0005E8  0101               	movlb	1	; () banked
  1274  0005EA  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1275  0005EC  0E88               	movlw	136
  1276  0005EE  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1277  0005F0  0E00               	movlw	0
  1278  0005F2  0101               	movlb	1	; () banked
  1279  0005F4  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1280  0005F6  0E01               	movlw	1
  1281  0005F8  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1282  0005FA  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1283  0005FE  D00D               	goto	l3237
  1284  000600                     l3235:
  1285                           
  1286                           ;main.c: 622: else
  1287                           ;main.c: 623: EscreverDWINram(0x88,0);
  1288  000600  0E00               	movlw	0
  1289  000602  0101               	movlb	1	; () banked
  1290  000604  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1291  000606  0E88               	movlw	136
  1292  000608  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1293  00060A  0E00               	movlw	0
  1294  00060C  0101               	movlb	1	; () banked
  1295  00060E  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1296  000610  0E00               	movlw	0
  1297  000612  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1298  000614  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1299  000618  D000               	goto	l3237
  1300  00061A                     l3237:
  1301                           
  1302                           ;main.c: 624: if(( (Inputs2to9 & 128) ? (1) : (0) ))
  1303  00061A  0100               	movlb	0	; () banked
  1304  00061C  AFC0               	btfss	_Inputs2to9& (0+255),7,b
  1305  00061E  D00D               	goto	l3241
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;main.c: 625: EscreverDWINram(0x89,1);
  1309  000620  0E00               	movlw	0
  1310  000622  0101               	movlb	1	; () banked
  1311  000624  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1312  000626  0E89               	movlw	137
  1313  000628  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1314  00062A  0E00               	movlw	0
  1315  00062C  0101               	movlb	1	; () banked
  1316  00062E  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1317  000630  0E01               	movlw	1
  1318  000632  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1319  000634  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1320  000638  D00D               	goto	l3243
  1321  00063A                     l3241:
  1322                           
  1323                           ;main.c: 626: else
  1324                           ;main.c: 627: EscreverDWINram(0x89,0);
  1325  00063A  0E00               	movlw	0
  1326  00063C  0101               	movlb	1	; () banked
  1327  00063E  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1328  000640  0E89               	movlw	137
  1329  000642  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1330  000644  0E00               	movlw	0
  1331  000646  0101               	movlb	1	; () banked
  1332  000648  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1333  00064A  0E00               	movlw	0
  1334  00064C  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1335  00064E  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1336  000652  D000               	goto	l3243
  1337  000654                     l3243:
  1338                           
  1339                           ;main.c: 628: }
  1340                           ;main.c: 629: if(TelaAtual == 2){
  1341  000654  0E02               	movlw	2
  1342  000656  0101               	movlb	1	; () banked
  1343  000658  1911               	xorwf	main@TelaAtual& (0+255),w,b
  1344  00065A  A4D8               	btfss	status,2,c
  1345  00065C  D0E8               	goto	l3293
  1346                           
  1347                           ; BSR set to: 1
  1348                           ;main.c: 630: if(( (Inputs10to17 & 1) ? (1) : (0) ))
  1349  00065E  0100               	movlb	0	; () banked
  1350  000660  A1BE               	btfss	_Inputs10to17& (0+255),0,b
  1351  000662  D00D               	goto	l3249
  1352                           
  1353                           ; BSR set to: 0
  1354                           ;main.c: 631: EscreverDWINram(0x8A,1);
  1355  000664  0E00               	movlw	0
  1356  000666  0101               	movlb	1	; () banked
  1357  000668  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1358  00066A  0E8A               	movlw	138
  1359  00066C  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1360  00066E  0E00               	movlw	0
  1361  000670  0101               	movlb	1	; () banked
  1362  000672  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1363  000674  0E01               	movlw	1
  1364  000676  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1365  000678  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1366  00067C  D00D               	goto	l3251
  1367  00067E                     l3249:
  1368                           
  1369                           ;main.c: 632: else
  1370                           ;main.c: 633: EscreverDWINram(0x8A,0);
  1371  00067E  0E00               	movlw	0
  1372  000680  0101               	movlb	1	; () banked
  1373  000682  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1374  000684  0E8A               	movlw	138
  1375  000686  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1376  000688  0E00               	movlw	0
  1377  00068A  0101               	movlb	1	; () banked
  1378  00068C  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1379  00068E  0E00               	movlw	0
  1380  000690  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1381  000692  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1382  000696  D000               	goto	l3251
  1383  000698                     l3251:
  1384                           
  1385                           ;main.c: 634: if(( (Inputs10to17 & 2) ? (1) : (0) ))
  1386  000698  0100               	movlb	0	; () banked
  1387  00069A  A3BE               	btfss	_Inputs10to17& (0+255),1,b
  1388  00069C  D00D               	goto	l3255
  1389                           
  1390                           ; BSR set to: 0
  1391                           ;main.c: 635: EscreverDWINram(0x8B,1);
  1392  00069E  0E00               	movlw	0
  1393  0006A0  0101               	movlb	1	; () banked
  1394  0006A2  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1395  0006A4  0E8B               	movlw	139
  1396  0006A6  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1397  0006A8  0E00               	movlw	0
  1398  0006AA  0101               	movlb	1	; () banked
  1399  0006AC  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1400  0006AE  0E01               	movlw	1
  1401  0006B0  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1402  0006B2  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1403  0006B6  D00D               	goto	l3257
  1404  0006B8                     l3255:
  1405                           
  1406                           ;main.c: 636: else
  1407                           ;main.c: 637: EscreverDWINram(0x8B,0);
  1408  0006B8  0E00               	movlw	0
  1409  0006BA  0101               	movlb	1	; () banked
  1410  0006BC  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1411  0006BE  0E8B               	movlw	139
  1412  0006C0  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1413  0006C2  0E00               	movlw	0
  1414  0006C4  0101               	movlb	1	; () banked
  1415  0006C6  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1416  0006C8  0E00               	movlw	0
  1417  0006CA  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1418  0006CC  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1419  0006D0  D000               	goto	l3257
  1420  0006D2                     l3257:
  1421                           
  1422                           ;main.c: 638: if(( (Inputs10to17 & 4) ? (1) : (0) ))
  1423  0006D2  0100               	movlb	0	; () banked
  1424  0006D4  A5BE               	btfss	_Inputs10to17& (0+255),2,b
  1425  0006D6  D00D               	goto	l3261
  1426                           
  1427                           ; BSR set to: 0
  1428                           ;main.c: 639: EscreverDWINram(0x8C,1);
  1429  0006D8  0E00               	movlw	0
  1430  0006DA  0101               	movlb	1	; () banked
  1431  0006DC  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1432  0006DE  0E8C               	movlw	140
  1433  0006E0  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1434  0006E2  0E00               	movlw	0
  1435  0006E4  0101               	movlb	1	; () banked
  1436  0006E6  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1437  0006E8  0E01               	movlw	1
  1438  0006EA  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1439  0006EC  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1440  0006F0  D00D               	goto	l3263
  1441  0006F2                     l3261:
  1442                           
  1443                           ;main.c: 640: else
  1444                           ;main.c: 641: EscreverDWINram(0x8C,0);
  1445  0006F2  0E00               	movlw	0
  1446  0006F4  0101               	movlb	1	; () banked
  1447  0006F6  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1448  0006F8  0E8C               	movlw	140
  1449  0006FA  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1450  0006FC  0E00               	movlw	0
  1451  0006FE  0101               	movlb	1	; () banked
  1452  000700  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1453  000702  0E00               	movlw	0
  1454  000704  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1455  000706  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1456  00070A  D000               	goto	l3263
  1457  00070C                     l3263:
  1458                           
  1459                           ;main.c: 642: if(( (Inputs10to17 & 8) ? (1) : (0) ))
  1460  00070C  0100               	movlb	0	; () banked
  1461  00070E  A7BE               	btfss	_Inputs10to17& (0+255),3,b
  1462  000710  D00D               	goto	l3267
  1463                           
  1464                           ; BSR set to: 0
  1465                           ;main.c: 643: EscreverDWINram(0x8D,1);
  1466  000712  0E00               	movlw	0
  1467  000714  0101               	movlb	1	; () banked
  1468  000716  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1469  000718  0E8D               	movlw	141
  1470  00071A  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1471  00071C  0E00               	movlw	0
  1472  00071E  0101               	movlb	1	; () banked
  1473  000720  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1474  000722  0E01               	movlw	1
  1475  000724  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1476  000726  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1477  00072A  D00D               	goto	l3269
  1478  00072C                     l3267:
  1479                           
  1480                           ;main.c: 644: else
  1481                           ;main.c: 645: EscreverDWINram(0x8D,0);
  1482  00072C  0E00               	movlw	0
  1483  00072E  0101               	movlb	1	; () banked
  1484  000730  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1485  000732  0E8D               	movlw	141
  1486  000734  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1487  000736  0E00               	movlw	0
  1488  000738  0101               	movlb	1	; () banked
  1489  00073A  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1490  00073C  0E00               	movlw	0
  1491  00073E  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1492  000740  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1493  000744  D000               	goto	l3269
  1494  000746                     l3269:
  1495                           
  1496                           ;main.c: 646: if(( (Inputs10to17 & 16) ? (1) : (0) ))
  1497  000746  0100               	movlb	0	; () banked
  1498  000748  A9BE               	btfss	_Inputs10to17& (0+255),4,b
  1499  00074A  D00D               	goto	l3273
  1500                           
  1501                           ; BSR set to: 0
  1502                           ;main.c: 647: EscreverDWINram(0x8E,1);
  1503  00074C  0E00               	movlw	0
  1504  00074E  0101               	movlb	1	; () banked
  1505  000750  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1506  000752  0E8E               	movlw	142
  1507  000754  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1508  000756  0E00               	movlw	0
  1509  000758  0101               	movlb	1	; () banked
  1510  00075A  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1511  00075C  0E01               	movlw	1
  1512  00075E  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1513  000760  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1514  000764  D00D               	goto	l3275
  1515  000766                     l3273:
  1516                           
  1517                           ;main.c: 648: else
  1518                           ;main.c: 649: EscreverDWINram(0x8E,0);
  1519  000766  0E00               	movlw	0
  1520  000768  0101               	movlb	1	; () banked
  1521  00076A  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1522  00076C  0E8E               	movlw	142
  1523  00076E  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1524  000770  0E00               	movlw	0
  1525  000772  0101               	movlb	1	; () banked
  1526  000774  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1527  000776  0E00               	movlw	0
  1528  000778  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1529  00077A  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1530  00077E  D000               	goto	l3275
  1531  000780                     l3275:
  1532                           
  1533                           ;main.c: 650: if(( (Inputs10to17 & 32) ? (1) : (0) ))
  1534  000780  0100               	movlb	0	; () banked
  1535  000782  ABBE               	btfss	_Inputs10to17& (0+255),5,b
  1536  000784  D00D               	goto	l3279
  1537                           
  1538                           ; BSR set to: 0
  1539                           ;main.c: 651: EscreverDWINram(0x8F,1);
  1540  000786  0E00               	movlw	0
  1541  000788  0101               	movlb	1	; () banked
  1542  00078A  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1543  00078C  0E8F               	movlw	143
  1544  00078E  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1545  000790  0E00               	movlw	0
  1546  000792  0101               	movlb	1	; () banked
  1547  000794  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1548  000796  0E01               	movlw	1
  1549  000798  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1550  00079A  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1551  00079E  D00D               	goto	l3281
  1552  0007A0                     l3279:
  1553                           
  1554                           ;main.c: 652: else
  1555                           ;main.c: 653: EscreverDWINram(0x8F,0);
  1556  0007A0  0E00               	movlw	0
  1557  0007A2  0101               	movlb	1	; () banked
  1558  0007A4  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1559  0007A6  0E8F               	movlw	143
  1560  0007A8  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1561  0007AA  0E00               	movlw	0
  1562  0007AC  0101               	movlb	1	; () banked
  1563  0007AE  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1564  0007B0  0E00               	movlw	0
  1565  0007B2  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1566  0007B4  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1567  0007B8  D000               	goto	l3281
  1568  0007BA                     l3281:
  1569                           
  1570                           ;main.c: 654: if(( (Inputs10to17 & 64) ? (1) : (0) ))
  1571  0007BA  0100               	movlb	0	; () banked
  1572  0007BC  ADBE               	btfss	_Inputs10to17& (0+255),6,b
  1573  0007BE  D00D               	goto	l3285
  1574                           
  1575                           ; BSR set to: 0
  1576                           ;main.c: 655: EscreverDWINram(0x90,1);
  1577  0007C0  0E00               	movlw	0
  1578  0007C2  0101               	movlb	1	; () banked
  1579  0007C4  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1580  0007C6  0E90               	movlw	144
  1581  0007C8  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1582  0007CA  0E00               	movlw	0
  1583  0007CC  0101               	movlb	1	; () banked
  1584  0007CE  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1585  0007D0  0E01               	movlw	1
  1586  0007D2  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1587  0007D4  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1588  0007D8  D00D               	goto	l3287
  1589  0007DA                     l3285:
  1590                           
  1591                           ;main.c: 656: else
  1592                           ;main.c: 657: EscreverDWINram(0x90,0);
  1593  0007DA  0E00               	movlw	0
  1594  0007DC  0101               	movlb	1	; () banked
  1595  0007DE  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1596  0007E0  0E90               	movlw	144
  1597  0007E2  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1598  0007E4  0E00               	movlw	0
  1599  0007E6  0101               	movlb	1	; () banked
  1600  0007E8  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1601  0007EA  0E00               	movlw	0
  1602  0007EC  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1603  0007EE  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1604  0007F2  D000               	goto	l3287
  1605  0007F4                     l3287:
  1606                           
  1607                           ;main.c: 658: if(( (Inputs10to17 & 128) ? (1) : (0) ))
  1608  0007F4  0100               	movlb	0	; () banked
  1609  0007F6  AFBE               	btfss	_Inputs10to17& (0+255),7,b
  1610  0007F8  D00D               	goto	l3291
  1611                           
  1612                           ; BSR set to: 0
  1613                           ;main.c: 659: EscreverDWINram(0x91,1);
  1614  0007FA  0E00               	movlw	0
  1615  0007FC  0101               	movlb	1	; () banked
  1616  0007FE  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1617  000800  0E91               	movlw	145
  1618  000802  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1619  000804  0E00               	movlw	0
  1620  000806  0101               	movlb	1	; () banked
  1621  000808  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1622  00080A  0E01               	movlw	1
  1623  00080C  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1624  00080E  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1625  000812  D00D               	goto	l3293
  1626  000814                     l3291:
  1627                           
  1628                           ;main.c: 660: else
  1629                           ;main.c: 661: EscreverDWINram(0x91,0);
  1630  000814  0E00               	movlw	0
  1631  000816  0101               	movlb	1	; () banked
  1632  000818  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1633  00081A  0E91               	movlw	145
  1634  00081C  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1635  00081E  0E00               	movlw	0
  1636  000820  0101               	movlb	1	; () banked
  1637  000822  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1638  000824  0E00               	movlw	0
  1639  000826  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1640  000828  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1641  00082C  D000               	goto	l3293
  1642  00082E                     l3293:
  1643                           
  1644                           ;main.c: 662: }
  1645                           ;main.c: 663: if(TelaAtual == 3){
  1646  00082E  0E03               	movlw	3
  1647  000830  0101               	movlb	1	; () banked
  1648  000832  1911               	xorwf	main@TelaAtual& (0+255),w,b
  1649  000834  A4D8               	btfss	status,2,c
  1650  000836  D0E8               	goto	l302
  1651                           
  1652                           ; BSR set to: 1
  1653                           ;main.c: 664: if(( (Inputs18to25 & 1) ? (1) : (0) ))
  1654  000838  0100               	movlb	0	; () banked
  1655  00083A  A1BF               	btfss	_Inputs18to25& (0+255),0,b
  1656  00083C  D00D               	goto	l3299
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;main.c: 665: EscreverDWINram(0x92,1);
  1660  00083E  0E00               	movlw	0
  1661  000840  0101               	movlb	1	; () banked
  1662  000842  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1663  000844  0E92               	movlw	146
  1664  000846  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1665  000848  0E00               	movlw	0
  1666  00084A  0101               	movlb	1	; () banked
  1667  00084C  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1668  00084E  0E01               	movlw	1
  1669  000850  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1670  000852  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1671  000856  D00D               	goto	l3301
  1672  000858                     l3299:
  1673                           
  1674                           ;main.c: 666: else
  1675                           ;main.c: 667: EscreverDWINram(0x92,0);
  1676  000858  0E00               	movlw	0
  1677  00085A  0101               	movlb	1	; () banked
  1678  00085C  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1679  00085E  0E92               	movlw	146
  1680  000860  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1681  000862  0E00               	movlw	0
  1682  000864  0101               	movlb	1	; () banked
  1683  000866  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1684  000868  0E00               	movlw	0
  1685  00086A  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1686  00086C  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1687  000870  D000               	goto	l3301
  1688  000872                     l3301:
  1689                           
  1690                           ;main.c: 668: if(( (Inputs18to25 & 2) ? (1) : (0) ))
  1691  000872  0100               	movlb	0	; () banked
  1692  000874  A3BF               	btfss	_Inputs18to25& (0+255),1,b
  1693  000876  D00D               	goto	l3305
  1694                           
  1695                           ; BSR set to: 0
  1696                           ;main.c: 669: EscreverDWINram(0x93,1);
  1697  000878  0E00               	movlw	0
  1698  00087A  0101               	movlb	1	; () banked
  1699  00087C  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1700  00087E  0E93               	movlw	147
  1701  000880  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1702  000882  0E00               	movlw	0
  1703  000884  0101               	movlb	1	; () banked
  1704  000886  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1705  000888  0E01               	movlw	1
  1706  00088A  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1707  00088C  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1708  000890  D00D               	goto	l3307
  1709  000892                     l3305:
  1710                           
  1711                           ;main.c: 670: else
  1712                           ;main.c: 671: EscreverDWINram(0x93,0);
  1713  000892  0E00               	movlw	0
  1714  000894  0101               	movlb	1	; () banked
  1715  000896  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1716  000898  0E93               	movlw	147
  1717  00089A  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1718  00089C  0E00               	movlw	0
  1719  00089E  0101               	movlb	1	; () banked
  1720  0008A0  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1721  0008A2  0E00               	movlw	0
  1722  0008A4  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1723  0008A6  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1724  0008AA  D000               	goto	l3307
  1725  0008AC                     l3307:
  1726                           
  1727                           ;main.c: 672: if(( (Inputs18to25 & 4) ? (1) : (0) ))
  1728  0008AC  0100               	movlb	0	; () banked
  1729  0008AE  A5BF               	btfss	_Inputs18to25& (0+255),2,b
  1730  0008B0  D00D               	goto	l3311
  1731                           
  1732                           ; BSR set to: 0
  1733                           ;main.c: 673: EscreverDWINram(0x94,1);
  1734  0008B2  0E00               	movlw	0
  1735  0008B4  0101               	movlb	1	; () banked
  1736  0008B6  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1737  0008B8  0E94               	movlw	148
  1738  0008BA  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1739  0008BC  0E00               	movlw	0
  1740  0008BE  0101               	movlb	1	; () banked
  1741  0008C0  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1742  0008C2  0E01               	movlw	1
  1743  0008C4  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1744  0008C6  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1745  0008CA  D00D               	goto	l3313
  1746  0008CC                     l3311:
  1747                           
  1748                           ;main.c: 674: else
  1749                           ;main.c: 675: EscreverDWINram(0x94,0);
  1750  0008CC  0E00               	movlw	0
  1751  0008CE  0101               	movlb	1	; () banked
  1752  0008D0  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1753  0008D2  0E94               	movlw	148
  1754  0008D4  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1755  0008D6  0E00               	movlw	0
  1756  0008D8  0101               	movlb	1	; () banked
  1757  0008DA  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1758  0008DC  0E00               	movlw	0
  1759  0008DE  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1760  0008E0  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1761  0008E4  D000               	goto	l3313
  1762  0008E6                     l3313:
  1763                           
  1764                           ;main.c: 676: if(( (Inputs18to25 & 8) ? (1) : (0) ))
  1765  0008E6  0100               	movlb	0	; () banked
  1766  0008E8  A7BF               	btfss	_Inputs18to25& (0+255),3,b
  1767  0008EA  D00D               	goto	l3317
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;main.c: 677: EscreverDWINram(0x95,1);
  1771  0008EC  0E00               	movlw	0
  1772  0008EE  0101               	movlb	1	; () banked
  1773  0008F0  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1774  0008F2  0E95               	movlw	149
  1775  0008F4  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1776  0008F6  0E00               	movlw	0
  1777  0008F8  0101               	movlb	1	; () banked
  1778  0008FA  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1779  0008FC  0E01               	movlw	1
  1780  0008FE  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1781  000900  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1782  000904  D00D               	goto	l3319
  1783  000906                     l3317:
  1784                           
  1785                           ;main.c: 678: else
  1786                           ;main.c: 679: EscreverDWINram(0x95,0);
  1787  000906  0E00               	movlw	0
  1788  000908  0101               	movlb	1	; () banked
  1789  00090A  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1790  00090C  0E95               	movlw	149
  1791  00090E  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1792  000910  0E00               	movlw	0
  1793  000912  0101               	movlb	1	; () banked
  1794  000914  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1795  000916  0E00               	movlw	0
  1796  000918  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1797  00091A  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1798  00091E  D000               	goto	l3319
  1799  000920                     l3319:
  1800                           
  1801                           ;main.c: 680: if(( (Inputs18to25 & 16) ? (1) : (0) ))
  1802  000920  0100               	movlb	0	; () banked
  1803  000922  A9BF               	btfss	_Inputs18to25& (0+255),4,b
  1804  000924  D00D               	goto	l3323
  1805                           
  1806                           ; BSR set to: 0
  1807                           ;main.c: 681: EscreverDWINram(0x96,1);
  1808  000926  0E00               	movlw	0
  1809  000928  0101               	movlb	1	; () banked
  1810  00092A  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1811  00092C  0E96               	movlw	150
  1812  00092E  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1813  000930  0E00               	movlw	0
  1814  000932  0101               	movlb	1	; () banked
  1815  000934  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1816  000936  0E01               	movlw	1
  1817  000938  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1818  00093A  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1819  00093E  D00D               	goto	l3325
  1820  000940                     l3323:
  1821                           
  1822                           ;main.c: 682: else
  1823                           ;main.c: 683: EscreverDWINram(0x96,0);
  1824  000940  0E00               	movlw	0
  1825  000942  0101               	movlb	1	; () banked
  1826  000944  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1827  000946  0E96               	movlw	150
  1828  000948  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1829  00094A  0E00               	movlw	0
  1830  00094C  0101               	movlb	1	; () banked
  1831  00094E  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1832  000950  0E00               	movlw	0
  1833  000952  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1834  000954  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1835  000958  D000               	goto	l3325
  1836  00095A                     l3325:
  1837                           
  1838                           ;main.c: 684: if(( (Inputs18to25 & 32) ? (1) : (0) ))
  1839  00095A  0100               	movlb	0	; () banked
  1840  00095C  ABBF               	btfss	_Inputs18to25& (0+255),5,b
  1841  00095E  D00D               	goto	l3329
  1842                           
  1843                           ; BSR set to: 0
  1844                           ;main.c: 685: EscreverDWINram(0x97,1);
  1845  000960  0E00               	movlw	0
  1846  000962  0101               	movlb	1	; () banked
  1847  000964  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1848  000966  0E97               	movlw	151
  1849  000968  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1850  00096A  0E00               	movlw	0
  1851  00096C  0101               	movlb	1	; () banked
  1852  00096E  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1853  000970  0E01               	movlw	1
  1854  000972  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1855  000974  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1856  000978  D00D               	goto	l3331
  1857  00097A                     l3329:
  1858                           
  1859                           ;main.c: 686: else
  1860                           ;main.c: 687: EscreverDWINram(0x97,0);
  1861  00097A  0E00               	movlw	0
  1862  00097C  0101               	movlb	1	; () banked
  1863  00097E  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1864  000980  0E97               	movlw	151
  1865  000982  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1866  000984  0E00               	movlw	0
  1867  000986  0101               	movlb	1	; () banked
  1868  000988  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1869  00098A  0E00               	movlw	0
  1870  00098C  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1871  00098E  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1872  000992  D000               	goto	l3331
  1873  000994                     l3331:
  1874                           
  1875                           ;main.c: 688: if(( (Inputs18to25 & 64) ? (1) : (0) ))
  1876  000994  0100               	movlb	0	; () banked
  1877  000996  ADBF               	btfss	_Inputs18to25& (0+255),6,b
  1878  000998  D00D               	goto	l3335
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;main.c: 689: EscreverDWINram(0x98,1);
  1882  00099A  0E00               	movlw	0
  1883  00099C  0101               	movlb	1	; () banked
  1884  00099E  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1885  0009A0  0E98               	movlw	152
  1886  0009A2  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1887  0009A4  0E00               	movlw	0
  1888  0009A6  0101               	movlb	1	; () banked
  1889  0009A8  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1890  0009AA  0E01               	movlw	1
  1891  0009AC  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1892  0009AE  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1893  0009B2  D00D               	goto	l3337
  1894  0009B4                     l3335:
  1895                           
  1896                           ;main.c: 690: else
  1897                           ;main.c: 691: EscreverDWINram(0x98,0);
  1898  0009B4  0E00               	movlw	0
  1899  0009B6  0101               	movlb	1	; () banked
  1900  0009B8  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1901  0009BA  0E98               	movlw	152
  1902  0009BC  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1903  0009BE  0E00               	movlw	0
  1904  0009C0  0101               	movlb	1	; () banked
  1905  0009C2  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1906  0009C4  0E00               	movlw	0
  1907  0009C6  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1908  0009C8  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1909  0009CC  D000               	goto	l3337
  1910  0009CE                     l3337:
  1911                           
  1912                           ;main.c: 692: if(( (Inputs18to25 & 128) ? (1) : (0) ))
  1913  0009CE  0100               	movlb	0	; () banked
  1914  0009D0  AFBF               	btfss	_Inputs18to25& (0+255),7,b
  1915  0009D2  D00D               	goto	l3341
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;main.c: 693: EscreverDWINram(0x99,1);
  1919  0009D4  0E00               	movlw	0
  1920  0009D6  0101               	movlb	1	; () banked
  1921  0009D8  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1922  0009DA  0E99               	movlw	153
  1923  0009DC  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1924  0009DE  0E00               	movlw	0
  1925  0009E0  0101               	movlb	1	; () banked
  1926  0009E2  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1927  0009E4  0E01               	movlw	1
  1928  0009E6  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1929  0009E8  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1930  0009EC  D00D               	goto	l302
  1931  0009EE                     l3341:
  1932                           
  1933                           ;main.c: 694: else
  1934                           ;main.c: 695: EscreverDWINram(0x99,0);
  1935  0009EE  0E00               	movlw	0
  1936  0009F0  0101               	movlb	1	; () banked
  1937  0009F2  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1938  0009F4  0E99               	movlw	153
  1939  0009F6  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  1940  0009F8  0E00               	movlw	0
  1941  0009FA  0101               	movlb	1	; () banked
  1942  0009FC  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1943  0009FE  0E00               	movlw	0
  1944  000A00  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  1945  000A02  EC2B  F009         	call	_EscreverDWINram	;wreg free
  1946  000A06  D000               	goto	l302
  1947  000A08                     l302:
  1948                           
  1949                           ;main.c: 696: }
  1950                           ;main.c: 698: temp = LerDWINram(0x001A);
  1951  000A08  0E00               	movlw	0
  1952  000A0A  0101               	movlb	1	; () banked
  1953  000A0C  6F03               	movwf	(LerDWINram@endereco+1)& (0+255),b
  1954  000A0E  0E1A               	movlw	26
  1955  000A10  6F02               	movwf	LerDWINram@endereco& (0+255),b
  1956  000A12  EC18  F008         	call	_LerDWINram	;wreg free
  1957  000A16  C102  F10F         	movff	?_LerDWINram,main@temp
  1958  000A1A  C103  F110         	movff	?_LerDWINram+1,main@temp+1
  1959                           
  1960                           ;main.c: 699: imagem = LerDWINram(0x001B);
  1961  000A1E  0E00               	movlw	0
  1962  000A20  0101               	movlb	1	; () banked
  1963  000A22  6F03               	movwf	(LerDWINram@endereco+1)& (0+255),b
  1964  000A24  0E1B               	movlw	27
  1965  000A26  6F02               	movwf	LerDWINram@endereco& (0+255),b
  1966  000A28  EC18  F008         	call	_LerDWINram	;wreg free
  1967  000A2C  C102  F10D         	movff	?_LerDWINram,main@imagem
  1968  000A30  C103  F10E         	movff	?_LerDWINram+1,main@imagem+1
  1969                           
  1970                           ;main.c: 700: if(TelaAtual == 4){
  1971  000A34  0E04               	movlw	4
  1972  000A36  0101               	movlb	1	; () banked
  1973  000A38  1911               	xorwf	main@TelaAtual& (0+255),w,b
  1974  000A3A  B4D8               	btfsc	status,2,c
  1975  000A3C  D036               	goto	l3381
  1976  000A3E  D06C               	goto	l3383
  1977                           
  1978                           ; BSR set to: 1
  1979                           ;main.c: 701: switch(temp){
  1980  000A40  D034               	goto	l3381
  1981  000A42                     l321:
  1982                           
  1983                           ; BSR set to: 1
  1984  000A42  7444               	btg	_OUT0/(0+8),_OUT0& (0+7),c
  1985  000A44  D069               	goto	l3383
  1986  000A46                     l323:
  1987                           
  1988                           ; BSR set to: 1
  1989  000A46  7644               	btg	_OUT1/(0+8),_OUT1& (0+7),c
  1990  000A48  D067               	goto	l3383
  1991  000A4A                     l324:
  1992                           
  1993                           ; BSR set to: 1
  1994  000A4A  A028               	btfss	_Outputs2to9,0,c
  1995  000A4C  D002               	goto	l3349
  1996                           
  1997                           ; BSR set to: 1
  1998                           ;main.c: 705: Outputs2to9 &= 0xFE;
  1999  000A4E  9028               	bcf	_Outputs2to9,0,c
  2000  000A50  D063               	goto	l3383
  2001  000A52                     l3349:
  2002                           
  2003                           ; BSR set to: 1
  2004                           ;main.c: 706: else
  2005                           ;main.c: 707: Outputs2to9 |= 1;
  2006  000A52  8028               	bsf	_Outputs2to9,0,c
  2007                           
  2008                           ; BSR set to: 1
  2009                           ;main.c: 708: break;
  2010  000A54  D061               	goto	l3383
  2011  000A56                     l327:
  2012                           
  2013                           ; BSR set to: 1
  2014  000A56  A228               	btfss	_Outputs2to9,1,c
  2015  000A58  D002               	goto	l3353
  2016                           
  2017                           ; BSR set to: 1
  2018                           ;main.c: 710: Outputs2to9 &= 0xFD;
  2019  000A5A  9228               	bcf	_Outputs2to9,1,c
  2020  000A5C  D05D               	goto	l3383
  2021  000A5E                     l3353:
  2022                           
  2023                           ; BSR set to: 1
  2024                           ;main.c: 711: else
  2025                           ;main.c: 712: Outputs2to9 |= 2;
  2026  000A5E  8228               	bsf	_Outputs2to9,1,c
  2027                           
  2028                           ; BSR set to: 1
  2029                           ;main.c: 713: break;
  2030  000A60  D05B               	goto	l3383
  2031  000A62                     l330:
  2032                           
  2033                           ; BSR set to: 1
  2034  000A62  A428               	btfss	_Outputs2to9,2,c
  2035  000A64  D002               	goto	l3357
  2036                           
  2037                           ; BSR set to: 1
  2038                           ;main.c: 715: Outputs2to9 &= 0xFB;
  2039  000A66  9428               	bcf	_Outputs2to9,2,c
  2040  000A68  D057               	goto	l3383
  2041  000A6A                     l3357:
  2042                           
  2043                           ; BSR set to: 1
  2044                           ;main.c: 716: else
  2045                           ;main.c: 717: Outputs2to9 |= 4;
  2046  000A6A  8428               	bsf	_Outputs2to9,2,c
  2047                           
  2048                           ; BSR set to: 1
  2049                           ;main.c: 718: break;
  2050  000A6C  D055               	goto	l3383
  2051  000A6E                     l333:
  2052                           
  2053                           ; BSR set to: 1
  2054  000A6E  A628               	btfss	_Outputs2to9,3,c
  2055  000A70  D002               	goto	l3361
  2056                           
  2057                           ; BSR set to: 1
  2058                           ;main.c: 720: Outputs2to9 &= 0xF7;
  2059  000A72  9628               	bcf	_Outputs2to9,3,c
  2060  000A74  D051               	goto	l3383
  2061  000A76                     l3361:
  2062                           
  2063                           ; BSR set to: 1
  2064                           ;main.c: 721: else
  2065                           ;main.c: 722: Outputs2to9 |= 8;
  2066  000A76  8628               	bsf	_Outputs2to9,3,c
  2067                           
  2068                           ; BSR set to: 1
  2069                           ;main.c: 723: break;
  2070  000A78  D04F               	goto	l3383
  2071  000A7A                     l336:
  2072                           
  2073                           ; BSR set to: 1
  2074  000A7A  A828               	btfss	_Outputs2to9,4,c
  2075  000A7C  D002               	goto	l3365
  2076                           
  2077                           ; BSR set to: 1
  2078                           ;main.c: 725: Outputs2to9 &= 0xEF;
  2079  000A7E  9828               	bcf	_Outputs2to9,4,c
  2080  000A80  D04B               	goto	l3383
  2081  000A82                     l3365:
  2082                           
  2083                           ; BSR set to: 1
  2084                           ;main.c: 726: else
  2085                           ;main.c: 727: Outputs2to9 |= 16;
  2086  000A82  8828               	bsf	_Outputs2to9,4,c
  2087                           
  2088                           ; BSR set to: 1
  2089                           ;main.c: 728: break;
  2090  000A84  D049               	goto	l3383
  2091  000A86                     l339:
  2092                           
  2093                           ; BSR set to: 1
  2094  000A86  AA28               	btfss	_Outputs2to9,5,c
  2095  000A88  D002               	goto	l3369
  2096                           
  2097                           ; BSR set to: 1
  2098                           ;main.c: 730: Outputs2to9 &= 0xDF;
  2099  000A8A  9A28               	bcf	_Outputs2to9,5,c
  2100  000A8C  D045               	goto	l3383
  2101  000A8E                     l3369:
  2102                           
  2103                           ; BSR set to: 1
  2104                           ;main.c: 731: else
  2105                           ;main.c: 732: Outputs2to9 |= 32;
  2106  000A8E  8A28               	bsf	_Outputs2to9,5,c
  2107                           
  2108                           ; BSR set to: 1
  2109                           ;main.c: 733: break;
  2110  000A90  D043               	goto	l3383
  2111  000A92                     l342:
  2112                           
  2113                           ; BSR set to: 1
  2114  000A92  AC28               	btfss	_Outputs2to9,6,c
  2115  000A94  D002               	goto	l3373
  2116                           
  2117                           ; BSR set to: 1
  2118                           ;main.c: 735: Outputs2to9 &= 0xBF;
  2119  000A96  9C28               	bcf	_Outputs2to9,6,c
  2120  000A98  D03F               	goto	l3383
  2121  000A9A                     l3373:
  2122                           
  2123                           ; BSR set to: 1
  2124                           ;main.c: 736: else
  2125                           ;main.c: 737: Outputs2to9 |= 64;
  2126  000A9A  8C28               	bsf	_Outputs2to9,6,c
  2127                           
  2128                           ; BSR set to: 1
  2129                           ;main.c: 738: break;
  2130  000A9C  D03D               	goto	l3383
  2131  000A9E                     l345:
  2132                           
  2133                           ; BSR set to: 1
  2134  000A9E  AE28               	btfss	_Outputs2to9,7,c
  2135  000AA0  D002               	goto	l3377
  2136                           
  2137                           ; BSR set to: 1
  2138                           ;main.c: 740: Outputs2to9 &= 0x7F;
  2139  000AA2  9E28               	bcf	_Outputs2to9,7,c
  2140  000AA4  D039               	goto	l3383
  2141  000AA6                     l3377:
  2142                           
  2143                           ; BSR set to: 1
  2144                           ;main.c: 741: else
  2145                           ;main.c: 742: Outputs2to9 |= 128;
  2146  000AA6  8E28               	bsf	_Outputs2to9,7,c
  2147                           
  2148                           ; BSR set to: 1
  2149                           ;main.c: 745: }
  2150                           
  2151                           ; BSR set to: 1
  2152                           
  2153                           ;main.c: 744: default: break;
  2154                           
  2155                           ; BSR set to: 1
  2156                           ;main.c: 743: break;
  2157  000AA8  D037               	goto	l3383
  2158  000AAA                     l3381:
  2159                           
  2160                           ; BSR set to: 1
  2161  000AAA  C10F  F107         	movff	main@temp,??_main
  2162  000AAE  C110  F108         	movff	main@temp+1,??_main+1
  2163                           
  2164                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  2165                           ; Switch size 1, requested type "space"
  2166                           ; Number of cases is 3, Range of values is 0 to 2
  2167                           ; switch strategies available:
  2168                           ; Name         Instructions Cycles
  2169                           ; simple_byte           10     6 (average)
  2170                           ;	Chosen strategy is simple_byte
  2171  000AB2  0101               	movlb	1	; () banked
  2172  000AB4  5108               	movf	(??_main+1)& (0+255),w,b
  2173  000AB6  0A00               	xorlw	0	; case 0
  2174  000AB8  B4D8               	btfsc	status,2,c
  2175  000ABA  D007               	goto	l3645
  2176  000ABC  0A01               	xorlw	1	; case 1
  2177  000ABE  B4D8               	btfsc	status,2,c
  2178  000AC0  D01F               	goto	l3647
  2179  000AC2  0A03               	xorlw	3	; case 2
  2180  000AC4  B4D8               	btfsc	status,2,c
  2181  000AC6  D022               	goto	l3649
  2182  000AC8  D027               	goto	l3383
  2183  000ACA                     l3645:
  2184                           
  2185                           ; BSR set to: 1
  2186                           ; Switch size 1, requested type "space"
  2187                           ; Number of cases is 8, Range of values is 1 to 128
  2188                           ; switch strategies available:
  2189                           ; Name         Instructions Cycles
  2190                           ; simple_byte           25    13 (average)
  2191                           ;	Chosen strategy is simple_byte
  2192  000ACA  0101               	movlb	1	; () banked
  2193  000ACC  5107               	movf	??_main& (0+255),w,b
  2194  000ACE  0A01               	xorlw	1	; case 1
  2195  000AD0  B4D8               	btfsc	status,2,c
  2196  000AD2  D7B7               	goto	l321
  2197  000AD4  0A03               	xorlw	3	; case 2
  2198  000AD6  B4D8               	btfsc	status,2,c
  2199  000AD8  D7B6               	goto	l323
  2200  000ADA  0A06               	xorlw	6	; case 4
  2201  000ADC  B4D8               	btfsc	status,2,c
  2202  000ADE  D7B5               	goto	l324
  2203  000AE0  0A0C               	xorlw	12	; case 8
  2204  000AE2  B4D8               	btfsc	status,2,c
  2205  000AE4  D7B8               	goto	l327
  2206  000AE6  0A18               	xorlw	24	; case 16
  2207  000AE8  B4D8               	btfsc	status,2,c
  2208  000AEA  D7BB               	goto	l330
  2209  000AEC  0A30               	xorlw	48	; case 32
  2210  000AEE  B4D8               	btfsc	status,2,c
  2211  000AF0  D7BE               	goto	l333
  2212  000AF2  0A60               	xorlw	96	; case 64
  2213  000AF4  B4D8               	btfsc	status,2,c
  2214  000AF6  D7C1               	goto	l336
  2215  000AF8  0AC0               	xorlw	192	; case 128
  2216  000AFA  B4D8               	btfsc	status,2,c
  2217  000AFC  D7C4               	goto	l339
  2218  000AFE  D00C               	goto	l3383
  2219  000B00                     l3647:
  2220                           
  2221                           ; BSR set to: 1
  2222                           ; Switch size 1, requested type "space"
  2223                           ; Number of cases is 1, Range of values is 0 to 0
  2224                           ; switch strategies available:
  2225                           ; Name         Instructions Cycles
  2226                           ; simple_byte            4     3 (average)
  2227                           ;	Chosen strategy is simple_byte
  2228  000B00  0101               	movlb	1	; () banked
  2229  000B02  5107               	movf	??_main& (0+255),w,b
  2230  000B04  0A00               	xorlw	0	; case 0
  2231  000B06  B4D8               	btfsc	status,2,c
  2232  000B08  D7C4               	goto	l342
  2233  000B0A  D006               	goto	l3383
  2234  000B0C                     l3649:
  2235                           
  2236                           ; BSR set to: 1
  2237                           ; Switch size 1, requested type "space"
  2238                           ; Number of cases is 1, Range of values is 0 to 0
  2239                           ; switch strategies available:
  2240                           ; Name         Instructions Cycles
  2241                           ; simple_byte            4     3 (average)
  2242                           ;	Chosen strategy is simple_byte
  2243  000B0C  0101               	movlb	1	; () banked
  2244  000B0E  5107               	movf	??_main& (0+255),w,b
  2245  000B10  0A00               	xorlw	0	; case 0
  2246  000B12  B4D8               	btfsc	status,2,c
  2247  000B14  D7C4               	goto	l345
  2248                           
  2249                           ; BSR set to: 1
  2250  000B16  D000               	goto	l3383
  2251  000B18                     l3383:
  2252                           
  2253                           ; BSR set to: 1
  2254                           ;main.c: 746: }
  2255                           ;main.c: 747: if(temp > 0){
  2256  000B18  0101               	movlb	1	; () banked
  2257  000B1A  510F               	movf	main@temp& (0+255),w,b
  2258  000B1C  0101               	movlb	1	; () banked
  2259  000B1E  1110               	iorwf	(main@temp+1)& (0+255),w,b
  2260  000B20  B4D8               	btfsc	status,2,c
  2261  000B22  D00D               	goto	l3387
  2262                           
  2263                           ; BSR set to: 1
  2264                           ;main.c: 748: EscreverDWINram(0x1A,0);
  2265  000B24  0E00               	movlw	0
  2266  000B26  0101               	movlb	1	; () banked
  2267  000B28  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  2268  000B2A  0E1A               	movlw	26
  2269  000B2C  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  2270  000B2E  0E00               	movlw	0
  2271  000B30  0101               	movlb	1	; () banked
  2272  000B32  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  2273  000B34  0E00               	movlw	0
  2274  000B36  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  2275  000B38  EC2B  F009         	call	_EscreverDWINram	;wreg free
  2276  000B3C  D000               	goto	l3387
  2277  000B3E                     l3387:
  2278                           
  2279                           ;main.c: 749: }
  2280                           ;main.c: 750: if(TelaAtual == 5){
  2281  000B3E  0E05               	movlw	5
  2282  000B40  0101               	movlb	1	; () banked
  2283  000B42  1911               	xorwf	main@TelaAtual& (0+255),w,b
  2284  000B44  B4D8               	btfsc	status,2,c
  2285  000B46  D034               	goto	l3425
  2286  000B48  D061               	goto	l3427
  2287                           
  2288                           ; BSR set to: 1
  2289                           ;main.c: 751: switch(imagem){
  2290  000B4A  D032               	goto	l3425
  2291  000B4C                     l352:
  2292                           
  2293                           ; BSR set to: 1
  2294  000B4C  A027               	btfss	_Outputs10to17,0,c
  2295  000B4E  D002               	goto	l3393
  2296                           
  2297                           ; BSR set to: 1
  2298                           ;main.c: 753: Outputs10to17 &= 0xFE;
  2299  000B50  9027               	bcf	_Outputs10to17,0,c
  2300  000B52  D05C               	goto	l3427
  2301  000B54                     l3393:
  2302                           
  2303                           ; BSR set to: 1
  2304                           ;main.c: 754: else
  2305                           ;main.c: 755: Outputs10to17 |= 1;
  2306  000B54  8027               	bsf	_Outputs10to17,0,c
  2307                           
  2308                           ; BSR set to: 1
  2309                           ;main.c: 756: break;
  2310  000B56  D05A               	goto	l3427
  2311  000B58                     l356:
  2312                           
  2313                           ; BSR set to: 1
  2314  000B58  A227               	btfss	_Outputs10to17,1,c
  2315  000B5A  D002               	goto	l3397
  2316                           
  2317                           ; BSR set to: 1
  2318                           ;main.c: 758: Outputs10to17 &= 0xFD;
  2319  000B5C  9227               	bcf	_Outputs10to17,1,c
  2320  000B5E  D056               	goto	l3427
  2321  000B60                     l3397:
  2322                           
  2323                           ; BSR set to: 1
  2324                           ;main.c: 759: else
  2325                           ;main.c: 760: Outputs10to17 |= 2;
  2326  000B60  8227               	bsf	_Outputs10to17,1,c
  2327                           
  2328                           ; BSR set to: 1
  2329                           ;main.c: 761: break;
  2330  000B62  D054               	goto	l3427
  2331  000B64                     l359:
  2332                           
  2333                           ; BSR set to: 1
  2334  000B64  A427               	btfss	_Outputs10to17,2,c
  2335  000B66  D002               	goto	l3401
  2336                           
  2337                           ; BSR set to: 1
  2338                           ;main.c: 763: Outputs10to17 &= 0xFB;
  2339  000B68  9427               	bcf	_Outputs10to17,2,c
  2340  000B6A  D050               	goto	l3427
  2341  000B6C                     l3401:
  2342                           
  2343                           ; BSR set to: 1
  2344                           ;main.c: 764: else
  2345                           ;main.c: 765: Outputs10to17 |= 4;
  2346  000B6C  8427               	bsf	_Outputs10to17,2,c
  2347                           
  2348                           ; BSR set to: 1
  2349                           ;main.c: 766: break;
  2350  000B6E  D04E               	goto	l3427
  2351  000B70                     l362:
  2352                           
  2353                           ; BSR set to: 1
  2354  000B70  A627               	btfss	_Outputs10to17,3,c
  2355  000B72  D002               	goto	l3405
  2356                           
  2357                           ; BSR set to: 1
  2358                           ;main.c: 768: Outputs10to17 &= 0xF7;
  2359  000B74  9627               	bcf	_Outputs10to17,3,c
  2360  000B76  D04A               	goto	l3427
  2361  000B78                     l3405:
  2362                           
  2363                           ; BSR set to: 1
  2364                           ;main.c: 769: else
  2365                           ;main.c: 770: Outputs10to17 |= 8;
  2366  000B78  8627               	bsf	_Outputs10to17,3,c
  2367                           
  2368                           ; BSR set to: 1
  2369                           ;main.c: 771: break;
  2370  000B7A  D048               	goto	l3427
  2371  000B7C                     l365:
  2372                           
  2373                           ; BSR set to: 1
  2374  000B7C  A827               	btfss	_Outputs10to17,4,c
  2375  000B7E  D002               	goto	l3409
  2376                           
  2377                           ; BSR set to: 1
  2378                           ;main.c: 773: Outputs10to17 &= 0xEF;
  2379  000B80  9827               	bcf	_Outputs10to17,4,c
  2380  000B82  D044               	goto	l3427
  2381  000B84                     l3409:
  2382                           
  2383                           ; BSR set to: 1
  2384                           ;main.c: 774: else
  2385                           ;main.c: 775: Outputs10to17 |= 16;
  2386  000B84  8827               	bsf	_Outputs10to17,4,c
  2387                           
  2388                           ; BSR set to: 1
  2389                           ;main.c: 776: break;
  2390  000B86  D042               	goto	l3427
  2391  000B88                     l368:
  2392                           
  2393                           ; BSR set to: 1
  2394  000B88  AA27               	btfss	_Outputs10to17,5,c
  2395  000B8A  D002               	goto	l3413
  2396                           
  2397                           ; BSR set to: 1
  2398                           ;main.c: 778: Outputs10to17 &= 0xDF;
  2399  000B8C  9A27               	bcf	_Outputs10to17,5,c
  2400  000B8E  D03E               	goto	l3427
  2401  000B90                     l3413:
  2402                           
  2403                           ; BSR set to: 1
  2404                           ;main.c: 779: else
  2405                           ;main.c: 780: Outputs10to17 |= 32;
  2406  000B90  8A27               	bsf	_Outputs10to17,5,c
  2407                           
  2408                           ; BSR set to: 1
  2409                           ;main.c: 781: break;
  2410  000B92  D03C               	goto	l3427
  2411  000B94                     l371:
  2412                           
  2413                           ; BSR set to: 1
  2414  000B94  AC27               	btfss	_Outputs10to17,6,c
  2415  000B96  D002               	goto	l3417
  2416                           
  2417                           ; BSR set to: 1
  2418                           ;main.c: 783: Outputs10to17 &= 0xBF;
  2419  000B98  9C27               	bcf	_Outputs10to17,6,c
  2420  000B9A  D038               	goto	l3427
  2421  000B9C                     l3417:
  2422                           
  2423                           ; BSR set to: 1
  2424                           ;main.c: 784: else
  2425                           ;main.c: 785: Outputs10to17 |= 64;
  2426  000B9C  8C27               	bsf	_Outputs10to17,6,c
  2427                           
  2428                           ; BSR set to: 1
  2429                           ;main.c: 786: break;
  2430  000B9E  D036               	goto	l3427
  2431  000BA0                     l374:
  2432                           
  2433                           ; BSR set to: 1
  2434  000BA0  AE27               	btfss	_Outputs10to17,7,c
  2435  000BA2  D002               	goto	l3421
  2436                           
  2437                           ; BSR set to: 1
  2438                           ;main.c: 788: Outputs10to17 &= 0x7F;
  2439  000BA4  9E27               	bcf	_Outputs10to17,7,c
  2440  000BA6  D032               	goto	l3427
  2441  000BA8                     l3421:
  2442                           
  2443                           ; BSR set to: 1
  2444                           ;main.c: 789: else
  2445                           ;main.c: 790: Outputs10to17 |= 128;
  2446  000BA8  8E27               	bsf	_Outputs10to17,7,c
  2447                           
  2448                           ; BSR set to: 1
  2449                           ;main.c: 791: break;
  2450  000BAA  D030               	goto	l3427
  2451  000BAC                     l377:
  2452                           
  2453                           ; BSR set to: 1
  2454  000BAC  7A81               	btg	3969,5,c	;volatile
  2455                           
  2456                           ; BSR set to: 1
  2457                           ;main.c: 795: }
  2458                           
  2459                           ; BSR set to: 1
  2460                           
  2461                           ;main.c: 794: default: break;
  2462                           
  2463                           ;main.c: 793: break;
  2464  000BAE  D02E               	goto	l3427
  2465  000BB0                     l3425:
  2466                           
  2467                           ; BSR set to: 1
  2468  000BB0  C10D  F107         	movff	main@imagem,??_main
  2469  000BB4  C10E  F108         	movff	main@imagem+1,??_main+1
  2470                           
  2471                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  2472                           ; Switch size 1, requested type "space"
  2473                           ; Number of cases is 2, Range of values is 0 to 1
  2474                           ; switch strategies available:
  2475                           ; Name         Instructions Cycles
  2476                           ; simple_byte            7     4 (average)
  2477                           ;	Chosen strategy is simple_byte
  2478  000BB8  0101               	movlb	1	; () banked
  2479  000BBA  5108               	movf	(??_main+1)& (0+255),w,b
  2480  000BBC  0A00               	xorlw	0	; case 0
  2481  000BBE  B4D8               	btfsc	status,2,c
  2482  000BC0  D004               	goto	l3651
  2483  000BC2  0A01               	xorlw	1	; case 1
  2484  000BC4  B4D8               	btfsc	status,2,c
  2485  000BC6  D01C               	goto	l3653
  2486  000BC8  D021               	goto	l3427
  2487  000BCA                     l3651:
  2488                           
  2489                           ; BSR set to: 1
  2490                           ; Switch size 1, requested type "space"
  2491                           ; Number of cases is 8, Range of values is 1 to 128
  2492                           ; switch strategies available:
  2493                           ; Name         Instructions Cycles
  2494                           ; simple_byte           25    13 (average)
  2495                           ;	Chosen strategy is simple_byte
  2496  000BCA  0101               	movlb	1	; () banked
  2497  000BCC  5107               	movf	??_main& (0+255),w,b
  2498  000BCE  0A01               	xorlw	1	; case 1
  2499  000BD0  B4D8               	btfsc	status,2,c
  2500  000BD2  D7BC               	goto	l352
  2501  000BD4  0A03               	xorlw	3	; case 2
  2502  000BD6  B4D8               	btfsc	status,2,c
  2503  000BD8  D7BF               	goto	l356
  2504  000BDA  0A06               	xorlw	6	; case 4
  2505  000BDC  B4D8               	btfsc	status,2,c
  2506  000BDE  D7C2               	goto	l359
  2507  000BE0  0A0C               	xorlw	12	; case 8
  2508  000BE2  B4D8               	btfsc	status,2,c
  2509  000BE4  D7C5               	goto	l362
  2510  000BE6  0A18               	xorlw	24	; case 16
  2511  000BE8  B4D8               	btfsc	status,2,c
  2512  000BEA  D7C8               	goto	l365
  2513  000BEC  0A30               	xorlw	48	; case 32
  2514  000BEE  B4D8               	btfsc	status,2,c
  2515  000BF0  D7CB               	goto	l368
  2516  000BF2  0A60               	xorlw	96	; case 64
  2517  000BF4  B4D8               	btfsc	status,2,c
  2518  000BF6  D7CE               	goto	l371
  2519  000BF8  0AC0               	xorlw	192	; case 128
  2520  000BFA  B4D8               	btfsc	status,2,c
  2521  000BFC  D7D1               	goto	l374
  2522  000BFE  D006               	goto	l3427
  2523  000C00                     l3653:
  2524                           
  2525                           ; BSR set to: 1
  2526                           ; Switch size 1, requested type "space"
  2527                           ; Number of cases is 1, Range of values is 0 to 0
  2528                           ; switch strategies available:
  2529                           ; Name         Instructions Cycles
  2530                           ; simple_byte            4     3 (average)
  2531                           ;	Chosen strategy is simple_byte
  2532  000C00  0101               	movlb	1	; () banked
  2533  000C02  5107               	movf	??_main& (0+255),w,b
  2534  000C04  0A00               	xorlw	0	; case 0
  2535  000C06  B4D8               	btfsc	status,2,c
  2536  000C08  D7D1               	goto	l377
  2537                           
  2538                           ; BSR set to: 1
  2539  000C0A  D000               	goto	l3427
  2540  000C0C                     l3427:
  2541                           
  2542                           ; BSR set to: 1
  2543                           ;main.c: 796: }
  2544                           ;main.c: 797: if(imagem > 0){
  2545  000C0C  0101               	movlb	1	; () banked
  2546  000C0E  510D               	movf	main@imagem& (0+255),w,b
  2547  000C10  0101               	movlb	1	; () banked
  2548  000C12  110E               	iorwf	(main@imagem+1)& (0+255),w,b
  2549  000C14  B4D8               	btfsc	status,2,c
  2550  000C16  D04B               	goto	l3463
  2551                           
  2552                           ; BSR set to: 1
  2553                           ;main.c: 798: EscreverDWINram(0x1B,0);
  2554  000C18  0E00               	movlw	0
  2555  000C1A  0101               	movlb	1	; () banked
  2556  000C1C  6F03               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  2557  000C1E  0E1B               	movlw	27
  2558  000C20  6F02               	movwf	EscreverDWINram@endereco& (0+255),b
  2559  000C22  0E00               	movlw	0
  2560  000C24  0101               	movlb	1	; () banked
  2561  000C26  6F05               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  2562  000C28  0E00               	movlw	0
  2563  000C2A  6F04               	movwf	EscreverDWINram@valor& (0+255),b
  2564  000C2C  EC2B  F009         	call	_EscreverDWINram	;wreg free
  2565                           
  2566                           ;main.c: 800: }
  2567                           ;main.c: 801: break;
  2568  000C30  D03E               	goto	l3463
  2569  000C32                     l381:
  2570                           
  2571                           ; BSR set to: 0
  2572                           ;main.c: 803: INTCONbits.GIEH = 0;
  2573  000C32  9EF2               	bcf	intcon,7,c	;volatile
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;main.c: 805: EstadoMain = POWEROFF;
  2577  000C34  0E02               	movlw	2
  2578  000C36  D027               	goto	L3
  2579  000C38                     l382:
  2580                           
  2581                           ; BSR set to: 0
  2582                           ;main.c: 809: PIR2bits.HLVDIF = 0;
  2583  000C38  94A1               	bcf	4001,2,c	;volatile
  2584                           
  2585                           ;main.c: 810: if(!PIR2bits.HLVDIF)
  2586  000C3A  B4A1               	btfsc	4001,2,c	;volatile
  2587  000C3C  D038               	goto	l3463
  2588                           
  2589                           ; BSR set to: 0
  2590                           ;main.c: 811: EstadoMain = POWERUP;
  2591  000C3E  0E03               	movlw	3
  2592  000C40  D022               	goto	L3
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;main.c: 812: break;
  2596  000C42  D035               	goto	l3463
  2597  000C44                     l384:
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;main.c: 814: POWER_FAULT = 0;
  2601  000C44  9844               	bcf	_POWER_FAULT/(0+8),_POWER_FAULT& (0+7),c
  2602                           
  2603                           ; BSR set to: 0
  2604                           ;main.c: 815: Inicializacao();
  2605  000C46  ECDE  F008         	call	_Inicializacao	;wreg free
  2606                           
  2607                           ;main.c: 816: for(temp = 0;temp<25;temp++)
  2608  000C4A  0E00               	movlw	0
  2609  000C4C  0101               	movlb	1	; () banked
  2610  000C4E  6F10               	movwf	(main@temp+1)& (0+255),b
  2611  000C50  0E00               	movlw	0
  2612  000C52  6F0F               	movwf	main@temp& (0+255),b
  2613  000C54                     l3439:
  2614                           
  2615                           ; BSR set to: 1
  2616  000C54  0101               	movlb	1	; () banked
  2617  000C56  5110               	movf	(main@temp+1)& (0+255),w,b
  2618  000C58  E10E               	bnz	l3449
  2619  000C5A  0E19               	movlw	25
  2620  000C5C  0101               	movlb	1	; () banked
  2621  000C5E  5D0F               	subwf	main@temp& (0+255),w,b
  2622  000C60  B0D8               	btfsc	status,0,c
  2623  000C62  D009               	goto	l3449
  2624  000C64  D001               	goto	l3443
  2625                           
  2626                           ; BSR set to: 1
  2627  000C66  D007               	goto	l3449
  2628  000C68                     l3443:
  2629                           
  2630                           ; BSR set to: 1
  2631                           ;main.c: 817: DelayDWIN();
  2632  000C68  ECED  F009         	call	_DelayDWIN	;wreg free
  2633  000C6C  0101               	movlb	1	; () banked
  2634  000C6E  4B0F               	infsnz	main@temp& (0+255),f,b
  2635  000C70  2B10               	incf	(main@temp+1)& (0+255),f,b
  2636  000C72  D7F0               	goto	l3439
  2637                           
  2638                           ; BSR set to: 1
  2639  000C74  D000               	goto	l3449
  2640  000C76                     l3449:
  2641                           
  2642                           ; BSR set to: 1
  2643                           ;main.c: 818: EscreverDWINreg(3,TelaAtual);
  2644  000C76  C111  F102         	movff	main@TelaAtual,EscreverDWINreg@valor
  2645  000C7A  0101               	movlb	1	; () banked
  2646  000C7C  6B03               	clrf	(EscreverDWINreg@valor+1)& (0+255),b
  2647  000C7E  0E03               	movlw	3
  2648  000C80  EC65  F009         	call	_EscreverDWINreg
  2649  000C84                     l3451:
  2650                           
  2651                           ;main.c: 825: EstadoMain = POWERON;
  2652  000C84  0E00               	movlw	0
  2653  000C86                     L3:
  2654  000C86  0100               	movlb	0	; () banked
  2655  000C88  6FBD               	movwf	_EstadoMain& (0+255),b
  2656                           
  2657                           ;main.c: 826: break;
  2658  000C8A  D011               	goto	l3463
  2659  000C8C                     l3453:
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;main.c: 828: Outputs2to9 = LerDWINreg(03);
  2663  000C8C  0E03               	movlw	3
  2664  000C8E  EC7E  F008         	call	_LerDWINreg
  2665  000C92  0101               	movlb	1	; () banked
  2666  000C94  5102               	movf	?_LerDWINreg& (0+255),w,b
  2667  000C96  6E28               	movwf	_Outputs2to9,c
  2668                           
  2669                           ; BSR set to: 1
  2670                           ;main.c: 829: if(Outputs2to9 == 8)
  2671  000C98  0E08               	movlw	8
  2672  000C9A  1828               	xorwf	_Outputs2to9,w,c
  2673  000C9C  A4D8               	btfss	status,2,c
  2674  000C9E  D004               	goto	l3459
  2675                           
  2676                           ; BSR set to: 1
  2677                           ;main.c: 830: EstadoMain = POWERON;
  2678  000CA0  0E00               	movlw	0
  2679  000CA2  0100               	movlb	0	; () banked
  2680  000CA4  6FBD               	movwf	_EstadoMain& (0+255),b
  2681  000CA6  D000               	goto	l3459
  2682  000CA8                     l3459:
  2683                           
  2684                           ;main.c: 831: CiclarOUT1();
  2685  000CA8  EC10  F00A         	call	_CiclarOUT1	;wreg free
  2686                           
  2687                           ;main.c: 833: }
  2688                           
  2689                           ;main.c: 832: break;
  2690  000CAC  D000               	goto	l3463
  2691  000CAE                     l3463:
  2692  000CAE  0100               	movlb	0	; () banked
  2693  000CB0  51BD               	movf	_EstadoMain& (0+255),w,b
  2694                           
  2695                           ; Switch size 1, requested type "space"
  2696                           ; Number of cases is 5, Range of values is 0 to 4
  2697                           ; switch strategies available:
  2698                           ; Name         Instructions Cycles
  2699                           ; simple_byte           16     9 (average)
  2700                           ;	Chosen strategy is simple_byte
  2701  000CB2  0A00               	xorlw	0	; case 0
  2702  000CB4  B4D8               	btfsc	status,2,c
  2703  000CB6  EFFD  F000         	goto	l3141
  2704  000CBA  0A01               	xorlw	1	; case 1
  2705  000CBC  B4D8               	btfsc	status,2,c
  2706  000CBE  D7B9               	goto	l381
  2707  000CC0  0A03               	xorlw	3	; case 2
  2708  000CC2  B4D8               	btfsc	status,2,c
  2709  000CC4  D7B9               	goto	l382
  2710  000CC6  0A01               	xorlw	1	; case 3
  2711  000CC8  B4D8               	btfsc	status,2,c
  2712  000CCA  D7BC               	goto	l384
  2713  000CCC  0A07               	xorlw	7	; case 4
  2714  000CCE  B4D8               	btfsc	status,2,c
  2715  000CD0  D7DD               	goto	l3453
  2716                           
  2717                           ; BSR set to: 0
  2718                           
  2719                           ; BSR set to: 0
  2720  000CD2  D7ED               	goto	l3463
  2721                           
  2722                           ; BSR set to: 0
  2723                           
  2724                           ; BSR set to: 0
  2725                           ;main.c: 834: }
  2726                           ;main.c: 835: return;
  2727  000CD4  EFAA  F000         	goto	start
  2728  000CD8                     __end_of_main:
  2729                           	opt stack 0
  2730                           tblptru	equ	0xFF8
  2731                           tblptrh	equ	0xFF7
  2732                           tblptrl	equ	0xFF6
  2733                           tablat	equ	0xFF5
  2734                           intcon	equ	0xFF2
  2735                           postinc0	equ	0xFEE
  2736                           wreg	equ	0xFE8
  2737                           postdec1	equ	0xFE5
  2738                           fsr1l	equ	0xFE1
  2739                           status	equ	0xFD8
  2740                           
  2741 ;; *************** function _LerDWINreg *****************
  2742 ;; Defined at:
  2743 ;;		line 477 in file "main.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  endereco        1    wreg     unsigned char 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  endereco        1    4[BANK1 ] unsigned char 
  2748 ;;  cont            1    6[BANK1 ] unsigned char 
  2749 ;;  recebido        1    5[BANK1 ] unsigned char 
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  2    2[BANK1 ] int 
  2752 ;; Registers used:
  2753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2759 ;;      Params:         0       0       2       0       0       0       0       0       0
  2760 ;;      Locals:         0       0       3       0       0       0       0       0       0
  2761 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2762 ;;      Totals:         0       0       5       0       0       0       0       0       0
  2763 ;;Total ram usage:        5 bytes
  2764 ;; Hardware stack levels used:    1
  2765 ;; Hardware stack levels required when called:    4
  2766 ;; This function calls:
  2767 ;;		_DelayDWIN
  2768 ;; This function is called by:
  2769 ;;		_main
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           	psect	text1
  2774  0010FC                     __ptext1:
  2775                           	opt stack 0
  2776  0010FC                     _LerDWINreg:
  2777                           	opt stack 26
  2778                           
  2779                           ; BSR set to: 0
  2780                           ;incstack = 0
  2781                           ;LerDWINreg@endereco stored from wreg
  2782  0010FC  0101               	movlb	1	; () banked
  2783  0010FE  6F04               	movwf	LerDWINreg@endereco& (0+255),b
  2784                           
  2785                           ; BSR set to: 1
  2786                           ;main.c: 479: unsigned char cont;
  2787                           ;main.c: 480: unsigned char recebido;
  2788                           ;main.c: 484: SerialOut[0] = 0x5A;
  2789  001100  0E5A               	movlw	90
  2790  001102  0100               	movlb	0	; () banked
  2791  001104  6F88               	movwf	_SerialOut& (0+255),b
  2792                           
  2793                           ;main.c: 485: SerialOut[1] = 0xA5;
  2794  001106  0EA5               	movlw	165
  2795  001108  0100               	movlb	0	; () banked
  2796  00110A  6F89               	movwf	(_SerialOut+1)& (0+255),b
  2797                           
  2798                           ;main.c: 486: SerialOut[2] = 3;
  2799  00110C  0E03               	movlw	3
  2800  00110E  0100               	movlb	0	; () banked
  2801  001110  6F8A               	movwf	(_SerialOut+2)& (0+255),b
  2802                           
  2803                           ;main.c: 487: SerialOut[3] = 0x81;
  2804  001112  0E81               	movlw	129
  2805  001114  0100               	movlb	0	; () banked
  2806  001116  6F8B               	movwf	(_SerialOut+3)& (0+255),b
  2807                           
  2808                           ; BSR set to: 0
  2809                           ;main.c: 488: SerialOut[4] = endereco;
  2810  001118  C104  F08C         	movff	LerDWINreg@endereco,_SerialOut+4
  2811                           
  2812                           ; BSR set to: 0
  2813                           ;main.c: 489: SerialOut[5] = 2;
  2814  00111C  0E02               	movlw	2
  2815  00111E  0100               	movlb	0	; () banked
  2816  001120  6F8D               	movwf	(_SerialOut+5)& (0+255),b
  2817                           
  2818                           ; BSR set to: 0
  2819                           ;main.c: 490: PIR1bits.TXIF = 0;
  2820  001122  989E               	bcf	3998,4,c	;volatile
  2821                           
  2822                           ; BSR set to: 0
  2823                           ;main.c: 491: for(cont=0;cont<6;cont++){
  2824  001124  0E00               	movlw	0
  2825  001126  0101               	movlb	1	; () banked
  2826  001128  6F06               	movwf	LerDWINreg@cont& (0+255),b
  2827  00112A  D016               	goto	l2935
  2828                           
  2829                           ; BSR set to: 1
  2830                           
  2831                           ; BSR set to: 1
  2832  00112C  D019               	goto	l237
  2833  00112E                     l2929:
  2834                           
  2835                           ; BSR set to: 1
  2836                           ;main.c: 492: TXREG = SerialOut[cont];
  2837  00112E  0101               	movlb	1	; () banked
  2838  001130  5106               	movf	LerDWINreg@cont& (0+255),w,b
  2839  001132  0D01               	mullw	1
  2840  001134  0E88               	movlw	low _SerialOut
  2841  001136  24F3               	addwf	prodl,w,c
  2842  001138  6ED9               	movwf	fsr2l,c
  2843  00113A  0E00               	movlw	high _SerialOut
  2844  00113C  20F4               	addwfc	prodh,w,c
  2845  00113E  6EDA               	movwf	fsr2h,c
  2846  001140  50DF               	movf	indf2,w,c
  2847  001142  6EAD               	movwf	4013,c	;volatile
  2848                           
  2849                           ;main.c: 493: while(!PIR1bits.TXIF) if(POWER_FAULT) break;
  2850  001144  D004               	goto	l238
  2851  001146                     l239:
  2852                           
  2853                           ; BSR set to: 1
  2854  001146  B844               	btfsc	_POWER_FAULT/(0+8),_POWER_FAULT& (0+7),c
  2855  001148  D004               	goto	l241
  2856  00114A  D001               	goto	l238
  2857                           
  2858                           ; BSR set to: 1
  2859  00114C  D002               	goto	l241
  2860  00114E                     l238:
  2861                           
  2862                           ; BSR set to: 1
  2863  00114E  A89E               	btfss	3998,4,c	;volatile
  2864  001150  D7FA               	goto	l239
  2865  001152                     l241:
  2866                           
  2867                           ; BSR set to: 1
  2868                           ;main.c: 494: PIR1bits.TXIF = 0;
  2869  001152  989E               	bcf	3998,4,c	;volatile
  2870                           
  2871                           ; BSR set to: 1
  2872  001154  0101               	movlb	1	; () banked
  2873  001156  2B06               	incf	LerDWINreg@cont& (0+255),f,b
  2874  001158                     l2935:
  2875                           
  2876                           ; BSR set to: 1
  2877  001158  0E05               	movlw	5
  2878  00115A  0101               	movlb	1	; () banked
  2879  00115C  6506               	cpfsgt	LerDWINreg@cont& (0+255),b
  2880  00115E  D7E7               	goto	l2929
  2881  001160                     l237:
  2882                           
  2883                           ; BSR set to: 1
  2884                           ;main.c: 495: }
  2885                           ;main.c: 496: PIR1bits.RCIF = 0;
  2886  001160  9A9E               	bcf	3998,5,c	;volatile
  2887                           
  2888                           ; BSR set to: 1
  2889                           ;main.c: 498: for(cont=0;cont<8;cont++){
  2890  001162  0E00               	movlw	0
  2891  001164  0101               	movlb	1	; () banked
  2892  001166  6F06               	movwf	LerDWINreg@cont& (0+255),b
  2893  001168                     l2939:
  2894                           
  2895                           ; BSR set to: 1
  2896  001168  0E07               	movlw	7
  2897  00116A  0101               	movlb	1	; () banked
  2898  00116C  6506               	cpfsgt	LerDWINreg@cont& (0+255),b
  2899  00116E  D006               	goto	l244
  2900                           
  2901                           ; BSR set to: 1
  2902  001170  D016               	goto	l2951
  2903                           
  2904                           ; BSR set to: 1
  2905                           ;main.c: 499: while(!PIR1bits.RCIF) if(POWER_FAULT) break;
  2906  001172  D004               	goto	l244
  2907  001174                     l245:
  2908                           
  2909                           ; BSR set to: 1
  2910  001174  B844               	btfsc	_POWER_FAULT/(0+8),_POWER_FAULT& (0+7),c
  2911  001176  D004               	goto	l247
  2912  001178  D001               	goto	l244
  2913                           
  2914                           ; BSR set to: 1
  2915  00117A  D002               	goto	l247
  2916  00117C                     l244:
  2917                           
  2918                           ; BSR set to: 1
  2919  00117C  AA9E               	btfss	3998,5,c	;volatile
  2920  00117E  D7FA               	goto	l245
  2921  001180                     l247:
  2922                           
  2923                           ; BSR set to: 1
  2924                           ;main.c: 500: PIR1bits.RCIF = 0;
  2925  001180  9A9E               	bcf	3998,5,c	;volatile
  2926                           
  2927                           ; BSR set to: 1
  2928                           ;main.c: 501: SerialIn[cont] = RCREG;
  2929  001182  0101               	movlb	1	; () banked
  2930  001184  5106               	movf	LerDWINreg@cont& (0+255),w,b
  2931  001186  0D01               	mullw	1
  2932  001188  0E60               	movlw	low _SerialIn
  2933  00118A  24F3               	addwf	prodl,w,c
  2934  00118C  6ED9               	movwf	fsr2l,c
  2935  00118E  0E00               	movlw	high _SerialIn
  2936  001190  20F4               	addwfc	prodh,w,c
  2937  001192  6EDA               	movwf	fsr2h,c
  2938  001194  CFAE FFDF          	movff	4014,indf2	;volatile
  2939                           
  2940                           ; BSR set to: 1
  2941  001198  0101               	movlb	1	; () banked
  2942  00119A  2B06               	incf	LerDWINreg@cont& (0+255),f,b
  2943  00119C  D7E5               	goto	l2939
  2944  00119E                     l2951:
  2945                           
  2946                           ; BSR set to: 1
  2947                           ;main.c: 502: }
  2948                           ;main.c: 503: recebido = SerialIn[6] >> 8;
  2949  00119E  0E00               	movlw	0
  2950  0011A0  0101               	movlb	1	; () banked
  2951  0011A2  6F05               	movwf	LerDWINreg@recebido& (0+255),b
  2952                           
  2953                           ; BSR set to: 1
  2954                           ;main.c: 504: recebido += SerialIn[7];
  2955  0011A4  0100               	movlb	0	; () banked
  2956  0011A6  5167               	movf	(_SerialIn+7)& (0+255),w,b
  2957  0011A8  0101               	movlb	1	; () banked
  2958  0011AA  2705               	addwf	LerDWINreg@recebido& (0+255),f,b
  2959                           
  2960                           ; BSR set to: 1
  2961                           ;main.c: 507: DelayDWIN();
  2962  0011AC  ECED  F009         	call	_DelayDWIN	;wreg free
  2963                           
  2964                           ;main.c: 509: return(recebido);
  2965  0011B0  C105  F102         	movff	LerDWINreg@recebido,?_LerDWINreg
  2966  0011B4  0101               	movlb	1	; () banked
  2967  0011B6  6B03               	clrf	(?_LerDWINreg+1)& (0+255),b
  2968  0011B8  D000               	goto	l248
  2969  0011BA                     l248:
  2970                           
  2971                           ; BSR set to: 1
  2972  0011BA  0012               	return		;funcret
  2973  0011BC                     __end_of_LerDWINreg:
  2974                           	opt stack 0
  2975                           tblptru	equ	0xFF8
  2976                           tblptrh	equ	0xFF7
  2977                           tblptrl	equ	0xFF6
  2978                           tablat	equ	0xFF5
  2979                           prodh	equ	0xFF4
  2980                           prodl	equ	0xFF3
  2981                           intcon	equ	0xFF2
  2982                           postinc0	equ	0xFEE
  2983                           wreg	equ	0xFE8
  2984                           postdec1	equ	0xFE5
  2985                           fsr1l	equ	0xFE1
  2986                           indf2	equ	0xFDF
  2987                           fsr2h	equ	0xFDA
  2988                           fsr2l	equ	0xFD9
  2989                           status	equ	0xFD8
  2990                           
  2991 ;; *************** function _LerDWINram *****************
  2992 ;; Defined at:
  2993 ;;		line 439 in file "main.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;  endereco        2    2[BANK1 ] unsigned int 
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;  VPrecebido      2    4[BANK1 ] unsigned int 
  2998 ;;  cont            1    6[BANK1 ] unsigned char 
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  2    2[BANK1 ] int 
  3001 ;; Registers used:
  3002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3008 ;;      Params:         0       0       2       0       0       0       0       0       0
  3009 ;;      Locals:         0       0       3       0       0       0       0       0       0
  3010 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3011 ;;      Totals:         0       0       5       0       0       0       0       0       0
  3012 ;;Total ram usage:        5 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; Hardware stack levels required when called:    4
  3015 ;; This function calls:
  3016 ;;		_DelayDWIN
  3017 ;; This function is called by:
  3018 ;;		_main
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           	psect	text2
  3023  001030                     __ptext2:
  3024                           	opt stack 0
  3025  001030                     _LerDWINram:
  3026                           	opt stack 26
  3027                           
  3028                           ;main.c: 441: unsigned char cont;
  3029                           ;main.c: 442: unsigned int VPrecebido;
  3030                           ;main.c: 446: SerialOut[0] = 0x5A;
  3031                           
  3032                           ; BSR set to: 1
  3033                           ;incstack = 0
  3034  001030  0E5A               	movlw	90
  3035  001032  0100               	movlb	0	; () banked
  3036  001034  6F88               	movwf	_SerialOut& (0+255),b
  3037                           
  3038                           ;main.c: 447: SerialOut[1] = 0xA5;
  3039  001036  0EA5               	movlw	165
  3040  001038  0100               	movlb	0	; () banked
  3041  00103A  6F89               	movwf	(_SerialOut+1)& (0+255),b
  3042                           
  3043                           ;main.c: 448: SerialOut[2] = 4;
  3044  00103C  0E04               	movlw	4
  3045  00103E  0100               	movlb	0	; () banked
  3046  001040  6F8A               	movwf	(_SerialOut+2)& (0+255),b
  3047                           
  3048                           ;main.c: 449: SerialOut[3] = 0x83;
  3049  001042  0E83               	movlw	131
  3050  001044  0100               	movlb	0	; () banked
  3051  001046  6F8B               	movwf	(_SerialOut+3)& (0+255),b
  3052                           
  3053                           ;main.c: 450: SerialOut[4] = endereco >> 8;
  3054  001048  0101               	movlb	1	; () banked
  3055  00104A  5103               	movf	(LerDWINram@endereco+1)& (0+255),w,b
  3056  00104C  0100               	movlb	0	; () banked
  3057  00104E  6F8C               	movwf	(_SerialOut+4)& (0+255),b
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;main.c: 451: SerialOut[5] = endereco & 0x00FF;
  3061  001050  C102  F08D         	movff	LerDWINram@endereco,_SerialOut+5
  3062                           
  3063                           ;main.c: 452: SerialOut[6] = 1;
  3064  001054  0E01               	movlw	1
  3065  001056  0100               	movlb	0	; () banked
  3066  001058  6F8E               	movwf	(_SerialOut+6)& (0+255),b
  3067                           
  3068                           ; BSR set to: 0
  3069                           ;main.c: 453: PIR1bits.TXIF = 0;
  3070  00105A  989E               	bcf	3998,4,c	;volatile
  3071                           
  3072                           ;main.c: 454: for(cont=0;cont<7;cont++){
  3073  00105C  0E00               	movlw	0
  3074  00105E  0101               	movlb	1	; () banked
  3075  001060  6F06               	movwf	LerDWINram@cont& (0+255),b
  3076  001062  D016               	goto	l2889
  3077                           
  3078                           ; BSR set to: 1
  3079                           
  3080                           ; BSR set to: 1
  3081  001064  D019               	goto	l222
  3082  001066                     l2883:
  3083                           
  3084                           ; BSR set to: 1
  3085                           ;main.c: 455: TXREG = SerialOut[cont];
  3086  001066  0101               	movlb	1	; () banked
  3087  001068  5106               	movf	LerDWINram@cont& (0+255),w,b
  3088  00106A  0D01               	mullw	1
  3089  00106C  0E88               	movlw	low _SerialOut
  3090  00106E  24F3               	addwf	prodl,w,c
  3091  001070  6ED9               	movwf	fsr2l,c
  3092  001072  0E00               	movlw	high _SerialOut
  3093  001074  20F4               	addwfc	prodh,w,c
  3094  001076  6EDA               	movwf	fsr2h,c
  3095  001078  50DF               	movf	indf2,w,c
  3096  00107A  6EAD               	movwf	4013,c	;volatile
  3097                           
  3098                           ;main.c: 456: while(!PIR1bits.TXIF) if(POWER_FAULT) break;
  3099  00107C  D004               	goto	l223
  3100  00107E                     l224:
  3101  00107E  B844               	btfsc	_POWER_FAULT/(0+8),_POWER_FAULT& (0+7),c
  3102  001080  D004               	goto	l226
  3103  001082  D001               	goto	l223
  3104  001084  D002               	goto	l226
  3105  001086                     l223:
  3106  001086  A89E               	btfss	3998,4,c	;volatile
  3107  001088  D7FA               	goto	l224
  3108  00108A                     l226:
  3109                           
  3110                           ;main.c: 457: PIR1bits.TXIF = 0;
  3111  00108A  989E               	bcf	3998,4,c	;volatile
  3112  00108C  0101               	movlb	1	; () banked
  3113  00108E  2B06               	incf	LerDWINram@cont& (0+255),f,b
  3114  001090                     l2889:
  3115                           
  3116                           ; BSR set to: 1
  3117  001090  0E06               	movlw	6
  3118  001092  0101               	movlb	1	; () banked
  3119  001094  6506               	cpfsgt	LerDWINram@cont& (0+255),b
  3120  001096  D7E7               	goto	l2883
  3121  001098                     l222:
  3122                           
  3123                           ; BSR set to: 1
  3124                           ;main.c: 458: }
  3125                           ;main.c: 459: PIR1bits.RCIF = 0;
  3126  001098  9A9E               	bcf	3998,5,c	;volatile
  3127                           
  3128                           ; BSR set to: 1
  3129                           ;main.c: 461: for(cont=0;cont<9;cont++){
  3130  00109A  0E00               	movlw	0
  3131  00109C  0101               	movlb	1	; () banked
  3132  00109E  6F06               	movwf	LerDWINram@cont& (0+255),b
  3133  0010A0                     l2893:
  3134                           
  3135                           ; BSR set to: 1
  3136  0010A0  0E08               	movlw	8
  3137  0010A2  0101               	movlb	1	; () banked
  3138  0010A4  6506               	cpfsgt	LerDWINram@cont& (0+255),b
  3139  0010A6  D006               	goto	l229
  3140                           
  3141                           ; BSR set to: 1
  3142  0010A8  D016               	goto	l2905
  3143                           
  3144                           ; BSR set to: 1
  3145                           ;main.c: 462: while(!PIR1bits.RCIF) if(POWER_FAULT) break;
  3146  0010AA  D004               	goto	l229
  3147  0010AC                     l230:
  3148  0010AC  B844               	btfsc	_POWER_FAULT/(0+8),_POWER_FAULT& (0+7),c
  3149  0010AE  D004               	goto	l232
  3150  0010B0  D001               	goto	l229
  3151  0010B2  D002               	goto	l232
  3152  0010B4                     l229:
  3153  0010B4  AA9E               	btfss	3998,5,c	;volatile
  3154  0010B6  D7FA               	goto	l230
  3155  0010B8                     l232:
  3156                           
  3157                           ;main.c: 463: PIR1bits.RCIF = 0;
  3158  0010B8  9A9E               	bcf	3998,5,c	;volatile
  3159                           
  3160                           ;main.c: 464: SerialIn[cont] = RCREG;
  3161  0010BA  0101               	movlb	1	; () banked
  3162  0010BC  5106               	movf	LerDWINram@cont& (0+255),w,b
  3163  0010BE  0D01               	mullw	1
  3164  0010C0  0E60               	movlw	low _SerialIn
  3165  0010C2  24F3               	addwf	prodl,w,c
  3166  0010C4  6ED9               	movwf	fsr2l,c
  3167  0010C6  0E00               	movlw	high _SerialIn
  3168  0010C8  20F4               	addwfc	prodh,w,c
  3169  0010CA  6EDA               	movwf	fsr2h,c
  3170  0010CC  CFAE FFDF          	movff	4014,indf2	;volatile
  3171                           
  3172                           ; BSR set to: 1
  3173  0010D0  0101               	movlb	1	; () banked
  3174  0010D2  2B06               	incf	LerDWINram@cont& (0+255),f,b
  3175  0010D4  D7E5               	goto	l2893
  3176  0010D6                     l2905:
  3177                           
  3178                           ; BSR set to: 1
  3179                           ;main.c: 465: }
  3180                           ;main.c: 466: VPrecebido = SerialIn[7] << 8;
  3181  0010D6  0100               	movlb	0	; () banked
  3182  0010D8  5167               	movf	(_SerialIn+7)& (0+255),w,b
  3183  0010DA  0101               	movlb	1	; () banked
  3184  0010DC  6F05               	movwf	(LerDWINram@VPrecebido+1)& (0+255),b
  3185  0010DE  6B04               	clrf	LerDWINram@VPrecebido& (0+255),b
  3186                           
  3187                           ; BSR set to: 1
  3188                           ;main.c: 467: VPrecebido += SerialIn[8];
  3189  0010E0  0100               	movlb	0	; () banked
  3190  0010E2  5168               	movf	(_SerialIn+8)& (0+255),w,b
  3191  0010E4  0101               	movlb	1	; () banked
  3192  0010E6  2704               	addwf	LerDWINram@VPrecebido& (0+255),f,b
  3193  0010E8  0E00               	movlw	0
  3194  0010EA  2305               	addwfc	(LerDWINram@VPrecebido+1)& (0+255),f,b
  3195                           
  3196                           ; BSR set to: 1
  3197                           ;main.c: 470: DelayDWIN();
  3198  0010EC  ECED  F009         	call	_DelayDWIN	;wreg free
  3199                           
  3200                           ;main.c: 471: return(VPrecebido);
  3201  0010F0  C104  F102         	movff	LerDWINram@VPrecebido,?_LerDWINram
  3202  0010F4  C105  F103         	movff	LerDWINram@VPrecebido+1,?_LerDWINram+1
  3203  0010F8  D000               	goto	l233
  3204  0010FA                     l233:
  3205  0010FA  0012               	return		;funcret
  3206  0010FC                     __end_of_LerDWINram:
  3207                           	opt stack 0
  3208                           tblptru	equ	0xFF8
  3209                           tblptrh	equ	0xFF7
  3210                           tblptrl	equ	0xFF6
  3211                           tablat	equ	0xFF5
  3212                           prodh	equ	0xFF4
  3213                           prodl	equ	0xFF3
  3214                           intcon	equ	0xFF2
  3215                           postinc0	equ	0xFEE
  3216                           wreg	equ	0xFE8
  3217                           postdec1	equ	0xFE5
  3218                           fsr1l	equ	0xFE1
  3219                           indf2	equ	0xFDF
  3220                           fsr2h	equ	0xFDA
  3221                           fsr2l	equ	0xFD9
  3222                           status	equ	0xFD8
  3223                           
  3224 ;; *************** function _Inicializacao *****************
  3225 ;; Defined at:
  3226 ;;		line 312 in file "main.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;		None
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;		None
  3231 ;; Return value:  Size  Location     Type
  3232 ;;		None               void
  3233 ;; Registers used:
  3234 ;;		wreg, status,2
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3240 ;;      Params:         0       0       0       0       0       0       0       0       0
  3241 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3242 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3243 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3244 ;;Total ram usage:        0 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; Hardware stack levels required when called:    3
  3247 ;; This function calls:
  3248 ;;		Nothing
  3249 ;; This function is called by:
  3250 ;;		_main
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           	psect	text3
  3255  0011BC                     __ptext3:
  3256                           	opt stack 0
  3257  0011BC                     _Inicializacao:
  3258                           	opt stack 27
  3259                           
  3260                           ;main.c: 315: ADCON0 = 0;
  3261                           
  3262                           ;incstack = 0
  3263  0011BC  0E00               	movlw	0
  3264  0011BE  6EC2               	movwf	4034,c	;volatile
  3265                           
  3266                           ;main.c: 316: ADCON1 = 0b00011010;
  3267  0011C0  0E1A               	movlw	26
  3268  0011C2  6EC1               	movwf	4033,c	;volatile
  3269                           
  3270                           ;main.c: 317: ADCON2 = 0b10100101;
  3271  0011C4  0EA5               	movlw	165
  3272  0011C6  6EC0               	movwf	4032,c	;volatile
  3273                           
  3274                           ;main.c: 318: CMCON = 7;
  3275  0011C8  0E07               	movlw	7
  3276  0011CA  6EB4               	movwf	4020,c	;volatile
  3277                           
  3278                           ;main.c: 319: TRISA = 0x3F;
  3279  0011CC  0E3F               	movlw	63
  3280  0011CE  6E92               	movwf	3986,c	;volatile
  3281                           
  3282                           ;main.c: 320: PORTA = 0;
  3283  0011D0  0E00               	movlw	0
  3284  0011D2  6E80               	movwf	3968,c	;volatile
  3285                           
  3286                           ;main.c: 321: TRISB = 0b11000011;
  3287  0011D4  0EC3               	movlw	195
  3288  0011D6  6E93               	movwf	3987,c	;volatile
  3289                           
  3290                           ;main.c: 322: PORTB = 0;
  3291  0011D8  0E00               	movlw	0
  3292  0011DA  6E81               	movwf	3969,c	;volatile
  3293                           
  3294                           ;main.c: 323: TRISC = 0xFF;
  3295  0011DC  6894               	setf	3988,c	;volatile
  3296                           
  3297                           ;main.c: 324: PORTC = 0;
  3298  0011DE  0E00               	movlw	0
  3299  0011E0  6E82               	movwf	3970,c	;volatile
  3300                           
  3301                           ;main.c: 325: TRISD = 0xFF;
  3302  0011E2  6895               	setf	3989,c	;volatile
  3303                           
  3304                           ;main.c: 326: PORTD = 0;
  3305  0011E4  0E00               	movlw	0
  3306  0011E6  6E83               	movwf	3971,c	;volatile
  3307                           
  3308                           ;main.c: 327: TRISE = 0;
  3309  0011E8  0E00               	movlw	0
  3310  0011EA  6E96               	movwf	3990,c	;volatile
  3311                           
  3312                           ;main.c: 328: PORTE = 0;
  3313  0011EC  0E00               	movlw	0
  3314  0011EE  6E84               	movwf	3972,c	;volatile
  3315                           
  3316                           ;main.c: 331: SPBRGH = 2;
  3317  0011F0  0E02               	movlw	2
  3318  0011F2  6EB0               	movwf	4016,c	;volatile
  3319                           
  3320                           ;main.c: 332: SPBRG = 8;
  3321  0011F4  0E08               	movlw	8
  3322  0011F6  6EAF               	movwf	4015,c	;volatile
  3323                           
  3324                           ;main.c: 333: BAUDCONbits.BRG16 = 1;
  3325  0011F8  86B8               	bsf	4024,3,c	;volatile
  3326                           
  3327                           ;main.c: 334: TXSTAbits.BRGH = 1;
  3328  0011FA  84AC               	bsf	4012,2,c	;volatile
  3329                           
  3330                           ;main.c: 335: TXSTAbits.TXEN = 1;
  3331  0011FC  8AAC               	bsf	4012,5,c	;volatile
  3332                           
  3333                           ;main.c: 336: RCSTAbits.SPEN = 1;
  3334  0011FE  8EAB               	bsf	4011,7,c	;volatile
  3335                           
  3336                           ;main.c: 337: RCSTAbits.CREN = 1;
  3337  001200  88AB               	bsf	4011,4,c	;volatile
  3338                           
  3339                           ;main.c: 338: IPR1bits.RCIP = 0;
  3340  001202  9A9F               	bcf	3999,5,c	;volatile
  3341                           
  3342                           ;main.c: 339: PIE1bits.RCIE = 0;
  3343  001204  9A9D               	bcf	3997,5,c	;volatile
  3344                           
  3345                           ;main.c: 341: ADCON0bits.ADON = 1;
  3346  001206  80C2               	bsf	4034,0,c	;volatile
  3347                           
  3348                           ;main.c: 343: RCONbits.IPEN = 1;
  3349  001208  8ED0               	bsf	4048,7,c	;volatile
  3350                           
  3351                           ;main.c: 346: T0CON = 0b11000110;
  3352  00120A  0EC6               	movlw	198
  3353  00120C  6ED5               	movwf	4053,c	;volatile
  3354                           
  3355                           ;main.c: 347: TMR0L = 60;
  3356  00120E  0E3C               	movlw	60
  3357  001210  6ED6               	movwf	4054,c	;volatile
  3358                           
  3359                           ;main.c: 348: INTCON2bits.T0IP = 1;
  3360  001212  84F1               	bsf	intcon2,2,c	;volatile
  3361                           
  3362                           ;main.c: 349: INTCONbits.TMR0IE = 1;
  3363  001214  8AF2               	bsf	intcon,5,c	;volatile
  3364                           
  3365                           ;main.c: 352: IPR1bits.TMR1IP = 0;
  3366  001216  909F               	bcf	3999,0,c	;volatile
  3367                           
  3368                           ;main.c: 353: T1CONbits.T1SYNC = 1;
  3369  001218  84CD               	bsf	4045,2,c	;volatile
  3370                           
  3371                           ;main.c: 354: T1CONbits.TMR1CS = 1;
  3372  00121A  82CD               	bsf	4045,1,c	;volatile
  3373                           
  3374                           ;main.c: 355: T1CONbits.T1OSCEN = 1;
  3375  00121C  86CD               	bsf	4045,3,c	;volatile
  3376                           
  3377                           ;main.c: 356: PIE1bits.TMR1IE = 1;
  3378  00121E  809D               	bsf	3997,0,c	;volatile
  3379                           
  3380                           ;main.c: 357: T1CONbits.T1CKPS0 = 0;
  3381  001220  98CD               	bcf	4045,4,c	;volatile
  3382                           
  3383                           ;main.c: 358: T1CONbits.T1CKPS1 = 0;
  3384  001222  9ACD               	bcf	4045,5,c	;volatile
  3385                           
  3386                           ;main.c: 359: T1CONbits.TMR1ON = 1;
  3387  001224  80CD               	bsf	4045,0,c	;volatile
  3388                           
  3389                           ;main.c: 361: PR2 = 100;
  3390  001226  0E64               	movlw	100
  3391  001228  6ECB               	movwf	4043,c	;volatile
  3392                           
  3393                           ;main.c: 362: CCPR2L = 0x1F;
  3394  00122A  0E1F               	movlw	31
  3395  00122C  6EBB               	movwf	4027,c	;volatile
  3396                           
  3397                           ;main.c: 363: T2CON = 0b00000100;
  3398  00122E  0E04               	movlw	4
  3399  001230  6ECA               	movwf	4042,c	;volatile
  3400                           
  3401                           ;main.c: 364: CCP2CON = 0x0F;
  3402  001232  0E0F               	movlw	15
  3403  001234  6EBA               	movwf	4026,c	;volatile
  3404                           
  3405                           ;main.c: 366: PIE2bits.HLVDIE = 1;
  3406  001236  84A0               	bsf	4000,2,c	;volatile
  3407                           
  3408                           ;main.c: 367: IPR2bits.HLVDIP = 1;
  3409  001238  84A2               	bsf	4002,2,c	;volatile
  3410                           
  3411                           ;main.c: 368: HLVDCONbits.HLVDEN = 0;
  3412  00123A  98D2               	bcf	4050,4,c	;volatile
  3413                           
  3414                           ;main.c: 369: HLVDCON = 0b00000111;
  3415  00123C  0E07               	movlw	7
  3416  00123E  6ED2               	movwf	4050,c	;volatile
  3417                           
  3418                           ;main.c: 370: HLVDCONbits.VDIRMAG = 0;
  3419  001240  9ED2               	bcf	4050,7,c	;volatile
  3420                           
  3421                           ;main.c: 371: HLVDCONbits.HLVDEN = 1;
  3422  001242  88D2               	bsf	4050,4,c	;volatile
  3423                           
  3424                           ;main.c: 372: while(!HLVDCONbits.IRVST);
  3425  001244  D000               	goto	l197
  3426  001246                     l197:
  3427  001246  AAD2               	btfss	4050,5,c	;volatile
  3428  001248  D7FE               	goto	l197
  3429                           
  3430                           ;main.c: 373: PIR2bits.HLVDIF = 0;
  3431  00124A  94A1               	bcf	4001,2,c	;volatile
  3432                           
  3433                           ;main.c: 376: INTCONbits.GIEH = 1;
  3434  00124C  8EF2               	bsf	intcon,7,c	;volatile
  3435                           
  3436                           ;main.c: 377: INTCONbits.GIEL = 1;
  3437  00124E  8CF2               	bsf	intcon,6,c	;volatile
  3438                           
  3439                           ;main.c: 378: CCPR2L = 51;
  3440  001250  0E33               	movlw	51
  3441  001252  6EBB               	movwf	4027,c	;volatile
  3442  001254  0012               	return		;funcret
  3443  001256                     __end_of_Inicializacao:
  3444                           	opt stack 0
  3445                           tblptru	equ	0xFF8
  3446                           tblptrh	equ	0xFF7
  3447                           tblptrl	equ	0xFF6
  3448                           tablat	equ	0xFF5
  3449                           prodh	equ	0xFF4
  3450                           prodl	equ	0xFF3
  3451                           intcon	equ	0xFF2
  3452                           intcon2	equ	0xFF1
  3453                           postinc0	equ	0xFEE
  3454                           wreg	equ	0xFE8
  3455                           postdec1	equ	0xFE5
  3456                           fsr1l	equ	0xFE1
  3457                           indf2	equ	0xFDF
  3458                           fsr2h	equ	0xFDA
  3459                           fsr2l	equ	0xFD9
  3460                           status	equ	0xFD8
  3461                           
  3462 ;; *************** function _EscreverDWINreg *****************
  3463 ;; Defined at:
  3464 ;;		line 413 in file "main.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;  endereco        1    wreg     unsigned char 
  3467 ;;  valor           2    2[BANK1 ] int 
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;  endereco        1    4[BANK1 ] unsigned char 
  3470 ;;  cont            1    5[BANK1 ] unsigned char 
  3471 ;; Return value:  Size  Location     Type
  3472 ;;		None               void
  3473 ;; Registers used:
  3474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3480 ;;      Params:         0       0       2       0       0       0       0       0       0
  3481 ;;      Locals:         0       0       2       0       0       0       0       0       0
  3482 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3483 ;;      Totals:         0       0       4       0       0       0       0       0       0
  3484 ;;Total ram usage:        4 bytes
  3485 ;; Hardware stack levels used:    1
  3486 ;; Hardware stack levels required when called:    4
  3487 ;; This function calls:
  3488 ;;		_DelayDWIN
  3489 ;; This function is called by:
  3490 ;;		_main
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           	psect	text4
  3495  0012CA                     __ptext4:
  3496                           	opt stack 0
  3497  0012CA                     _EscreverDWINreg:
  3498                           	opt stack 26
  3499                           
  3500                           ;incstack = 0
  3501                           ;EscreverDWINreg@endereco stored from wreg
  3502  0012CA  0101               	movlb	1	; () banked
  3503  0012CC  6F04               	movwf	EscreverDWINreg@endereco& (0+255),b
  3504                           
  3505                           ; BSR set to: 1
  3506                           ;main.c: 415: unsigned char cont;
  3507                           ;main.c: 419: SerialOut[0] = 0x5A;
  3508  0012CE  0E5A               	movlw	90
  3509  0012D0  0100               	movlb	0	; () banked
  3510  0012D2  6F88               	movwf	_SerialOut& (0+255),b
  3511                           
  3512                           ;main.c: 420: SerialOut[1] = 0xA5;
  3513  0012D4  0EA5               	movlw	165
  3514  0012D6  0100               	movlb	0	; () banked
  3515  0012D8  6F89               	movwf	(_SerialOut+1)& (0+255),b
  3516                           
  3517                           ;main.c: 421: SerialOut[2] = 4;
  3518  0012DA  0E04               	movlw	4
  3519  0012DC  0100               	movlb	0	; () banked
  3520  0012DE  6F8A               	movwf	(_SerialOut+2)& (0+255),b
  3521                           
  3522                           ;main.c: 422: SerialOut[3] = 0x80;
  3523  0012E0  0E80               	movlw	128
  3524  0012E2  0100               	movlb	0	; () banked
  3525  0012E4  6F8B               	movwf	(_SerialOut+3)& (0+255),b
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;main.c: 423: SerialOut[4] = endereco;
  3529  0012E6  C104  F08C         	movff	EscreverDWINreg@endereco,_SerialOut+4
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;main.c: 424: SerialOut[5] = valor >> 8;
  3533  0012EA  0101               	movlb	1	; () banked
  3534  0012EC  5103               	movf	(EscreverDWINreg@valor+1)& (0+255),w,b
  3535  0012EE  0100               	movlb	0	; () banked
  3536  0012F0  6F8D               	movwf	(_SerialOut+5)& (0+255),b
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;main.c: 425: SerialOut[6] = valor & 0x00FF;
  3540  0012F2  C102  F08E         	movff	EscreverDWINreg@valor,_SerialOut+6
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;main.c: 426: PIR1bits.TXIF = 0;
  3544  0012F6  989E               	bcf	3998,4,c	;volatile
  3545                           
  3546                           ; BSR set to: 0
  3547                           ;main.c: 427: for(cont=0;cont<7;cont++){
  3548  0012F8  0E00               	movlw	0
  3549  0012FA  0101               	movlb	1	; () banked
  3550  0012FC  6F05               	movwf	EscreverDWINreg@cont& (0+255),b
  3551  0012FE                     l2859:
  3552                           
  3553                           ; BSR set to: 1
  3554  0012FE  0E06               	movlw	6
  3555  001300  0101               	movlb	1	; () banked
  3556  001302  6505               	cpfsgt	EscreverDWINreg@cont& (0+255),b
  3557  001304  D001               	goto	l2863
  3558                           
  3559                           ; BSR set to: 1
  3560  001306  D016               	goto	l2871
  3561  001308                     l2863:
  3562                           
  3563                           ; BSR set to: 1
  3564                           ;main.c: 428: TXREG = SerialOut[cont];
  3565  001308  0101               	movlb	1	; () banked
  3566  00130A  5105               	movf	EscreverDWINreg@cont& (0+255),w,b
  3567  00130C  0D01               	mullw	1
  3568  00130E  0E88               	movlw	low _SerialOut
  3569  001310  24F3               	addwf	prodl,w,c
  3570  001312  6ED9               	movwf	fsr2l,c
  3571  001314  0E00               	movlw	high _SerialOut
  3572  001316  20F4               	addwfc	prodh,w,c
  3573  001318  6EDA               	movwf	fsr2h,c
  3574  00131A  50DF               	movf	indf2,w,c
  3575  00131C  6EAD               	movwf	4013,c	;volatile
  3576                           
  3577                           ;main.c: 429: while(!PIR1bits.TXIF) if(POWER_FAULT) break;
  3578  00131E  D004               	goto	l214
  3579  001320                     l215:
  3580                           
  3581                           ; BSR set to: 1
  3582  001320  B844               	btfsc	_POWER_FAULT/(0+8),_POWER_FAULT& (0+7),c
  3583  001322  D004               	goto	l217
  3584  001324  D001               	goto	l214
  3585                           
  3586                           ; BSR set to: 1
  3587  001326  D002               	goto	l217
  3588  001328                     l214:
  3589                           
  3590                           ; BSR set to: 1
  3591  001328  A89E               	btfss	3998,4,c	;volatile
  3592  00132A  D7FA               	goto	l215
  3593  00132C                     l217:
  3594                           
  3595                           ; BSR set to: 1
  3596                           ;main.c: 430: PIR1bits.TXIF = 0;
  3597  00132C  989E               	bcf	3998,4,c	;volatile
  3598                           
  3599                           ; BSR set to: 1
  3600  00132E  0101               	movlb	1	; () banked
  3601  001330  2B05               	incf	EscreverDWINreg@cont& (0+255),f,b
  3602  001332  D7E5               	goto	l2859
  3603  001334                     l2871:
  3604                           
  3605                           ; BSR set to: 1
  3606                           ;main.c: 431: }
  3607                           ;main.c: 432: DelayDWIN();
  3608  001334  ECED  F009         	call	_DelayDWIN	;wreg free
  3609  001338  0012               	return		;funcret
  3610  00133A                     __end_of_EscreverDWINreg:
  3611                           	opt stack 0
  3612                           tblptru	equ	0xFF8
  3613                           tblptrh	equ	0xFF7
  3614                           tblptrl	equ	0xFF6
  3615                           tablat	equ	0xFF5
  3616                           prodh	equ	0xFF4
  3617                           prodl	equ	0xFF3
  3618                           intcon	equ	0xFF2
  3619                           intcon2	equ	0xFF1
  3620                           postinc0	equ	0xFEE
  3621                           wreg	equ	0xFE8
  3622                           postdec1	equ	0xFE5
  3623                           fsr1l	equ	0xFE1
  3624                           indf2	equ	0xFDF
  3625                           fsr2h	equ	0xFDA
  3626                           fsr2l	equ	0xFD9
  3627                           status	equ	0xFD8
  3628                           
  3629 ;; *************** function _EscreverDWINram *****************
  3630 ;; Defined at:
  3631 ;;		line 385 in file "main.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;  endereco        2    2[BANK1 ] unsigned int 
  3634 ;;  valor           2    4[BANK1 ] int 
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;  cont            1    6[BANK1 ] unsigned char 
  3637 ;; Return value:  Size  Location     Type
  3638 ;;		None               void
  3639 ;; Registers used:
  3640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3646 ;;      Params:         0       0       4       0       0       0       0       0       0
  3647 ;;      Locals:         0       0       1       0       0       0       0       0       0
  3648 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3649 ;;      Totals:         0       0       5       0       0       0       0       0       0
  3650 ;;Total ram usage:        5 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:    4
  3653 ;; This function calls:
  3654 ;;		_DelayDWIN
  3655 ;; This function is called by:
  3656 ;;		_main
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           	psect	text5
  3661  001256                     __ptext5:
  3662                           	opt stack 0
  3663  001256                     _EscreverDWINram:
  3664                           	opt stack 26
  3665                           
  3666                           ;main.c: 387: unsigned char cont;
  3667                           ;main.c: 391: SerialOut[0] = 0x5A;
  3668                           
  3669                           ;incstack = 0
  3670  001256  0E5A               	movlw	90
  3671  001258  0100               	movlb	0	; () banked
  3672  00125A  6F88               	movwf	_SerialOut& (0+255),b
  3673                           
  3674                           ;main.c: 392: SerialOut[1] = 0xA5;
  3675  00125C  0EA5               	movlw	165
  3676  00125E  0100               	movlb	0	; () banked
  3677  001260  6F89               	movwf	(_SerialOut+1)& (0+255),b
  3678                           
  3679                           ;main.c: 393: SerialOut[2] = 5;
  3680  001262  0E05               	movlw	5
  3681  001264  0100               	movlb	0	; () banked
  3682  001266  6F8A               	movwf	(_SerialOut+2)& (0+255),b
  3683                           
  3684                           ;main.c: 394: SerialOut[3] = 0x82;
  3685  001268  0E82               	movlw	130
  3686  00126A  0100               	movlb	0	; () banked
  3687  00126C  6F8B               	movwf	(_SerialOut+3)& (0+255),b
  3688                           
  3689                           ;main.c: 395: SerialOut[4] = endereco >> 8;
  3690  00126E  0101               	movlb	1	; () banked
  3691  001270  5103               	movf	(EscreverDWINram@endereco+1)& (0+255),w,b
  3692  001272  0100               	movlb	0	; () banked
  3693  001274  6F8C               	movwf	(_SerialOut+4)& (0+255),b
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;main.c: 396: SerialOut[5] = endereco & 0x00FF;
  3697  001276  C102  F08D         	movff	EscreverDWINram@endereco,_SerialOut+5
  3698                           
  3699                           ;main.c: 397: SerialOut[6] = valor >> 8;
  3700  00127A  0101               	movlb	1	; () banked
  3701  00127C  5105               	movf	(EscreverDWINram@valor+1)& (0+255),w,b
  3702  00127E  0100               	movlb	0	; () banked
  3703  001280  6F8E               	movwf	(_SerialOut+6)& (0+255),b
  3704                           
  3705                           ; BSR set to: 0
  3706                           ;main.c: 398: SerialOut[7] = valor & 0x00FF;
  3707  001282  C104  F08F         	movff	EscreverDWINram@valor,_SerialOut+7
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;main.c: 399: PIR1bits.TXIF = 0;
  3711  001286  989E               	bcf	3998,4,c	;volatile
  3712                           
  3713                           ;main.c: 400: for(cont=0;cont<8;cont++){
  3714  001288  0E00               	movlw	0
  3715  00128A  0101               	movlb	1	; () banked
  3716  00128C  6F06               	movwf	EscreverDWINram@cont& (0+255),b
  3717  00128E                     l2833:
  3718                           
  3719                           ; BSR set to: 1
  3720  00128E  0E07               	movlw	7
  3721  001290  0101               	movlb	1	; () banked
  3722  001292  6506               	cpfsgt	EscreverDWINram@cont& (0+255),b
  3723  001294  D001               	goto	l2837
  3724                           
  3725                           ; BSR set to: 1
  3726  001296  D016               	goto	l2845
  3727  001298                     l2837:
  3728                           
  3729                           ; BSR set to: 1
  3730                           ;main.c: 401: TXREG = SerialOut[cont];
  3731  001298  0101               	movlb	1	; () banked
  3732  00129A  5106               	movf	EscreverDWINram@cont& (0+255),w,b
  3733  00129C  0D01               	mullw	1
  3734  00129E  0E88               	movlw	low _SerialOut
  3735  0012A0  24F3               	addwf	prodl,w,c
  3736  0012A2  6ED9               	movwf	fsr2l,c
  3737  0012A4  0E00               	movlw	high _SerialOut
  3738  0012A6  20F4               	addwfc	prodh,w,c
  3739  0012A8  6EDA               	movwf	fsr2h,c
  3740  0012AA  50DF               	movf	indf2,w,c
  3741  0012AC  6EAD               	movwf	4013,c	;volatile
  3742                           
  3743                           ;main.c: 402: while(!PIR1bits.TXIF) if(POWER_FAULT) break;
  3744  0012AE  D004               	goto	l205
  3745  0012B0                     l206:
  3746  0012B0  B844               	btfsc	_POWER_FAULT/(0+8),_POWER_FAULT& (0+7),c
  3747  0012B2  D004               	goto	l208
  3748  0012B4  D001               	goto	l205
  3749  0012B6  D002               	goto	l208
  3750  0012B8                     l205:
  3751  0012B8  A89E               	btfss	3998,4,c	;volatile
  3752  0012BA  D7FA               	goto	l206
  3753  0012BC                     l208:
  3754                           
  3755                           ;main.c: 403: PIR1bits.TXIF = 0;
  3756  0012BC  989E               	bcf	3998,4,c	;volatile
  3757  0012BE  0101               	movlb	1	; () banked
  3758  0012C0  2B06               	incf	EscreverDWINram@cont& (0+255),f,b
  3759  0012C2  D7E5               	goto	l2833
  3760  0012C4                     l2845:
  3761                           
  3762                           ; BSR set to: 1
  3763                           ;main.c: 404: }
  3764                           ;main.c: 405: DelayDWIN();
  3765  0012C4  ECED  F009         	call	_DelayDWIN	;wreg free
  3766  0012C8  0012               	return		;funcret
  3767  0012CA                     __end_of_EscreverDWINram:
  3768                           	opt stack 0
  3769                           tblptru	equ	0xFF8
  3770                           tblptrh	equ	0xFF7
  3771                           tblptrl	equ	0xFF6
  3772                           tablat	equ	0xFF5
  3773                           prodh	equ	0xFF4
  3774                           prodl	equ	0xFF3
  3775                           intcon	equ	0xFF2
  3776                           intcon2	equ	0xFF1
  3777                           postinc0	equ	0xFEE
  3778                           wreg	equ	0xFE8
  3779                           postdec1	equ	0xFE5
  3780                           fsr1l	equ	0xFE1
  3781                           indf2	equ	0xFDF
  3782                           fsr2h	equ	0xFDA
  3783                           fsr2l	equ	0xFD9
  3784                           status	equ	0xFD8
  3785                           
  3786 ;; *************** function _DelayDWIN *****************
  3787 ;; Defined at:
  3788 ;;		line 130 in file "main.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;		None
  3791 ;; Auto vars:     Size  Location     Type
  3792 ;;  cont            1    1[BANK1 ] unsigned char 
  3793 ;; Return value:  Size  Location     Type
  3794 ;;		None               void
  3795 ;; Registers used:
  3796 ;;		wreg, status,2, status,0
  3797 ;; Tracked objects:
  3798 ;;		On entry : 0/0
  3799 ;;		On exit  : 0/0
  3800 ;;		Unchanged: 0/0
  3801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3802 ;;      Params:         0       0       0       0       0       0       0       0       0
  3803 ;;      Locals:         0       0       1       0       0       0       0       0       0
  3804 ;;      Temps:          0       0       1       0       0       0       0       0       0
  3805 ;;      Totals:         0       0       2       0       0       0       0       0       0
  3806 ;;Total ram usage:        2 bytes
  3807 ;; Hardware stack levels used:    1
  3808 ;; Hardware stack levels required when called:    3
  3809 ;; This function calls:
  3810 ;;		Nothing
  3811 ;; This function is called by:
  3812 ;;		_EscreverDWINram
  3813 ;;		_EscreverDWINreg
  3814 ;;		_LerDWINram
  3815 ;;		_LerDWINreg
  3816 ;;		_main
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           	psect	text6
  3821  0013DA                     __ptext6:
  3822                           	opt stack 0
  3823  0013DA                     _DelayDWIN:
  3824                           	opt stack 26
  3825                           
  3826                           ;main.c: 131: unsigned char cont;
  3827                           ;main.c: 133: for(cont=0;cont<80;cont++)
  3828                           
  3829                           ;incstack = 0
  3830  0013DA  0E00               	movlw	0
  3831  0013DC  0101               	movlb	1	; () banked
  3832  0013DE  6F01               	movwf	DelayDWIN@cont& (0+255),b
  3833  0013E0                     l2759:
  3834                           
  3835                           ; BSR set to: 1
  3836  0013E0  0E4F               	movlw	79
  3837  0013E2  0101               	movlb	1	; () banked
  3838  0013E4  6501               	cpfsgt	DelayDWIN@cont& (0+255),b
  3839  0013E6  D001               	goto	l2763
  3840                           
  3841                           ; BSR set to: 1
  3842  0013E8  D00C               	goto	l148
  3843  0013EA                     l2763:
  3844                           
  3845                           ; BSR set to: 1
  3846                           ;main.c: 134: _delay((unsigned long)((1)*(20000000/4000.0)));
  3847  0013EA  0E07               	movlw	7
  3848  0013EC  0101               	movlb	1	; () banked
  3849  0013EE  6F00               	movwf	??_DelayDWIN& (0+255),b
  3850  0013F0  0E7D               	movlw	125
  3851  0013F2                     u3507:
  3852  0013F2  2EE8               	decfsz	wreg,f,c
  3853  0013F4  D7FE               	goto	u3507
  3854  0013F6  2F00               	decfsz	??_DelayDWIN& (0+255),f,b
  3855  0013F8  D7FC               	goto	u3507
  3856  0013FA  F000               	nop	
  3857  0013FC  0101               	movlb	1	; () banked
  3858  0013FE  2B01               	incf	DelayDWIN@cont& (0+255),f,b
  3859  001400  D7EF               	goto	l2759
  3860  001402                     l148:
  3861                           
  3862                           ; BSR set to: 1
  3863  001402  0012               	return		;funcret
  3864  001404                     __end_of_DelayDWIN:
  3865                           	opt stack 0
  3866                           tblptru	equ	0xFF8
  3867                           tblptrh	equ	0xFF7
  3868                           tblptrl	equ	0xFF6
  3869                           tablat	equ	0xFF5
  3870                           prodh	equ	0xFF4
  3871                           prodl	equ	0xFF3
  3872                           intcon	equ	0xFF2
  3873                           intcon2	equ	0xFF1
  3874                           postinc0	equ	0xFEE
  3875                           wreg	equ	0xFE8
  3876                           postdec1	equ	0xFE5
  3877                           fsr1l	equ	0xFE1
  3878                           indf2	equ	0xFDF
  3879                           fsr2h	equ	0xFDA
  3880                           fsr2l	equ	0xFD9
  3881                           status	equ	0xFD8
  3882                           
  3883 ;; *************** function _CiclarOUT1 *****************
  3884 ;; Defined at:
  3885 ;;		line 122 in file "main.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;		None
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;		None
  3890 ;; Return value:  Size  Location     Type
  3891 ;;		None               void
  3892 ;; Registers used:
  3893 ;;		None
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3899 ;;      Params:         0       0       0       0       0       0       0       0       0
  3900 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3901 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3902 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3903 ;;Total ram usage:        0 bytes
  3904 ;; Hardware stack levels used:    1
  3905 ;; Hardware stack levels required when called:    3
  3906 ;; This function calls:
  3907 ;;		Nothing
  3908 ;; This function is called by:
  3909 ;;		_main
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           	psect	text7
  3914  001420                     __ptext7:
  3915                           	opt stack 0
  3916  001420                     _CiclarOUT1:
  3917                           	opt stack 27
  3918                           
  3919                           ;main.c: 124: PORTBbits.RB4 = 1;
  3920                           
  3921                           ; BSR set to: 1
  3922                           ;incstack = 0
  3923  001420  8881               	bsf	3969,4,c	;volatile
  3924                           
  3925                           ;main.c: 125: __nop();
  3926  001422  F000               	nop	
  3927                           
  3928                           ;main.c: 126: PORTBbits.RB4 = 0;
  3929  001424  9881               	bcf	3969,4,c	;volatile
  3930                           
  3931                           ;main.c: 127: __nop();
  3932  001426  F000               	nop	
  3933  001428  0012               	return		;funcret
  3934  00142A                     __end_of_CiclarOUT1:
  3935                           	opt stack 0
  3936                           tblptru	equ	0xFF8
  3937                           tblptrh	equ	0xFF7
  3938                           tblptrl	equ	0xFF6
  3939                           tablat	equ	0xFF5
  3940                           prodh	equ	0xFF4
  3941                           prodl	equ	0xFF3
  3942                           intcon	equ	0xFF2
  3943                           intcon2	equ	0xFF1
  3944                           postinc0	equ	0xFEE
  3945                           wreg	equ	0xFE8
  3946                           postdec1	equ	0xFE5
  3947                           fsr1l	equ	0xFE1
  3948                           indf2	equ	0xFDF
  3949                           fsr2h	equ	0xFDA
  3950                           fsr2l	equ	0xFD9
  3951                           status	equ	0xFD8
  3952                           
  3953 ;; *************** function _LowISR *****************
  3954 ;; Defined at:
  3955 ;;		line 264 in file "main.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;		None
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;		None
  3960 ;; Return value:  Size  Location     Type
  3961 ;;		None               void
  3962 ;; Registers used:
  3963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3969 ;;      Params:         0       0       0       0       0       0       0       0       0
  3970 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3971 ;;      Temps:         17       0       0       0       0       0       0       0       0
  3972 ;;      Totals:        17       0       0       0       0       0       0       0       0
  3973 ;;Total ram usage:       17 bytes
  3974 ;; Hardware stack levels used:    1
  3975 ;; Hardware stack levels required when called:    2
  3976 ;; This function calls:
  3977 ;;		Nothing
  3978 ;; This function is called by:
  3979 ;;		Interrupt level 1
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           	psect	intcodelo
  3984  000018                     __pintcodelo:
  3985                           	opt stack 0
  3986  000018                     _LowISR:
  3987                           	opt stack 26
  3988                           
  3989                           ;incstack = 0
  3990  000018  CFD8 F029          	movff	status,??_LowISR
  3991  00001C  CFE8 F02A          	movff	wreg,??_LowISR+1
  3992  000020  CFE0 F02B          	movff	bsr,??_LowISR+2
  3993  000024  CFFA F02C          	movff	pclath,??_LowISR+3
  3994  000028  CFFB F02D          	movff	pclatu,??_LowISR+4
  3995  00002C  CFE9 F02E          	movff	fsr0l,??_LowISR+5
  3996  000030  CFEA F02F          	movff	fsr0h,??_LowISR+6
  3997  000034  CFE1 F030          	movff	fsr1l,??_LowISR+7
  3998  000038  CFE2 F031          	movff	fsr1h,??_LowISR+8
  3999  00003C  CFD9 F032          	movff	fsr2l,??_LowISR+9
  4000  000040  CFDA F033          	movff	fsr2h,??_LowISR+10
  4001  000044  CFF3 F034          	movff	prodl,??_LowISR+11
  4002  000048  CFF4 F035          	movff	prodh,??_LowISR+12
  4003  00004C  CFF6 F036          	movff	tblptrl,??_LowISR+13
  4004  000050  CFF7 F037          	movff	tblptrh,??_LowISR+14
  4005  000054  CFF8 F038          	movff	tblptru,??_LowISR+15
  4006  000058  CFF5 F039          	movff	tablat,??_LowISR+16
  4007                           
  4008                           ;main.c: 266: static unsigned char Indice;
  4009                           ;main.c: 271: if(PIE1bits.TMR1IE && PIR1bits.TMR1IF){
  4010  00005C  B09D               	btfsc	3997,0,c	;volatile
  4011  00005E  A09E               	btfss	3998,0,c	;volatile
  4012  000060  D040               	goto	i1l2199
  4013                           
  4014                           ;main.c: 272: TMR1H = 0x80;
  4015  000062  0E80               	movlw	128
  4016  000064  6ECF               	movwf	4047,c	;volatile
  4017                           
  4018                           ;main.c: 273: TMR1L = 0;
  4019  000066  0E00               	movlw	0
  4020  000068  6ECE               	movwf	4046,c	;volatile
  4021                           
  4022                           ;main.c: 274: PIR1bits.TMR1IF = 0;
  4023  00006A  909E               	bcf	3998,0,c	;volatile
  4024                           
  4025                           ;main.c: 275: segundos ++;
  4026  00006C  0100               	movlb	0	; () banked
  4027  00006E  2BC3               	incf	_segundos& (0+255),f,b
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;main.c: 276: if(segundos>59){
  4031  000070  0E3B               	movlw	59
  4032  000072  0100               	movlb	0	; () banked
  4033  000074  65C3               	cpfsgt	_segundos& (0+255),b
  4034  000076  D006               	goto	i1l2177
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;main.c: 277: segundos = 0;
  4038  000078  0E00               	movlw	0
  4039  00007A  0100               	movlb	0	; () banked
  4040  00007C  6FC3               	movwf	_segundos& (0+255),b
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;main.c: 278: minutos++;
  4044  00007E  0100               	movlb	0	; () banked
  4045  000080  2BC2               	incf	_minutos& (0+255),f,b
  4046  000082  D000               	goto	i1l2177
  4047  000084                     i1l2177:
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;main.c: 279: }
  4051                           ;main.c: 280: if(minutos>59){
  4052  000084  0E3B               	movlw	59
  4053  000086  0100               	movlb	0	; () banked
  4054  000088  65C2               	cpfsgt	_minutos& (0+255),b
  4055  00008A  D006               	goto	i1l2183
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;main.c: 281: minutos = 0;
  4059  00008C  0E00               	movlw	0
  4060  00008E  0100               	movlb	0	; () banked
  4061  000090  6FC2               	movwf	_minutos& (0+255),b
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;main.c: 282: horas++;
  4065  000092  0100               	movlb	0	; () banked
  4066  000094  2BC1               	incf	_horas& (0+255),f,b
  4067  000096  D000               	goto	i1l2183
  4068  000098                     i1l2183:
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;main.c: 283: }
  4072                           ;main.c: 284: if( (horas>23) && (minutos == 0) && (segundos == 0) ){
  4073  000098  0E17               	movlw	23
  4074  00009A  0100               	movlb	0	; () banked
  4075  00009C  65C1               	cpfsgt	_horas& (0+255),b
  4076  00009E  D015               	goto	i1l2197
  4077                           
  4078                           ; BSR set to: 0
  4079  0000A0  0100               	movlb	0	; () banked
  4080  0000A2  51C2               	movf	_minutos& (0+255),w,b
  4081  0000A4  A4D8               	btfss	status,2,c
  4082  0000A6  D011               	goto	i1l2197
  4083                           
  4084                           ; BSR set to: 0
  4085  0000A8  0100               	movlb	0	; () banked
  4086  0000AA  51C3               	movf	_segundos& (0+255),w,b
  4087  0000AC  A4D8               	btfss	status,2,c
  4088  0000AE  D00D               	goto	i1l2197
  4089                           
  4090                           ; BSR set to: 0
  4091                           ;main.c: 285: horas = 0;
  4092  0000B0  0E00               	movlw	0
  4093  0000B2  0100               	movlb	0	; () banked
  4094  0000B4  6FC1               	movwf	_horas& (0+255),b
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;main.c: 286: DiaDaSemana++;
  4098  0000B6  0100               	movlb	0	; () banked
  4099  0000B8  2BBC               	incf	_DiaDaSemana& (0+255),f,b
  4100                           
  4101                           ; BSR set to: 0
  4102                           ;main.c: 287: if(DiaDaSemana > SAB)
  4103  0000BA  0E06               	movlw	6
  4104  0000BC  0100               	movlb	0	; () banked
  4105  0000BE  65BC               	cpfsgt	_DiaDaSemana& (0+255),b
  4106  0000C0  D004               	goto	i1l2197
  4107                           
  4108                           ; BSR set to: 0
  4109                           ;main.c: 288: DiaDaSemana = DOM;
  4110  0000C2  0E00               	movlw	0
  4111  0000C4  0100               	movlb	0	; () banked
  4112  0000C6  6FBC               	movwf	_DiaDaSemana& (0+255),b
  4113                           
  4114                           ; BSR set to: 0
  4115  0000C8  D000               	goto	i1l2197
  4116  0000CA                     i1l2197:
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;main.c: 289: }
  4120                           ;main.c: 290: MinutosDia = horas * 60 + minutos;
  4121  0000CA  0100               	movlb	0	; () banked
  4122  0000CC  51C1               	movf	_horas& (0+255),w,b
  4123  0000CE  0D3C               	mullw	60
  4124  0000D0  0100               	movlb	0	; () banked
  4125  0000D2  51C2               	movf	_minutos& (0+255),w,b
  4126  0000D4  24F3               	addwf	prodl,w,c
  4127  0000D6  6E21               	movwf	_MinutosDia,c
  4128  0000D8  0100               	movlb	0	; () banked
  4129  0000DA  0E00               	movlw	0
  4130  0000DC  20F4               	addwfc	prodh,w,c
  4131  0000DE  6E22               	movwf	_MinutosDia+1,c
  4132  0000E0  D000               	goto	i1l2199
  4133  0000E2                     i1l2199:
  4134                           
  4135                           ;main.c: 291: }
  4136                           ;main.c: 294: if(PIE1bits.RCIE && PIR1bits.RCIF){
  4137  0000E2  BA9D               	btfsc	3997,5,c	;volatile
  4138  0000E4  AA9E               	btfss	3998,5,c	;volatile
  4139  0000E6  D013               	goto	i1l194
  4140                           
  4141                           ;main.c: 295: PIR1bits.RCIF = 0;
  4142  0000E8  9A9E               	bcf	3998,5,c	;volatile
  4143                           
  4144                           ;main.c: 296: SerialIn[Indice] = RCREG;
  4145  0000EA  5026               	movf	LowISR@Indice,w,c
  4146  0000EC  0D01               	mullw	1
  4147  0000EE  0E60               	movlw	low _SerialIn
  4148  0000F0  24F3               	addwf	prodl,w,c
  4149  0000F2  6ED9               	movwf	fsr2l,c
  4150  0000F4  0E00               	movlw	high _SerialIn
  4151  0000F6  20F4               	addwfc	prodh,w,c
  4152  0000F8  6EDA               	movwf	fsr2h,c
  4153  0000FA  CFAE FFDF          	movff	4014,indf2	;volatile
  4154                           
  4155                           ;main.c: 297: Indice++;
  4156  0000FE  2A26               	incf	LowISR@Indice,f,c
  4157                           
  4158                           ;main.c: 298: if(RCREG == '\r'){
  4159  000100  0E0D               	movlw	13
  4160  000102  18AE               	xorwf	4014,w,c	;volatile
  4161  000104  A4D8               	btfss	status,2,c
  4162  000106  D003               	goto	i1l194
  4163                           
  4164                           ;main.c: 299: Indice = 0;
  4165  000108  0E00               	movlw	0
  4166  00010A  6E26               	movwf	LowISR@Indice,c
  4167  00010C  D000               	goto	i1l194
  4168  00010E                     i1l194:
  4169  00010E  C039  FFF5         	movff	??_LowISR+16,tablat
  4170  000112  C038  FFF8         	movff	??_LowISR+15,tblptru
  4171  000116  C037  FFF7         	movff	??_LowISR+14,tblptrh
  4172  00011A  C036  FFF6         	movff	??_LowISR+13,tblptrl
  4173  00011E  C035  FFF4         	movff	??_LowISR+12,prodh
  4174  000122  C034  FFF3         	movff	??_LowISR+11,prodl
  4175  000126  C033  FFDA         	movff	??_LowISR+10,fsr2h
  4176  00012A  C032  FFD9         	movff	??_LowISR+9,fsr2l
  4177  00012E  C031  FFE2         	movff	??_LowISR+8,fsr1h
  4178  000132  C030  FFE1         	movff	??_LowISR+7,fsr1l
  4179  000136  C02F  FFEA         	movff	??_LowISR+6,fsr0h
  4180  00013A  C02E  FFE9         	movff	??_LowISR+5,fsr0l
  4181  00013E  C02D  FFFB         	movff	??_LowISR+4,pclatu
  4182  000142  C02C  FFFA         	movff	??_LowISR+3,pclath
  4183  000146  C02B  FFE0         	movff	??_LowISR+2,bsr
  4184  00014A  C02A  FFE8         	movff	??_LowISR+1,wreg
  4185  00014E  C029  FFD8         	movff	??_LowISR,status
  4186  000152  0010               	retfie	
  4187  000154                     __end_of_LowISR:
  4188                           	opt stack 0
  4189                           pclatu	equ	0xFFB
  4190                           pclath	equ	0xFFA
  4191                           tblptru	equ	0xFF8
  4192                           tblptrh	equ	0xFF7
  4193                           tblptrl	equ	0xFF6
  4194                           tablat	equ	0xFF5
  4195                           prodh	equ	0xFF4
  4196                           prodl	equ	0xFF3
  4197                           intcon	equ	0xFF2
  4198                           intcon2	equ	0xFF1
  4199                           postinc0	equ	0xFEE
  4200                           fsr0h	equ	0xFEA
  4201                           fsr0l	equ	0xFE9
  4202                           wreg	equ	0xFE8
  4203                           postdec1	equ	0xFE5
  4204                           fsr1h	equ	0xFE2
  4205                           fsr1l	equ	0xFE1
  4206                           bsr	equ	0xFE0
  4207                           indf2	equ	0xFDF
  4208                           fsr2h	equ	0xFDA
  4209                           fsr2l	equ	0xFD9
  4210                           status	equ	0xFD8
  4211                           
  4212 ;; *************** function _HighISR *****************
  4213 ;; Defined at:
  4214 ;;		line 140 in file "main.c"
  4215 ;; Parameters:    Size  Location     Type
  4216 ;;		None
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;  Temp16          2   24[COMRAM] unsigned int 
  4219 ;;  Temp8           1   26[COMRAM] unsigned char 
  4220 ;; Return value:  Size  Location     Type
  4221 ;;		None               void
  4222 ;; Registers used:
  4223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4224 ;; Tracked objects:
  4225 ;;		On entry : 0/0
  4226 ;;		On exit  : 0/0
  4227 ;;		Unchanged: 0/0
  4228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4229 ;;      Params:         0       0       0       0       0       0       0       0       0
  4230 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4231 ;;      Temps:          0      16       0       0       0       0       0       0       0
  4232 ;;      Totals:         3      16       0       0       0       0       0       0       0
  4233 ;;Total ram usage:       19 bytes
  4234 ;; Hardware stack levels used:    1
  4235 ;; Hardware stack levels required when called:    1
  4236 ;; This function calls:
  4237 ;;		___lwdiv
  4238 ;; This function is called by:
  4239 ;;		Interrupt level 2
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           	psect	intcode
  4244  000008                     __pintcode:
  4245                           	opt stack 0
  4246  000008                     _HighISR:
  4247                           	opt stack 26
  4248                           
  4249                           ;incstack = 0
  4250  000008  CFFA F0E2          	movff	pclath,??_HighISR+2
  4251  00000C  CFFB F0E3          	movff	pclatu,??_HighISR+3
  4252  000010  CFE9 F0E4          	movff	fsr0l,??_HighISR+4
  4253  000014  ED6C  F006         	call	int_func,f	;refresh shadow registers
  4254                           pclatu	equ	0xFFB
  4255                           pclath	equ	0xFFA
  4256                           tblptru	equ	0xFF8
  4257                           tblptrh	equ	0xFF7
  4258                           tblptrl	equ	0xFF6
  4259                           tablat	equ	0xFF5
  4260                           prodh	equ	0xFF4
  4261                           prodl	equ	0xFF3
  4262                           intcon	equ	0xFF2
  4263                           intcon2	equ	0xFF1
  4264                           postinc0	equ	0xFEE
  4265                           fsr0h	equ	0xFEA
  4266                           fsr0l	equ	0xFE9
  4267                           wreg	equ	0xFE8
  4268                           postdec1	equ	0xFE5
  4269                           fsr1h	equ	0xFE2
  4270                           fsr1l	equ	0xFE1
  4271                           bsr	equ	0xFE0
  4272                           indf2	equ	0xFDF
  4273                           fsr2h	equ	0xFDA
  4274                           fsr2l	equ	0xFD9
  4275                           status	equ	0xFD8
  4276                           
  4277                           	psect	intcode_body
  4278  000CD8                     __pintcode_body:
  4279                           	opt stack 26
  4280  000CD8                     int_func:
  4281                           	opt stack 26
  4282  000CD8  0006               	pop		; remove dummy address from shadow register refresh
  4283  000CDA  CFEA F0E5          	movff	fsr0h,??_HighISR+5
  4284  000CDE  CFE1 F0E6          	movff	fsr1l,??_HighISR+6
  4285  000CE2  CFE2 F0E7          	movff	fsr1h,??_HighISR+7
  4286  000CE6  CFD9 F0E8          	movff	fsr2l,??_HighISR+8
  4287  000CEA  CFDA F0E9          	movff	fsr2h,??_HighISR+9
  4288  000CEE  CFF3 F0EA          	movff	prodl,??_HighISR+10
  4289  000CF2  CFF4 F0EB          	movff	prodh,??_HighISR+11
  4290  000CF6  CFF6 F0EC          	movff	tblptrl,??_HighISR+12
  4291  000CFA  CFF7 F0ED          	movff	tblptrh,??_HighISR+13
  4292  000CFE  CFF8 F0EE          	movff	tblptru,??_HighISR+14
  4293  000D02  CFF5 F0EF          	movff	tablat,??_HighISR+15
  4294                           
  4295                           ;main.c: 141: unsigned int Temp16;
  4296                           ;main.c: 142: unsigned char Temp8;
  4297                           ;main.c: 143: enum EstadosAD{SETACANAL,CONVERSAO,AGUARDACONVERSAO,CALCULAMEDIA};
  4298                           ;main.c: 144: static unsigned char EstadoAD = SETACANAL;
  4299                           ;main.c: 145: static unsigned char ContMedia = 0;
  4300                           ;main.c: 146: static unsigned int AccValoresAD[4];
  4301                           ;main.c: 147: static unsigned int ValoresADanteriores1[4] = {0,0,0,0};
  4302                           ;main.c: 148: static unsigned int ValoresADanteriores2[4] = {0,0,0,0};
  4303                           ;main.c: 149: static unsigned int ValoresADanteriores3[4] = {0,0,0,0};
  4304  000D06  B4A0               	btfsc	4000,2,c	;volatile
  4305  000D08  A4A1               	btfss	4001,2,c	;volatile
  4306  000D0A  D007               	goto	i2l2969
  4307                           
  4308                           ;main.c: 155: {
  4309                           ;main.c: 156: PIE2bits.HLVDIE = 0;
  4310  000D0C  94A0               	bcf	4000,2,c	;volatile
  4311                           
  4312                           ;main.c: 157: PIR2bits.HLVDIF = 0;
  4313  000D0E  94A1               	bcf	4001,2,c	;volatile
  4314                           
  4315                           ;main.c: 158: POWER_FAULT = 1;
  4316  000D10  8844               	bsf	_POWER_FAULT/(0+8),_POWER_FAULT& (0+7),c
  4317                           
  4318                           ;main.c: 159: EstadoMain = POWERFAIL;
  4319  000D12  0E01               	movlw	1
  4320  000D14  0100               	movlb	0	; () banked
  4321  000D16  6FBD               	movwf	_EstadoMain& (0+255),b
  4322  000D18  D000               	goto	i2l2969
  4323  000D1A                     i2l2969:
  4324                           
  4325                           ;main.c: 160: }
  4326                           ;main.c: 165: if(INTCONbits.T0IE && INTCONbits.T0IF){
  4327  000D1A  BAF2               	btfsc	intcon,5,c	;volatile
  4328  000D1C  A4F2               	btfss	intcon,2,c	;volatile
  4329  000D1E  D152               	goto	i2l3097
  4330                           
  4331                           ;main.c: 166: TMR0L = 60;
  4332  000D20  0E3C               	movlw	60
  4333  000D22  6ED6               	movwf	4054,c	;volatile
  4334                           
  4335                           ;main.c: 167: INTCONbits.T0IF = 0;
  4336  000D24  94F2               	bcf	intcon,2,c	;volatile
  4337                           
  4338                           ;main.c: 168: IN0 = PORTAbits.RA4;
  4339  000D26  9044               	bcf	_IN0/(0+8),_IN0& (0+7),c
  4340  000D28  B880               	btfsc	3968,4,c	;volatile
  4341  000D2A  8044               	bsf	_IN0/(0+8),_IN0& (0+7),c
  4342                           
  4343                           ;main.c: 169: IN1 = PORTCbits.RC2;
  4344  000D2C  9244               	bcf	_IN1/(0+8),_IN1& (0+7),c
  4345  000D2E  B482               	btfsc	3970,2,c	;volatile
  4346  000D30  8244               	bsf	_IN1/(0+8),_IN1& (0+7),c
  4347                           
  4348                           ;main.c: 170: TRISD = 0xFF;
  4349  000D32  6895               	setf	3989,c	;volatile
  4350                           
  4351                           ;main.c: 171: PORTE = 1;
  4352  000D34  0E01               	movlw	1
  4353  000D36  6E84               	movwf	3972,c	;volatile
  4354                           
  4355                           ;main.c: 172: __nop();
  4356  000D38  F000               	nop	
  4357                           
  4358                           ;main.c: 173: __nop();
  4359  000D3A  F000               	nop	
  4360                           
  4361                           ;main.c: 174: __nop();
  4362  000D3C  F000               	nop	
  4363                           
  4364                           ;main.c: 175: Inputs2to9 = PORTD;
  4365  000D3E  CF83 F0C0          	movff	3971,_Inputs2to9	;volatile
  4366                           
  4367                           ;main.c: 176: PORTE = 3;
  4368  000D42  0E03               	movlw	3
  4369  000D44  6E84               	movwf	3972,c	;volatile
  4370                           
  4371                           ;main.c: 177: __nop();
  4372  000D46  F000               	nop	
  4373                           
  4374                           ;main.c: 178: __nop();
  4375  000D48  F000               	nop	
  4376                           
  4377                           ;main.c: 179: __nop();
  4378  000D4A  F000               	nop	
  4379                           
  4380                           ;main.c: 180: Inputs18to25 = PORTD;
  4381  000D4C  CF83 F0BF          	movff	3971,_Inputs18to25	;volatile
  4382                           
  4383                           ;main.c: 181: PORTE = 4;
  4384  000D50  0E04               	movlw	4
  4385  000D52  6E84               	movwf	3972,c	;volatile
  4386                           
  4387                           ;main.c: 182: __nop();
  4388  000D54  F000               	nop	
  4389                           
  4390                           ;main.c: 183: __nop();
  4391  000D56  F000               	nop	
  4392                           
  4393                           ;main.c: 184: __nop();
  4394  000D58  F000               	nop	
  4395                           
  4396                           ;main.c: 185: Inputs10to17 = PORTD;
  4397  000D5A  CF83 F0BE          	movff	3971,_Inputs10to17	;volatile
  4398                           
  4399                           ;main.c: 186: PORTE = 2;
  4400  000D5E  0E02               	movlw	2
  4401  000D60  6E84               	movwf	3972,c	;volatile
  4402                           
  4403                           ;main.c: 187: __nop();
  4404  000D62  F000               	nop	
  4405                           
  4406                           ;main.c: 188: TRISD = 0;
  4407  000D64  0E00               	movlw	0
  4408  000D66  6E95               	movwf	3989,c	;volatile
  4409                           
  4410                           ;main.c: 189: __nop();
  4411  000D68  F000               	nop	
  4412                           
  4413                           ;main.c: 190: __nop();
  4414  000D6A  F000               	nop	
  4415                           
  4416                           ;main.c: 191: __nop();
  4417  000D6C  F000               	nop	
  4418                           
  4419                           ;main.c: 192: PORTD = Outputs2to9;
  4420  000D6E  C028  FF83         	movff	_Outputs2to9,3971	;volatile
  4421                           
  4422                           ;main.c: 193: __nop();
  4423  000D72  F000               	nop	
  4424                           
  4425                           ;main.c: 194: PORTE = 5;
  4426  000D74  0E05               	movlw	5
  4427  000D76  6E84               	movwf	3972,c	;volatile
  4428                           
  4429                           ;main.c: 195: __nop();
  4430  000D78  F000               	nop	
  4431                           
  4432                           ;main.c: 196: __nop();
  4433  000D7A  F000               	nop	
  4434                           
  4435                           ;main.c: 197: __nop();
  4436  000D7C  F000               	nop	
  4437                           
  4438                           ;main.c: 198: PORTD = Outputs10to17;
  4439  000D7E  C027  FF83         	movff	_Outputs10to17,3971	;volatile
  4440                           
  4441                           ;main.c: 199: __nop();
  4442  000D82  F000               	nop	
  4443                           
  4444                           ;main.c: 200: PORTE = 0;
  4445  000D84  0E00               	movlw	0
  4446  000D86  6E84               	movwf	3972,c	;volatile
  4447                           
  4448                           ;main.c: 201: __nop();
  4449  000D88  F000               	nop	
  4450                           
  4451                           ;main.c: 202: TRISD = 0xFF;
  4452  000D8A  6895               	setf	3989,c	;volatile
  4453                           
  4454                           ;main.c: 203: PORTBbits.RB2 = OUT0;
  4455  000D8C  A444               	btfss	_OUT0/(0+8),_OUT0& (0+7),c
  4456  000D8E  D002               	bra	i2u276_45
  4457  000D90  8481               	bsf	3969,2,c	;volatile
  4458  000D92  D001               	bra	i2u276_47
  4459  000D94                     i2u276_45:
  4460  000D94  9481               	bcf	3969,2,c	;volatile
  4461  000D96                     i2u276_47:
  4462                           
  4463                           ;main.c: 204: PORTBbits.RB4 = OUT1;
  4464  000D96  A644               	btfss	_OUT1/(0+8),_OUT1& (0+7),c
  4465  000D98  D002               	bra	i2u277_45
  4466  000D9A  8881               	bsf	3969,4,c	;volatile
  4467  000D9C  D001               	bra	i2u277_47
  4468  000D9E                     i2u277_45:
  4469  000D9E  9881               	bcf	3969,4,c	;volatile
  4470  000DA0                     i2u277_47:
  4471                           
  4472                           ;main.c: 205: }
  4473                           ;main.c: 208: switch(EstadoAD){
  4474  000DA0  D111               	goto	i2l3097
  4475  000DA2                     i2l3037:
  4476                           
  4477                           ;main.c: 210: ADCON0 &= 0b11000011;
  4478  000DA2  0EC3               	movlw	195
  4479  000DA4  16C2               	andwf	4034,f,c	;volatile
  4480                           
  4481                           ;main.c: 211: if(CanalAD < 3)
  4482  000DA6  0E03               	movlw	3
  4483  000DA8  6023               	cpfslt	HighISR@CanalAD,c
  4484  000DAA  D004               	goto	i2l3041
  4485                           
  4486                           ;main.c: 212: ADCON0 |= CanalAD << 2;
  4487  000DAC  4423               	rlncf	HighISR@CanalAD,w,c
  4488  000DAE  46E8               	rlncf	wreg,f,c
  4489  000DB0  0BFC               	andlw	252
  4490  000DB2  D004               	goto	L4
  4491  000DB4                     i2l3041:
  4492                           
  4493                           ;main.c: 213: else
  4494                           ;main.c: 214: ADCON0 |= (CanalAD+1) << 2;
  4495  000DB4  4423               	rlncf	HighISR@CanalAD,w,c
  4496  000DB6  46E8               	rlncf	wreg,f,c
  4497  000DB8  0BFC               	andlw	252
  4498  000DBA  0F04               	addlw	4
  4499  000DBC                     L4:
  4500  000DBC  12C2               	iorwf	4034,f,c	;volatile
  4501  000DBE  D000               	goto	i2l3043
  4502  000DC0                     i2l3043:
  4503                           
  4504                           ;main.c: 215: EstadoAD = CONVERSAO;
  4505  000DC0  0E01               	movlw	1
  4506  000DC2  D0FE               	goto	L7
  4507  000DC4                     i2l172:
  4508                           
  4509                           ;main.c: 218: ADCON0bits.GO = 1;
  4510  000DC4  82C2               	bsf	4034,1,c	;volatile
  4511                           
  4512                           ;main.c: 219: EstadoAD = AGUARDACONVERSAO;
  4513  000DC6  0E02               	movlw	2
  4514  000DC8  D0FB               	goto	L7
  4515  000DCA                     i2l173:
  4516                           
  4517                           ;main.c: 222: if(!ADCON0bits.GO){
  4518  000DCA  B2C2               	btfsc	4034,1,c	;volatile
  4519  000DCC  D108               	goto	i2l171
  4520                           
  4521                           ;main.c: 223: Temp16 = ADRESH;
  4522  000DCE  CFC4 F041          	movff	4036,HighISR@Temp16	;volatile
  4523  000DD2  6A42               	clrf	HighISR@Temp16+1,c
  4524                           
  4525                           ;main.c: 224: Temp16 = Temp16 << 8;
  4526  000DD4  5041               	movf	HighISR@Temp16,w,c
  4527  000DD6  6E42               	movwf	HighISR@Temp16+1,c
  4528  000DD8  6A41               	clrf	HighISR@Temp16,c
  4529                           
  4530                           ;main.c: 225: Temp16 |= ADRESL;
  4531  000DDA  50C3               	movf	4035,w,c	;volatile
  4532  000DDC  1241               	iorwf	HighISR@Temp16,f,c
  4533                           
  4534                           ;main.c: 226: AccValoresAD[CanalAD] += Temp16;
  4535  000DDE  5023               	movf	HighISR@CanalAD,w,c
  4536  000DE0  0D02               	mullw	2
  4537  000DE2  0E01               	movlw	low HighISR@AccValoresAD
  4538  000DE4  24F3               	addwf	prodl,w,c
  4539  000DE6  6ED9               	movwf	fsr2l,c
  4540  000DE8  0E00               	movlw	high HighISR@AccValoresAD
  4541  000DEA  20F4               	addwfc	prodh,w,c
  4542  000DEC  6EDA               	movwf	fsr2h,c
  4543  000DEE  5041               	movf	HighISR@Temp16,w,c
  4544  000DF0  26DE               	addwf	postinc2,f,c
  4545  000DF2  5042               	movf	HighISR@Temp16+1,w,c
  4546  000DF4  22DD               	addwfc	postdec2,f,c
  4547                           
  4548                           ;main.c: 228: CanalAD++;
  4549  000DF6  2A23               	incf	HighISR@CanalAD,f,c
  4550                           
  4551                           ;main.c: 229: if(CanalAD > 3){
  4552  000DF8  0E03               	movlw	3
  4553  000DFA  6423               	cpfsgt	HighISR@CanalAD,c
  4554  000DFC  D004               	goto	i2l3063
  4555                           
  4556                           ;main.c: 230: CanalAD = 0;
  4557  000DFE  0E00               	movlw	0
  4558  000E00  6E23               	movwf	HighISR@CanalAD,c
  4559                           
  4560                           ;main.c: 231: ContMedia++;
  4561  000E02  2A24               	incf	HighISR@ContMedia,f,c
  4562  000E04  D000               	goto	i2l3063
  4563  000E06                     i2l3063:
  4564                           
  4565                           ;main.c: 232: }
  4566                           ;main.c: 233: EstadoAD = SETACANAL;
  4567  000E06  0E00               	movlw	0
  4568  000E08  6E25               	movwf	HighISR@EstadoAD,c
  4569                           
  4570                           ;main.c: 234: if(ContMedia == 25)
  4571  000E0A  0E19               	movlw	25
  4572  000E0C  1824               	xorwf	HighISR@ContMedia,w,c
  4573  000E0E  A4D8               	btfss	status,2,c
  4574  000E10  D0E6               	goto	i2l171
  4575                           
  4576                           ;main.c: 235: EstadoAD = CALCULAMEDIA;
  4577  000E12  0E03               	movlw	3
  4578  000E14  D0D5               	goto	L7
  4579                           
  4580                           ;main.c: 236: }
  4581                           ;main.c: 237: break;
  4582  000E16  D0E3               	goto	i2l171
  4583  000E18                     i2l3069:
  4584                           
  4585                           ;main.c: 239: for(Temp8=0;Temp8<4;Temp8++){
  4586  000E18  0E00               	movlw	0
  4587  000E1A  6E43               	movwf	HighISR@Temp8,c
  4588  000E1C                     i2l3071:
  4589  000E1C  0E03               	movlw	3
  4590  000E1E  6443               	cpfsgt	HighISR@Temp8,c
  4591  000E20  D001               	goto	i2l3075
  4592  000E22  D0CB               	goto	i2l3093
  4593  000E24                     i2l3075:
  4594                           
  4595                           ;main.c: 240: ValoresAD[Temp8] = AccValoresAD[Temp8] / 25;
  4596  000E24  5043               	movf	HighISR@Temp8,w,c
  4597  000E26  0D02               	mullw	2
  4598  000E28  0E01               	movlw	low HighISR@AccValoresAD
  4599  000E2A  24F3               	addwf	prodl,w,c
  4600  000E2C  6ED9               	movwf	fsr2l,c
  4601  000E2E  0E00               	movlw	high HighISR@AccValoresAD
  4602  000E30  20F4               	addwfc	prodh,w,c
  4603  000E32  6EDA               	movwf	fsr2h,c
  4604  000E34  CFDE F03A          	movff	postinc2,___lwdiv@dividend
  4605  000E38  CFDD F03B          	movff	postdec2,___lwdiv@dividend+1
  4606  000E3C  0E00               	movlw	0
  4607  000E3E  6E3D               	movwf	___lwdiv@divisor+1,c
  4608  000E40  0E19               	movlw	25
  4609  000E42  6E3C               	movwf	___lwdiv@divisor,c
  4610  000E44  EC9D  F009         	call	___lwdiv	;wreg free
  4611  000E48  5043               	movf	HighISR@Temp8,w,c
  4612  000E4A  0D02               	mullw	2
  4613  000E4C  0E19               	movlw	low _ValoresAD
  4614  000E4E  24F3               	addwf	prodl,w,c
  4615  000E50  6ED9               	movwf	fsr2l,c
  4616  000E52  0E00               	movlw	high _ValoresAD
  4617  000E54  20F4               	addwfc	prodh,w,c
  4618  000E56  6EDA               	movwf	fsr2h,c
  4619  000E58  C03A  FFDE         	movff	?___lwdiv,postinc2
  4620  000E5C  C03B  FFDD         	movff	?___lwdiv+1,postdec2
  4621                           
  4622                           ;main.c: 241: if(Temp8<3){
  4623  000E60  0E03               	movlw	3
  4624  000E62  6043               	cpfslt	HighISR@Temp8,c
  4625  000E64  D09C               	goto	i2l3087
  4626                           
  4627                           ;main.c: 242: ValoresAD[Temp8] += ValoresADanteriores1[Temp8];
  4628  000E66  5043               	movf	HighISR@Temp8,w,c
  4629  000E68  0D02               	mullw	2
  4630  000E6A  0E09               	movlw	low HighISR@ValoresADanteriores1
  4631  000E6C  24F3               	addwf	prodl,w,c
  4632  000E6E  6ED9               	movwf	fsr2l,c
  4633  000E70  0E00               	movlw	high HighISR@ValoresADanteriores1
  4634  000E72  20F4               	addwfc	prodh,w,c
  4635  000E74  6EDA               	movwf	fsr2h,c
  4636  000E76  CFDE F0E0          	movff	postinc2,??_HighISR
  4637  000E7A  CFDD F0E1          	movff	postdec2,??_HighISR+1
  4638  000E7E  5043               	movf	HighISR@Temp8,w,c
  4639  000E80  0D02               	mullw	2
  4640  000E82  0E19               	movlw	low _ValoresAD
  4641  000E84  24F3               	addwf	prodl,w,c
  4642  000E86  6ED9               	movwf	fsr2l,c
  4643  000E88  0E00               	movlw	high _ValoresAD
  4644  000E8A  20F4               	addwfc	prodh,w,c
  4645  000E8C  6EDA               	movwf	fsr2h,c
  4646  000E8E  0100               	movlb	0	; () banked
  4647  000E90  51E0               	movf	??_HighISR& (0+255),w,b
  4648  000E92  26DE               	addwf	postinc2,f,c
  4649  000E94  51E1               	movf	(??_HighISR+1)& (0+255),w,b
  4650  000E96  22DD               	addwfc	postdec2,f,c
  4651                           
  4652                           ;main.c: 243: ValoresAD[Temp8] += ValoresADanteriores2[Temp8];
  4653  000E98  5043               	movf	HighISR@Temp8,w,c
  4654  000E9A  0D02               	mullw	2
  4655  000E9C  0E11               	movlw	low HighISR@ValoresADanteriores2
  4656  000E9E  24F3               	addwf	prodl,w,c
  4657  000EA0  6ED9               	movwf	fsr2l,c
  4658  000EA2  0E00               	movlw	high HighISR@ValoresADanteriores2
  4659  000EA4  20F4               	addwfc	prodh,w,c
  4660  000EA6  6EDA               	movwf	fsr2h,c
  4661  000EA8  CFDE F0E0          	movff	postinc2,??_HighISR
  4662  000EAC  CFDD F0E1          	movff	postdec2,??_HighISR+1
  4663  000EB0  5043               	movf	HighISR@Temp8,w,c
  4664  000EB2  0D02               	mullw	2
  4665  000EB4  0E19               	movlw	low _ValoresAD
  4666  000EB6  24F3               	addwf	prodl,w,c
  4667  000EB8  6ED9               	movwf	fsr2l,c
  4668  000EBA  0E00               	movlw	high _ValoresAD
  4669  000EBC  20F4               	addwfc	prodh,w,c
  4670  000EBE  6EDA               	movwf	fsr2h,c
  4671  000EC0  0100               	movlb	0	; () banked
  4672  000EC2  51E0               	movf	??_HighISR& (0+255),w,b
  4673  000EC4  26DE               	addwf	postinc2,f,c
  4674  000EC6  51E1               	movf	(??_HighISR+1)& (0+255),w,b
  4675  000EC8  22DD               	addwfc	postdec2,f,c
  4676                           
  4677                           ;main.c: 244: ValoresAD[Temp8] += ValoresADanteriores3[Temp8];
  4678  000ECA  5043               	movf	HighISR@Temp8,w,c
  4679  000ECC  0D02               	mullw	2
  4680  000ECE  0EB0               	movlw	low HighISR@ValoresADanteriores3
  4681  000ED0  24F3               	addwf	prodl,w,c
  4682  000ED2  6ED9               	movwf	fsr2l,c
  4683  000ED4  0E00               	movlw	high HighISR@ValoresADanteriores3
  4684  000ED6  20F4               	addwfc	prodh,w,c
  4685  000ED8  6EDA               	movwf	fsr2h,c
  4686  000EDA  CFDE F0E0          	movff	postinc2,??_HighISR
  4687  000EDE  CFDD F0E1          	movff	postdec2,??_HighISR+1
  4688  000EE2  5043               	movf	HighISR@Temp8,w,c
  4689  000EE4  0D02               	mullw	2
  4690  000EE6  0E19               	movlw	low _ValoresAD
  4691  000EE8  24F3               	addwf	prodl,w,c
  4692  000EEA  6ED9               	movwf	fsr2l,c
  4693  000EEC  0E00               	movlw	high _ValoresAD
  4694  000EEE  20F4               	addwfc	prodh,w,c
  4695  000EF0  6EDA               	movwf	fsr2h,c
  4696  000EF2  0100               	movlb	0	; () banked
  4697  000EF4  51E0               	movf	??_HighISR& (0+255),w,b
  4698  000EF6  26DE               	addwf	postinc2,f,c
  4699  000EF8  51E1               	movf	(??_HighISR+1)& (0+255),w,b
  4700  000EFA  22DD               	addwfc	postdec2,f,c
  4701                           
  4702                           ;main.c: 245: ValoresAD[Temp8] /= 4;
  4703  000EFC  0E02               	movlw	2
  4704  000EFE  0100               	movlb	0	; () banked
  4705  000F00  6FE0               	movwf	??_HighISR& (0+255),b
  4706  000F02  5043               	movf	HighISR@Temp8,w,c
  4707  000F04  0D02               	mullw	2
  4708  000F06  0E19               	movlw	low _ValoresAD
  4709  000F08  24F3               	addwf	prodl,w,c
  4710  000F0A  6ED9               	movwf	fsr2l,c
  4711  000F0C  0E00               	movlw	high _ValoresAD
  4712  000F0E  20F4               	addwfc	prodh,w,c
  4713  000F10  6EDA               	movwf	fsr2h,c
  4714  000F12  0100               	movlb	0	; () banked
  4715  000F14  29E0               	incf	??_HighISR& (0+255),w,b
  4716  000F16  D004               	goto	i2u284_40
  4717  000F18                     i2u284_45:
  4718  000F18  2AD9               	incf	fsr2l,f,c
  4719  000F1A  90D8               	bcf	status,0,c
  4720  000F1C  32DD               	rrcf	postdec2,f,c
  4721  000F1E  32DF               	rrcf	indf2,f,c
  4722  000F20                     i2u284_40:
  4723  000F20  2EE8               	decfsz	wreg,f,c
  4724  000F22  D7FA               	goto	i2u284_45
  4725                           
  4726                           ; BSR set to: 0
  4727                           ;main.c: 246: ValoresADanteriores3[Temp8] = ValoresADanteriores2[Temp8];
  4728  000F24  5043               	movf	HighISR@Temp8,w,c
  4729  000F26  0D02               	mullw	2
  4730  000F28  0E11               	movlw	low HighISR@ValoresADanteriores2
  4731  000F2A  24F3               	addwf	prodl,w,c
  4732  000F2C  6ED9               	movwf	fsr2l,c
  4733  000F2E  0E00               	movlw	high HighISR@ValoresADanteriores2
  4734  000F30  20F4               	addwfc	prodh,w,c
  4735  000F32  6EDA               	movwf	fsr2h,c
  4736  000F34  5043               	movf	HighISR@Temp8,w,c
  4737  000F36  0D02               	mullw	2
  4738  000F38  0EB0               	movlw	low HighISR@ValoresADanteriores3
  4739  000F3A  24F3               	addwf	prodl,w,c
  4740  000F3C  6EE1               	movwf	fsr1l,c
  4741  000F3E  0E00               	movlw	high HighISR@ValoresADanteriores3
  4742  000F40  20F4               	addwfc	prodh,w,c
  4743  000F42  6EE2               	movwf	fsr1h,c
  4744  000F44  CFDE FFE6          	movff	postinc2,postinc1
  4745  000F48  CFDD FFE5          	movff	postdec2,postdec1
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;main.c: 247: ValoresADanteriores2[Temp8] = ValoresADanteriores1[Temp8];
  4749  000F4C  5043               	movf	HighISR@Temp8,w,c
  4750  000F4E  0D02               	mullw	2
  4751  000F50  0E09               	movlw	low HighISR@ValoresADanteriores1
  4752  000F52  24F3               	addwf	prodl,w,c
  4753  000F54  6ED9               	movwf	fsr2l,c
  4754  000F56  0E00               	movlw	high HighISR@ValoresADanteriores1
  4755  000F58  20F4               	addwfc	prodh,w,c
  4756  000F5A  6EDA               	movwf	fsr2h,c
  4757  000F5C  5043               	movf	HighISR@Temp8,w,c
  4758  000F5E  0D02               	mullw	2
  4759  000F60  0E11               	movlw	low HighISR@ValoresADanteriores2
  4760  000F62  24F3               	addwf	prodl,w,c
  4761  000F64  6EE1               	movwf	fsr1l,c
  4762  000F66  0E00               	movlw	high HighISR@ValoresADanteriores2
  4763  000F68  20F4               	addwfc	prodh,w,c
  4764  000F6A  6EE2               	movwf	fsr1h,c
  4765  000F6C  CFDE FFE6          	movff	postinc2,postinc1
  4766  000F70  CFDD FFE5          	movff	postdec2,postdec1
  4767                           
  4768                           ; BSR set to: 0
  4769                           ;main.c: 248: ValoresADanteriores1[Temp8] = ValoresAD[Temp8];
  4770  000F74  5043               	movf	HighISR@Temp8,w,c
  4771  000F76  0D02               	mullw	2
  4772  000F78  0E19               	movlw	low _ValoresAD
  4773  000F7A  24F3               	addwf	prodl,w,c
  4774  000F7C  6ED9               	movwf	fsr2l,c
  4775  000F7E  0E00               	movlw	high _ValoresAD
  4776  000F80  20F4               	addwfc	prodh,w,c
  4777  000F82  6EDA               	movwf	fsr2h,c
  4778  000F84  5043               	movf	HighISR@Temp8,w,c
  4779  000F86  0D02               	mullw	2
  4780  000F88  0E09               	movlw	low HighISR@ValoresADanteriores1
  4781  000F8A  24F3               	addwf	prodl,w,c
  4782  000F8C  6EE1               	movwf	fsr1l,c
  4783  000F8E  0E00               	movlw	high HighISR@ValoresADanteriores1
  4784  000F90  20F4               	addwfc	prodh,w,c
  4785  000F92  6EE2               	movwf	fsr1h,c
  4786  000F94  CFDE FFE6          	movff	postinc2,postinc1
  4787  000F98  CFDD FFE5          	movff	postdec2,postdec1
  4788  000F9C  D000               	goto	i2l3087
  4789  000F9E                     i2l3087:
  4790                           
  4791                           ;main.c: 249: }
  4792                           ;main.c: 250: AccValoresAD[Temp8] = 0;
  4793  000F9E  5043               	movf	HighISR@Temp8,w,c
  4794  000FA0  0D02               	mullw	2
  4795  000FA2  0E01               	movlw	low HighISR@AccValoresAD
  4796  000FA4  24F3               	addwf	prodl,w,c
  4797  000FA6  6ED9               	movwf	fsr2l,c
  4798  000FA8  0E00               	movlw	high HighISR@AccValoresAD
  4799  000FAA  20F4               	addwfc	prodh,w,c
  4800  000FAC  6EDA               	movwf	fsr2h,c
  4801  000FAE  0E00               	movlw	0
  4802  000FB0  6EDE               	movwf	postinc2,c
  4803  000FB2  0E00               	movlw	0
  4804  000FB4  6EDD               	movwf	postdec2,c
  4805  000FB6  2A43               	incf	HighISR@Temp8,f,c
  4806  000FB8  D731               	goto	i2l3071
  4807  000FBA                     i2l3093:
  4808                           
  4809                           ;main.c: 251: }
  4810                           ;main.c: 252: ContMedia = 0;
  4811  000FBA  0E00               	movlw	0
  4812  000FBC  6E24               	movwf	HighISR@ContMedia,c
  4813                           
  4814                           ;main.c: 253: EstadoAD = SETACANAL;
  4815  000FBE  0E00               	movlw	0
  4816  000FC0                     L7:
  4817  000FC0  6E25               	movwf	HighISR@EstadoAD,c
  4818                           
  4819                           ;main.c: 255: }
  4820                           
  4821                           ;main.c: 254: break;
  4822  000FC2  D00D               	goto	i2l171
  4823  000FC4                     i2l3097:
  4824  000FC4  5025               	movf	HighISR@EstadoAD,w,c
  4825                           
  4826                           ; Switch size 1, requested type "space"
  4827                           ; Number of cases is 4, Range of values is 0 to 3
  4828                           ; switch strategies available:
  4829                           ; Name         Instructions Cycles
  4830                           ; simple_byte           13     7 (average)
  4831                           ;	Chosen strategy is simple_byte
  4832  000FC6  0A00               	xorlw	0	; case 0
  4833  000FC8  B4D8               	btfsc	status,2,c
  4834  000FCA  D6EB               	goto	i2l3037
  4835  000FCC  0A01               	xorlw	1	; case 1
  4836  000FCE  B4D8               	btfsc	status,2,c
  4837  000FD0  D6F9               	goto	i2l172
  4838  000FD2  0A03               	xorlw	3	; case 2
  4839  000FD4  B4D8               	btfsc	status,2,c
  4840  000FD6  D6F9               	goto	i2l173
  4841  000FD8  0A01               	xorlw	1	; case 3
  4842  000FDA  B4D8               	btfsc	status,2,c
  4843  000FDC  D71D               	goto	i2l3069
  4844  000FDE                     i2l171:
  4845                           
  4846                           ;main.c: 256: if(POWER_FAULT)
  4847  000FDE  A844               	btfss	_POWER_FAULT/(0+8),_POWER_FAULT& (0+7),c
  4848  000FE0  D00A               	goto	i2l182
  4849                           
  4850                           ;main.c: 257: _delay((unsigned long)((1)*(20000000/4000.0)));
  4851  000FE2  0E07               	movlw	7
  4852  000FE4  0100               	movlb	0	; () banked
  4853  000FE6  6FE0               	movwf	??_HighISR& (0+255),b
  4854  000FE8  0E7D               	movlw	125
  4855  000FEA                     i2u351_47:
  4856  000FEA  2EE8               	decfsz	wreg,f,c
  4857  000FEC  D7FE               	goto	i2u351_47
  4858  000FEE  2FE0               	decfsz	??_HighISR& (0+255),f,b
  4859  000FF0  D7FC               	goto	i2u351_47
  4860  000FF2  F000               	nop	
  4861  000FF4  D000               	goto	i2l182
  4862  000FF6                     i2l182:
  4863  000FF6  C0EF  FFF5         	movff	??_HighISR+15,tablat
  4864  000FFA  C0EE  FFF8         	movff	??_HighISR+14,tblptru
  4865  000FFE  C0ED  FFF7         	movff	??_HighISR+13,tblptrh
  4866  001002  C0EC  FFF6         	movff	??_HighISR+12,tblptrl
  4867  001006  C0EB  FFF4         	movff	??_HighISR+11,prodh
  4868  00100A  C0EA  FFF3         	movff	??_HighISR+10,prodl
  4869  00100E  C0E9  FFDA         	movff	??_HighISR+9,fsr2h
  4870  001012  C0E8  FFD9         	movff	??_HighISR+8,fsr2l
  4871  001016  C0E7  FFE2         	movff	??_HighISR+7,fsr1h
  4872  00101A  C0E6  FFE1         	movff	??_HighISR+6,fsr1l
  4873  00101E  C0E5  FFEA         	movff	??_HighISR+5,fsr0h
  4874  001022  C0E4  FFE9         	movff	??_HighISR+4,fsr0l
  4875  001026  C0E3  FFFB         	movff	??_HighISR+3,pclatu
  4876  00102A  C0E2  FFFA         	movff	??_HighISR+2,pclath
  4877  00102E  0011               	retfie		f
  4878  001030                     __end_of_HighISR:
  4879                           	opt stack 0
  4880                           pclatu	equ	0xFFB
  4881                           pclath	equ	0xFFA
  4882                           tblptru	equ	0xFF8
  4883                           tblptrh	equ	0xFF7
  4884                           tblptrl	equ	0xFF6
  4885                           tablat	equ	0xFF5
  4886                           prodh	equ	0xFF4
  4887                           prodl	equ	0xFF3
  4888                           intcon	equ	0xFF2
  4889                           intcon2	equ	0xFF1
  4890                           postinc0	equ	0xFEE
  4891                           fsr0h	equ	0xFEA
  4892                           fsr0l	equ	0xFE9
  4893                           wreg	equ	0xFE8
  4894                           postinc1	equ	0xFE6
  4895                           postdec1	equ	0xFE5
  4896                           fsr1h	equ	0xFE2
  4897                           fsr1l	equ	0xFE1
  4898                           bsr	equ	0xFE0
  4899                           indf2	equ	0xFDF
  4900                           postinc2	equ	0xFDE
  4901                           postdec2	equ	0xFDD
  4902                           fsr2h	equ	0xFDA
  4903                           fsr2l	equ	0xFD9
  4904                           status	equ	0xFD8
  4905                           
  4906 ;; *************** function ___lwdiv *****************
  4907 ;; Defined at:
  4908 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  4909 ;; Parameters:    Size  Location     Type
  4910 ;;  dividend        2   17[COMRAM] unsigned int 
  4911 ;;  divisor         2   19[COMRAM] unsigned int 
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;  quotient        2   21[COMRAM] unsigned int 
  4914 ;;  counter         1   23[COMRAM] unsigned char 
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  2   17[COMRAM] unsigned int 
  4917 ;; Registers used:
  4918 ;;		wreg, status,2, status,0
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4924 ;;      Params:         4       0       0       0       0       0       0       0       0
  4925 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4926 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4927 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4928 ;;Total ram usage:        7 bytes
  4929 ;; Hardware stack levels used:    1
  4930 ;; This function calls:
  4931 ;;		Nothing
  4932 ;; This function is called by:
  4933 ;;		_HighISR
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936                           
  4937                           	psect	text10
  4938  00133A                     __ptext10:
  4939                           	opt stack 0
  4940  00133A                     ___lwdiv:
  4941                           	opt stack 26
  4942                           
  4943                           ;incstack = 0
  4944  00133A  0E00               	movlw	0
  4945  00133C  6E3F               	movwf	___lwdiv@quotient+1,c
  4946  00133E  0E00               	movlw	0
  4947  001340  6E3E               	movwf	___lwdiv@quotient,c
  4948  001342  503C               	movf	___lwdiv@divisor,w,c
  4949  001344  103D               	iorwf	___lwdiv@divisor+1,w,c
  4950  001346  B4D8               	btfsc	status,2,c
  4951  001348  D021               	goto	i2l912
  4952  00134A  0E01               	movlw	1
  4953  00134C  6E40               	movwf	___lwdiv@counter,c
  4954  00134E  D005               	goto	i2l2007
  4955  001350                     i2l2005:
  4956  001350  90D8               	bcf	status,0,c
  4957  001352  363C               	rlcf	___lwdiv@divisor,f,c
  4958  001354  363D               	rlcf	___lwdiv@divisor+1,f,c
  4959  001356  2A40               	incf	___lwdiv@counter,f,c
  4960  001358  D000               	goto	i2l2007
  4961  00135A                     i2l2007:
  4962  00135A  BE3D               	btfsc	___lwdiv@divisor+1,7,c
  4963  00135C  D002               	goto	i2l2009
  4964  00135E  D7F8               	goto	i2l2005
  4965  001360  D000               	goto	i2l2009
  4966  001362                     i2l2009:
  4967  001362  90D8               	bcf	status,0,c
  4968  001364  363E               	rlcf	___lwdiv@quotient,f,c
  4969  001366  363F               	rlcf	___lwdiv@quotient+1,f,c
  4970  001368  503C               	movf	___lwdiv@divisor,w,c
  4971  00136A  5C3A               	subwf	___lwdiv@dividend,w,c
  4972  00136C  503D               	movf	___lwdiv@divisor+1,w,c
  4973  00136E  583B               	subwfb	___lwdiv@dividend+1,w,c
  4974  001370  A0D8               	btfss	status,0,c
  4975  001372  D006               	goto	i2l2017
  4976  001374  503C               	movf	___lwdiv@divisor,w,c
  4977  001376  5E3A               	subwf	___lwdiv@dividend,f,c
  4978  001378  503D               	movf	___lwdiv@divisor+1,w,c
  4979  00137A  5A3B               	subwfb	___lwdiv@dividend+1,f,c
  4980  00137C  803E               	bsf	___lwdiv@quotient,0,c
  4981  00137E  D000               	goto	i2l2017
  4982  001380                     i2l2017:
  4983  001380  90D8               	bcf	status,0,c
  4984  001382  323D               	rrcf	___lwdiv@divisor+1,f,c
  4985  001384  323C               	rrcf	___lwdiv@divisor,f,c
  4986  001386  2E40               	decfsz	___lwdiv@counter,f,c
  4987  001388  D7EC               	goto	i2l2009
  4988  00138A  D000               	goto	i2l912
  4989  00138C                     i2l912:
  4990  00138C  C03E  F03A         	movff	___lwdiv@quotient,?___lwdiv
  4991  001390  C03F  F03B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4992  001394  0012               	return		;funcret
  4993  001396                     __end_of___lwdiv:
  4994                           	opt stack 0
  4995  0000                     pclatu	equ	0xFFB
  4996                           pclath	equ	0xFFA
  4997                           tblptru	equ	0xFF8
  4998                           tblptrh	equ	0xFF7
  4999                           tblptrl	equ	0xFF6
  5000                           tablat	equ	0xFF5
  5001                           prodh	equ	0xFF4
  5002                           prodl	equ	0xFF3
  5003                           intcon	equ	0xFF2
  5004                           intcon2	equ	0xFF1
  5005                           postinc0	equ	0xFEE
  5006                           fsr0h	equ	0xFEA
  5007                           fsr0l	equ	0xFE9
  5008                           wreg	equ	0xFE8
  5009                           postinc1	equ	0xFE6
  5010                           postdec1	equ	0xFE5
  5011                           fsr1h	equ	0xFE2
  5012                           fsr1l	equ	0xFE1
  5013                           bsr	equ	0xFE0
  5014                           indf2	equ	0xFDF
  5015                           postinc2	equ	0xFDE
  5016                           postdec2	equ	0xFDD
  5017                           fsr2h	equ	0xFDA
  5018                           fsr2l	equ	0xFD9
  5019                           status	equ	0xFD8
  5020                           pclatu	equ	0xFFB
  5021                           pclath	equ	0xFFA
  5022                           tblptru	equ	0xFF8
  5023                           tblptrh	equ	0xFF7
  5024                           tblptrl	equ	0xFF6
  5025                           tablat	equ	0xFF5
  5026                           prodh	equ	0xFF4
  5027                           prodl	equ	0xFF3
  5028                           intcon	equ	0xFF2
  5029                           intcon2	equ	0xFF1
  5030                           postinc0	equ	0xFEE
  5031                           fsr0h	equ	0xFEA
  5032                           fsr0l	equ	0xFE9
  5033                           wreg	equ	0xFE8
  5034                           postinc1	equ	0xFE6
  5035                           postdec1	equ	0xFE5
  5036                           fsr1h	equ	0xFE2
  5037                           fsr1l	equ	0xFE1
  5038                           bsr	equ	0xFE0
  5039                           indf2	equ	0xFDF
  5040                           postinc2	equ	0xFDE
  5041                           postdec2	equ	0xFDD
  5042                           fsr2h	equ	0xFDA
  5043                           fsr2l	equ	0xFD9
  5044                           status	equ	0xFD8
  5045                           
  5046                           	psect	rparam
  5047  0000                     pclatu	equ	0xFFB
  5048                           pclath	equ	0xFFA
  5049                           tblptru	equ	0xFF8
  5050                           tblptrh	equ	0xFF7
  5051                           tblptrl	equ	0xFF6
  5052                           tablat	equ	0xFF5
  5053                           prodh	equ	0xFF4
  5054                           prodl	equ	0xFF3
  5055                           intcon	equ	0xFF2
  5056                           intcon2	equ	0xFF1
  5057                           postinc0	equ	0xFEE
  5058                           fsr0h	equ	0xFEA
  5059                           fsr0l	equ	0xFE9
  5060                           wreg	equ	0xFE8
  5061                           postinc1	equ	0xFE6
  5062                           postdec1	equ	0xFE5
  5063                           fsr1h	equ	0xFE2
  5064                           fsr1l	equ	0xFE1
  5065                           bsr	equ	0xFE0
  5066                           indf2	equ	0xFDF
  5067                           postinc2	equ	0xFDE
  5068                           postdec2	equ	0xFDD
  5069                           fsr2h	equ	0xFDA
  5070                           fsr2l	equ	0xFD9
  5071                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        28
    BSS         140
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     27      68
    BANK0           160     16     144
    BANK1           256     18      18
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    _HighISR->___lwdiv

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_EscreverDWINram
    _main->_LerDWINram
    _main->_LerDWINreg
    _LerDWINreg->_DelayDWIN
    _LerDWINram->_DelayDWIN
    _EscreverDWINreg->_DelayDWIN
    _EscreverDWINram->_DelayDWIN

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    9716
                                              7 BANK1     11    11      0
                         _CiclarOUT1
                          _DelayDWIN
                    _EscreverDWINram
                    _EscreverDWINreg
                      _Inicializacao
                         _LerDWINram
                         _LerDWINreg
 ---------------------------------------------------------------------------------
 (1) _LerDWINreg                                           5     3      2     334
                                              2 BANK1      5     3      2
                          _DelayDWIN
 ---------------------------------------------------------------------------------
 (1) _LerDWINram                                           5     3      2     743
                                              2 BANK1      5     3      2
                          _DelayDWIN
 ---------------------------------------------------------------------------------
 (1) _Inicializacao                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EscreverDWINreg                                      4     2      2     314
                                              2 BANK1      4     2      2
                          _DelayDWIN
 ---------------------------------------------------------------------------------
 (1) _EscreverDWINram                                      5     1      4    7635
                                              2 BANK1      5     1      4
                          _DelayDWIN
 ---------------------------------------------------------------------------------
 (2) _DelayDWIN                                            2     2      0      68
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _CiclarOUT1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _LowISR                                              17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _HighISR                                             19    19      0     914
                                             24 COMRAM     3     3      0
                                              0 BANK0     16    16      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     248
                                             17 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CiclarOUT1
   _DelayDWIN
   _EscreverDWINram
     _DelayDWIN
   _EscreverDWINreg
     _DelayDWIN
   _Inicializacao
   _LerDWINram
     _DelayDWIN
   _LerDWINreg
     _DelayDWIN

 _LowISR (ROOT)

 _HighISR (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     12      12       7        7.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     10      90       5       90.0%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     1B      44       1       71.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E6      20        0.0%
DATA                 0      0      E6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Aug 14 18:09:42 2019

              DelayDWIN@cont 0101                  _DiaDaSemana 00BC                           bsr 000FE0  
              _Outputs10to17 0027                  __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000  
               __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000  
                        l205 12B8                          l206 12B0                          l214 1328  
                        l230 10AC                          l222 1098                          l302 0A08  
                        l215 1320                          l223 1086                          l208 12BC  
                        l232 10B8                          l224 107E                          l217 132C  
                        l233 10FA                          l241 1152                          l321 0A42  
                        l226 108A                          l330 0A62                          l323 0A46  
                        l148 1402                          l244 117C                          l324 0A4A  
                        l229 10B4                          l245 1174                          l237 1160  
                        l333 0A6E                          l238 114E                          l342 0A92  
                        l247 1180                          l239 1146                          l327 0A56  
                        l248 11BA                          l352 0B4C                          l336 0A7A  
                        l345 0A9E                          l362 0B70                          l371 0B94  
                        l339 0A86                          l259 040C                          l356 0B58  
                        l197 1246                          l381 0C32                          l365 0B7C  
                        l382 0C38                          l374 0BA0                          l359 0B64  
                        l384 0C44                          l368 0B88                          l377 0BAC  
                        _IN0 0220                          _IN1 0221                 __CFG_CPB$OFF 000000  
                        _PR2 000FCB                 __CFG_CPD$OFF 000000                _Inicializacao 11BC  
               __CFG_BOR$OFF 000000                          fsr2 000FD9                          prod 000FF3  
                        wreg 000FE8                 __CFG_FOSC$HS 000000                 __CFG_LVP$OFF 000000  
                main@diminui 0109                 __CFG_WDT$OFF 000000                         l3111 017C  
                       l3201 04BE                         l3121 019E                         l3211 0518  
                       l3115 0190                         l3301 0872                         l3213 0532  
                       l3205 04DE                         l3141 01FA                         l3311 08CC  
                       l3231 05E0                         l3223 058C                         l3207 04F8  
                       l3401 0B6C                         l3313 08E6                         l3305 0892  
                       l3241 063A                         l3225 05A6                         l3217 0552  
                       l3331 0994                         l3323 0940                         l3307 08AC  
                       l3251 0698                         l3235 0600                         l3219 056C  
                       l3243 0654                         l3171 03A6                         l3421 0BA8  
                       l3413 0B90                         l3405 0B78                         l3341 09EE  
                       l3325 095A                         l3317 0906                         l3261 06F2  
                       l3237 061A                         l3229 05C6                         l3181 03F2  
                       l3157 0318                         l3149 02A6                  main@aumenta 010B  
                       l3335 09B4                         l3319 0920                         l3263 070C  
                       l3255 06B8                         l3417 0B9C                         l3409 0B84  
                       l3425 0BB0                         l3361 0A76                         l3353 0A5E  
                       l3337 09CE                         l3329 097A                         l3281 07BA  
                       l3273 0766                         l3257 06D2                         l3249 067E  
                       l3193 046A                         l3169 038C                         l3451 0C84  
                       l3443 0C68                         l3427 0C0C                         l3291 0814  
                       l3275 0780                         l3267 072C                         l3195 0484  
                       l3187 0432                         l3453 0C8C                         l3373 0A9A  
                       l3365 0A82                         l3357 0A6A                         l3349 0A52  
                       l3381 0AAA                         l3285 07DA                         l3269 0746  
                       l3293 082E                         l3189 044C                         l3439 0C54  
                       l3383 0B18                         l3287 07F4                         l3279 07A0  
                       l3199 04A4                         l3463 0CAE                         l2833 128E  
                       l2905 10D6                         l3449 0C76                         l3393 0B54  
                       l3377 0AA6                         l3369 0A8E                         l2763 13EA  
                       l3459 0CA8                         l3651 0BCA                         l3387 0B3E  
                       l3299 0858                         l2845 12C4                         l2837 1298  
                       l3653 0C00                         l3397 0B60                         l3645 0ACA  
                       l2759 13E0                         l2871 1334                         l2863 1308  
                       l2951 119E                         l2935 1158                         l3647 0B00  
                       l2929 112E                         l3649 0B0C                         l2859 12FE  
                       l2883 1066                         l2939 1168                         l2893 10A0  
                       l2889 1090                         u3507 13F2                         u2900 0260  
                 _CiclarOUT1 1420                         _OUT0 0222                         _OUT1 0223  
                       _main 0158                         fsr0h 000FEA                         fsr1h 000FE2  
                       fsr0l 000FE9                         fsr2h 000FDA                         fsr1l 000FE1  
                       indf2 000FDF                         fsr2l 000FD9                         pclat 000FFA  
                       prodh 000FF4                         prodl 000FF3                         start 0154  
              __CFG_IESO$OFF 000000              __end_of_HighISR 1030                __CFG_MCLRE$ON 000000  
               ___param_bank 000010                main@TelaAtual 0111             ?_EscreverDWINram 0102  
           ?_EscreverDWINreg 0102                __CFG_PLLDIV$1 000000                   _LerDWINram 1030  
                 _LerDWINreg 10FC                        ?_main 0029               ?_Inicializacao 0029  
                      _CMCON 000FB4                        _T0CON 000FD5                        _T2CON 000FCA  
            __end_of___lwdiv 1396                        i1l194 010E                        i2l171 0FDE  
                      i2l172 0DC4                        i2l173 0DCA                        i2l182 0FF6  
                      i2l912 138C                        _RCREG 000FAE                        _TMR1H 000FCF  
                      _TMR0L 000FD6                        _TMR1L 000FCE                        _SPBRG 000FAF  
                      _PORTA 000F80                        _PORTB 000F81                        _PORTC 000F82  
                      _PORTD 000F83                        _PORTE 000F84                __CFG_USBDIV$1 000000  
                      _TRISA 000F92                        _TRISB 000F93                        _TRISC 000F94  
                      _TRISD 000F95                        _TRISE 000F96                        _TXREG 000FAD  
              __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000  
              __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000               __CFG_EBTR0$OFF 000000  
             __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000              _StrDiasDaSemana 00C4  
             __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000  
                      _horas 00C1               __pbitbssCOMRAM 0220                        tablat 000FF5  
                      status 000FD8                   _EstadoMain 00BD              __initialization 1396  
               __end_of_main 0CD8           __size_of_DelayDWIN 002A               LerDWINram@cont 0106  
             LerDWINreg@cont 0106                       ??_main 0107                __activetblptr 000002  
                 _Inputs2to9 00C0              __CFG_CCP2MX$OFF 000000                       _ADCON0 000FC2  
                     _ADCON1 000FC1                       _ADCON2 000FC0                       _ADRESH 000FC4  
                     _ADRESL 000FC3                       _CCPR2L 000FBB                   _MinutosDia 0021  
                ?_CiclarOUT1 0029                       i1l2183 0098                       i1l2177 0084  
                     i1l2197 00CA                       i1l2199 00E2                       i2l2005 1350  
                     i2l2007 135A                       i2l2017 1380                       i2l2009 1362  
                     i2l3041 0DB4                       i2l3043 0DC0                       i2l3037 0DA2  
                     i2l3071 0E1C                       i2l3063 0E06                       i2l3075 0E24  
                     i2l3093 0FBA                       i2l3069 0E18                       i2l3087 0F9E  
                     i2l3097 0FC4                       i2l2969 0D1A                    ??_HighISR 00E0  
                     _SPBRGH 000FB0                       _LowISR 0018               __CFG_XINST$OFF 000000  
                  ??___lwdiv 003E              ??_Inicializacao 0044                       clear_0 139C  
                     clear_1 13AA                  ?_LerDWINram 0102                  ?_LerDWINreg 0102  
       EscreverDWINram@valor 0104                 LowISR@Indice 0026         EscreverDWINreg@valor 0102  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
          __end_of_DelayDWIN 1404                   __accesstop 0060      __end_of__initialization 13D0  
            __CFG_PBADEN$OFF 000000                ___rparam_used 000001               __pcstackCOMRAM 0029  
               __pidataBANK0 1404          __size_of_CiclarOUT1 000A             HighISR@ContMedia 0024  
       LerDWINram@VPrecebido 0104                   __pbssBANK0 0060          __size_of_LerDWINram 00CC  
        __size_of_LerDWINreg 00C0                      ?_LowISR 0029                      _CCP2CON 000FBA  
                    _HLVDCON 000FD2              __CFG_VREGEN$OFF 000000           LerDWINram@endereco 0102  
                    _HighISR 0008                      __Hparam 0000                      __Lparam 0000  
            __size_of_LowISR 013C           LerDWINreg@endereco 0104                      ___lwdiv 133A  
            __CFG_STVREN$OFF 000000                HighISR@Temp16 0041                      __pcinit 1396  
         LerDWINreg@recebido 0105                      __ramtop 0800                      __ptext0 0158  
                    __ptext1 10FC                      __ptext2 1030                      __ptext3 11BC  
                    __ptext4 12CA                      __ptext5 1256                      __ptext6 13DA  
                    __ptext7 1420                    _T1CONbits 000FCD     __size_of_EscreverDWINram 0074  
   __size_of_EscreverDWINreg 0070                      _minutos 00C2                  _PressaommCA 00B8  
             __pintcode_body 0CD8         end_of_initialization 13D0                 ??_CiclarOUT1 0044  
              __Lmediumconst 0000                      int_func 0CD8                    _RCSTAbits 000FAB  
                    postdec1 000FE5                      postdec2 000FDD                      postinc0 000FEE  
                    postinc1 000FE6                      postinc2 000FDE                 ??_LerDWINram 0044  
               ??_LerDWINreg 0044                    _PORTAbits 000F80                    _PORTBbits 000F81  
                  _PORTCbits 000F82           __end_of_CiclarOUT1 142A                  _Outputs2to9 0028  
                 main@imagem 010D                    _TXSTAbits 000FAC           __end_of_LerDWINram 10FC  
         __end_of_LerDWINreg 11BC                    _DelayDWIN 13DA               __end_of_LowISR 0154  
                _BAUDCONbits 000FB8        __end_of_Inicializacao 1256          start_initialization 1396  
          ??_EscreverDWINram 0044            ??_EscreverDWINreg 0044                   ?_DelayDWIN 0029  
                   ??_LowISR 0029                    _SerialOut 0088                    _ValoresAD 0019  
        EscreverDWINram@cont 0106          EscreverDWINreg@cont 0105                  __pdataBANK0 00C4  
           __CFG_LPT1OSC$OFF 000000                  __pbssCOMRAM 0001                __pcstackBANK0 00E0  
              __pcstackBANK1 0100                 _Inputs10to17 00BE                 _Inputs18to25 00BF  
HighISR@ValoresADanteriores1 0009  HighISR@ValoresADanteriores2 0011  HighISR@ValoresADanteriores3 00B0  
                   ?_HighISR 0029              HighISR@EstadoAD 0025             ___lwdiv@dividend 003A  
                  __pintcode 0008                     ?___lwdiv 003A                  __pintcodelo 0018  
           ___lwdiv@quotient 003E                 HighISR@Temp8 0043                  ??_DelayDWIN 0100  
                   _IPR1bits 000F9F                     _IPR2bits 000FA2                     _PIE1bits 000F9D  
                   _PIE2bits 000FA0                     i2u351_47 0FEA                     _PIR1bits 000F9E  
                   _PIR2bits 000FA1                     i2u284_40 0F20                     i2u284_45 0F18  
                   i2u276_45 0D94                     i2u276_47 0D96                     i2u277_45 0D9E  
                   i2u277_47 0DA0                     _RCONbits 000FD0             __CFG_WDTPS$32768 000000  
                _HLVDCONbits 000FD2                   _ADCON0bits 000FC2      EscreverDWINram@endereco 0102  
    EscreverDWINreg@endereco 0104                  _INTCON2bits 000FF1                    copy_data0 13C4  
           __size_of_HighISR 1028                     __Hrparam 0000                     _SerialIn 0060  
                   __Lrparam 0000               HighISR@CanalAD 0023             __size_of___lwdiv 005C  
            _EscreverDWINram 1256              _EscreverDWINreg 12CA              ___lwdiv@divisor 003C  
            ___lwdiv@counter 0040                     __ptext10 133A          HighISR@AccValoresAD 0001  
              __size_of_main 0B80                     _segundos 00C3                     main@temp 010F  
      __CFG_CPUDIV$OSC1_PLL2 000000                   _INTCONbits 000FF2                     intlevel1 0000  
                   intlevel2 0000       __size_of_Inicializacao 009A                  _POWER_FAULT 0224  
    __end_of_EscreverDWINram 12CA      __end_of_EscreverDWINreg 133A  
