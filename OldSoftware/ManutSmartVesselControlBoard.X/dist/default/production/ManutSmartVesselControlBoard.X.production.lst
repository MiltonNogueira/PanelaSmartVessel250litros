

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon Sep 16 16:10:38 2019

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    24  0000                     _ADCON0	set	4034
    25  0000                     _ADCON0bits	set	4034
    26  0000                     _ADCON1	set	4033
    27  0000                     _ADCON2	set	4032
    28  0000                     _ADRESH	set	4036
    29  0000                     _ADRESL	set	4035
    30  0000                     _BAUDCONbits	set	4024
    31  0000                     _CCP2CON	set	4026
    32  0000                     _CCPR2L	set	4027
    33  0000                     _CMCON	set	4020
    34  0000                     _INTCON2bits	set	4081
    35  0000                     _INTCONbits	set	4082
    36  0000                     _IPR1bits	set	3999
    37  0000                     _PIE1bits	set	3997
    38  0000                     _PIR1bits	set	3998
    39  0000                     _PORTA	set	3968
    40  0000                     _PORTAbits	set	3968
    41  0000                     _PORTB	set	3969
    42  0000                     _PORTBbits	set	3969
    43  0000                     _PORTC	set	3970
    44  0000                     _PORTCbits	set	3970
    45  0000                     _PORTD	set	3971
    46  0000                     _PORTE	set	3972
    47  0000                     _PR2	set	4043
    48  0000                     _RCONbits	set	4048
    49  0000                     _RCREG	set	4014
    50  0000                     _RCSTAbits	set	4011
    51  0000                     _SPBRG	set	4015
    52  0000                     _SPBRGH	set	4016
    53  0000                     _T0CON	set	4053
    54  0000                     _T2CON	set	4042
    55  0000                     _TMR0L	set	4054
    56  0000                     _TRISA	set	3986
    57  0000                     _TRISB	set	3987
    58  0000                     _TRISC	set	3988
    59  0000                     _TRISD	set	3989
    60  0000                     _TRISE	set	3990
    61  0000                     _TXREG	set	4013
    62  0000                     _TXSTAbits	set	4012
    63                           
    64 ;; *************** function _LowISR *****************
    65 ;; Defined at:
    66 ;;		line 227 in file "main.c"
    67 ;; Parameters:    Size  Location     Type
    68 ;;		None
    69 ;; Auto vars:     Size  Location     Type
    70 ;;		None
    71 ;; Return value:  Size  Location     Type
    72 ;;		None               void
    73 ;; Registers used:
    74 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
    75 ;; Tracked objects:
    76 ;;		On entry : 0/0
    77 ;;		On exit  : 0/0
    78 ;;		Unchanged: 0/0
    79 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
    80 ;;      Params:         0       0       0       0       0       0       0       0       0
    81 ;;      Locals:         0       0       0       0       0       0       0       0       0
    82 ;;      Temps:         17       0       0       0       0       0       0       0       0
    83 ;;      Totals:        17       0       0       0       0       0       0       0       0
    84 ;;Total ram usage:       17 bytes
    85 ;; Hardware stack levels used:    1
    86 ;; Hardware stack levels required when called:    2
    87 ;; This function calls:
    88 ;;		Nothing
    89 ;; This function is called by:
    90 ;;		Interrupt level 1
    91 ;; This function uses a non-reentrant model
    92 ;;
    93                           
    94                           	psect	intcodelo
    95  000018                     __pintcodelo:
    96                           	opt stack 0
    97                           
    98                           ; #config settings
    99  000018                     _LowISR:
   100                           	opt stack 26
   101                           
   102                           ;incstack = 0
   103  000018  CFD8 F027          	movff	status,??_LowISR
   104  00001C  CFE8 F028          	movff	wreg,??_LowISR+1
   105  000020  CFE0 F029          	movff	bsr,??_LowISR+2
   106  000024  CFFA F02A          	movff	pclath,??_LowISR+3
   107  000028  CFFB F02B          	movff	pclatu,??_LowISR+4
   108  00002C  CFE9 F02C          	movff	fsr0l,??_LowISR+5
   109  000030  CFEA F02D          	movff	fsr0h,??_LowISR+6
   110  000034  CFE1 F02E          	movff	fsr1l,??_LowISR+7
   111  000038  CFE2 F02F          	movff	fsr1h,??_LowISR+8
   112  00003C  CFD9 F030          	movff	fsr2l,??_LowISR+9
   113  000040  CFDA F031          	movff	fsr2h,??_LowISR+10
   114  000044  CFF3 F032          	movff	prodl,??_LowISR+11
   115  000048  CFF4 F033          	movff	prodh,??_LowISR+12
   116  00004C  CFF6 F034          	movff	tblptrl,??_LowISR+13
   117  000050  CFF7 F035          	movff	tblptrh,??_LowISR+14
   118  000054  CFF8 F036          	movff	tblptru,??_LowISR+15
   119  000058  CFF5 F037          	movff	tablat,??_LowISR+16
   120                           
   121                           ;main.c: 229: static unsigned char Indice;
   122                           ;main.c: 231: if(PIE1bits.RCIE && PIR1bits.RCIF){
   123  00005C  BA9D               	btfsc	3997,5,c	;volatile
   124  00005E  AA9E               	btfss	3998,5,c	;volatile
   125  000060  D013               	goto	i1l147
   126                           
   127                           ;main.c: 232: PIR1bits.RCIF = 0;
   128  000062  9A9E               	bcf	3998,5,c	;volatile
   129                           
   130                           ;main.c: 233: SerialIn[Indice] = RCREG;
   131  000064  5024               	movf	LowISR@Indice,w,c
   132  000066  0D01               	mullw	1
   133  000068  0E60               	movlw	low _SerialIn
   134  00006A  24F3               	addwf	prodl,w,c
   135  00006C  6ED9               	movwf	fsr2l,c
   136  00006E  0E00               	movlw	high _SerialIn
   137  000070  20F4               	addwfc	prodh,w,c
   138  000072  6EDA               	movwf	fsr2h,c
   139  000074  CFAE FFDF          	movff	4014,indf2	;volatile
   140                           
   141                           ;main.c: 234: Indice++;
   142  000078  2A24               	incf	LowISR@Indice,f,c
   143                           
   144                           ;main.c: 235: if(RCREG == '\r'){
   145  00007A  0E0D               	movlw	13
   146  00007C  18AE               	xorwf	4014,w,c	;volatile
   147  00007E  A4D8               	btfss	status,2,c
   148  000080  D003               	goto	i1l147
   149                           
   150                           ;main.c: 236: Indice = 0;
   151  000082  0E00               	movlw	0
   152  000084  6E24               	movwf	LowISR@Indice,c
   153  000086  D000               	goto	i1l147
   154  000088                     i1l147:
   155  000088  C037  FFF5         	movff	??_LowISR+16,tablat
   156  00008C  C036  FFF8         	movff	??_LowISR+15,tblptru
   157  000090  C035  FFF7         	movff	??_LowISR+14,tblptrh
   158  000094  C034  FFF6         	movff	??_LowISR+13,tblptrl
   159  000098  C033  FFF4         	movff	??_LowISR+12,prodh
   160  00009C  C032  FFF3         	movff	??_LowISR+11,prodl
   161  0000A0  C031  FFDA         	movff	??_LowISR+10,fsr2h
   162  0000A4  C030  FFD9         	movff	??_LowISR+9,fsr2l
   163  0000A8  C02F  FFE2         	movff	??_LowISR+8,fsr1h
   164  0000AC  C02E  FFE1         	movff	??_LowISR+7,fsr1l
   165  0000B0  C02D  FFEA         	movff	??_LowISR+6,fsr0h
   166  0000B4  C02C  FFE9         	movff	??_LowISR+5,fsr0l
   167  0000B8  C02B  FFFB         	movff	??_LowISR+4,pclatu
   168  0000BC  C02A  FFFA         	movff	??_LowISR+3,pclath
   169  0000C0  C029  FFE0         	movff	??_LowISR+2,bsr
   170  0000C4  C028  FFE8         	movff	??_LowISR+1,wreg
   171  0000C8  C027  FFD8         	movff	??_LowISR,status
   172  0000CC  0010               	retfie	
   173  0000CE                     __end_of_LowISR:
   174                           	opt stack 0
   175                           pclatu	equ	0xFFB
   176                           pclath	equ	0xFFA
   177                           tblptru	equ	0xFF8
   178                           tblptrh	equ	0xFF7
   179                           tblptrl	equ	0xFF6
   180                           tablat	equ	0xFF5
   181                           prodh	equ	0xFF4
   182                           prodl	equ	0xFF3
   183                           fsr0h	equ	0xFEA
   184                           fsr0l	equ	0xFE9
   185                           wreg	equ	0xFE8
   186                           fsr1h	equ	0xFE2
   187                           fsr1l	equ	0xFE1
   188                           bsr	equ	0xFE0
   189                           indf2	equ	0xFDF
   190                           fsr2h	equ	0xFDA
   191                           fsr2l	equ	0xFD9
   192                           status	equ	0xFD8
   193                           
   194                           	psect	cinit
   195  0012DC                     __pcinit:
   196                           	opt stack 0
   197  0012DC                     start_initialization:
   198                           	opt stack 0
   199  0012DC                     __initialization:
   200                           	opt stack 0
   201                           
   202                           ; Clear objects allocated to BANK0 (95 bytes)
   203  0012DC  EE00  F060         	lfsr	0,__pbssBANK0
   204  0012E0  0E5F               	movlw	95
   205  0012E2                     clear_0:
   206  0012E2  6AEE               	clrf	postinc0,c
   207  0012E4  06E8               	decf	wreg,f,c
   208  0012E6  E1FD               	bnz	clear_0
   209                           
   210                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   211  0012E8  6A44               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   212                           
   213                           ; Clear objects allocated to COMRAM (38 bytes)
   214  0012EA  EE00  F001         	lfsr	0,__pbssCOMRAM
   215  0012EE  0E26               	movlw	38
   216  0012F0                     clear_1:
   217  0012F0  6AEE               	clrf	postinc0,c
   218  0012F2  06E8               	decf	wreg,f,c
   219  0012F4  E1FD               	bnz	clear_1
   220  0012F6                     end_of_initialization:
   221                           	opt stack 0
   222  0012F6                     __end_of__initialization:
   223                           	opt stack 0
   224  0012F6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   225  0012F8  6EF8               	movwf	tblptru,c
   226  0012FA  0100               	movlb	0
   227  0012FC  EF69  F000         	goto	_main	;jump to C main() function
   228                           pclatu	equ	0xFFB
   229                           pclath	equ	0xFFA
   230                           tblptru	equ	0xFF8
   231                           tblptrh	equ	0xFF7
   232                           tblptrl	equ	0xFF6
   233                           tablat	equ	0xFF5
   234                           prodh	equ	0xFF4
   235                           prodl	equ	0xFF3
   236                           postinc0	equ	0xFEE
   237                           fsr0h	equ	0xFEA
   238                           fsr0l	equ	0xFE9
   239                           wreg	equ	0xFE8
   240                           fsr1h	equ	0xFE2
   241                           fsr1l	equ	0xFE1
   242                           bsr	equ	0xFE0
   243                           indf2	equ	0xFDF
   244                           fsr2h	equ	0xFDA
   245                           fsr2l	equ	0xFD9
   246                           status	equ	0xFD8
   247                           
   248                           	psect	bitbssCOMRAM
   249  000220                     __pbitbssCOMRAM:
   250                           	opt stack 0
   251  000220                     _IN0:
   252                           	opt stack 0
   253  000220                     	ds	1
   254  000221                     _IN1:
   255                           	opt stack 0
   256  000221                     	ds	1
   257  000222                     _OUT0:
   258                           	opt stack 0
   259  000222                     	ds	1
   260  000223                     _OUT1:
   261                           	opt stack 0
   262  000223                     	ds	1
   263                           pclatu	equ	0xFFB
   264                           pclath	equ	0xFFA
   265                           tblptru	equ	0xFF8
   266                           tblptrh	equ	0xFF7
   267                           tblptrl	equ	0xFF6
   268                           tablat	equ	0xFF5
   269                           prodh	equ	0xFF4
   270                           prodl	equ	0xFF3
   271                           postinc0	equ	0xFEE
   272                           fsr0h	equ	0xFEA
   273                           fsr0l	equ	0xFE9
   274                           wreg	equ	0xFE8
   275                           fsr1h	equ	0xFE2
   276                           fsr1l	equ	0xFE1
   277                           bsr	equ	0xFE0
   278                           indf2	equ	0xFDF
   279                           fsr2h	equ	0xFDA
   280                           fsr2l	equ	0xFD9
   281                           status	equ	0xFD8
   282                           
   283                           	psect	bssCOMRAM
   284  000001                     __pbssCOMRAM:
   285                           	opt stack 0
   286  000001                     HighISR@AccValoresAD:
   287                           	opt stack 0
   288  000001                     	ds	8
   289  000009                     HighISR@ValoresADanteriores1:
   290                           	opt stack 0
   291  000009                     	ds	8
   292  000011                     HighISR@ValoresADanteriores2:
   293                           	opt stack 0
   294  000011                     	ds	8
   295  000019                     _ValoresAD:
   296                           	opt stack 0
   297  000019                     	ds	8
   298  000021                     HighISR@CanalAD:
   299                           	opt stack 0
   300  000021                     	ds	1
   301  000022                     HighISR@ContMedia:
   302                           	opt stack 0
   303  000022                     	ds	1
   304  000023                     HighISR@EstadoAD:
   305                           	opt stack 0
   306  000023                     	ds	1
   307  000024                     LowISR@Indice:
   308                           	opt stack 0
   309  000024                     	ds	1
   310  000025                     _Outputs10to17:
   311                           	opt stack 0
   312  000025                     	ds	1
   313  000026                     _Outputs2to9:
   314                           	opt stack 0
   315  000026                     	ds	1
   316                           pclatu	equ	0xFFB
   317                           pclath	equ	0xFFA
   318                           tblptru	equ	0xFF8
   319                           tblptrh	equ	0xFF7
   320                           tblptrl	equ	0xFF6
   321                           tablat	equ	0xFF5
   322                           prodh	equ	0xFF4
   323                           prodl	equ	0xFF3
   324                           postinc0	equ	0xFEE
   325                           fsr0h	equ	0xFEA
   326                           fsr0l	equ	0xFE9
   327                           wreg	equ	0xFE8
   328                           fsr1h	equ	0xFE2
   329                           fsr1l	equ	0xFE1
   330                           bsr	equ	0xFE0
   331                           indf2	equ	0xFDF
   332                           fsr2h	equ	0xFDA
   333                           fsr2l	equ	0xFD9
   334                           status	equ	0xFD8
   335                           
   336                           	psect	bssBANK0
   337  000060                     __pbssBANK0:
   338                           	opt stack 0
   339  000060                     _SerialIn:
   340                           	opt stack 0
   341  000060                     	ds	40
   342  000088                     _SerialOut:
   343                           	opt stack 0
   344  000088                     	ds	40
   345  0000B0                     HighISR@ValoresADanteriores3:
   346                           	opt stack 0
   347  0000B0                     	ds	8
   348  0000B8                     _PressaommCA:
   349                           	opt stack 0
   350  0000B8                     	ds	4
   351  0000BC                     _Inputs10to17:
   352                           	opt stack 0
   353  0000BC                     	ds	1
   354  0000BD                     _Inputs18to25:
   355                           	opt stack 0
   356  0000BD                     	ds	1
   357  0000BE                     _Inputs2to9:
   358                           	opt stack 0
   359  0000BE                     	ds	1
   360                           pclatu	equ	0xFFB
   361                           pclath	equ	0xFFA
   362                           tblptru	equ	0xFF8
   363                           tblptrh	equ	0xFF7
   364                           tblptrl	equ	0xFF6
   365                           tablat	equ	0xFF5
   366                           prodh	equ	0xFF4
   367                           prodl	equ	0xFF3
   368                           postinc0	equ	0xFEE
   369                           fsr0h	equ	0xFEA
   370                           fsr0l	equ	0xFE9
   371                           wreg	equ	0xFE8
   372                           fsr1h	equ	0xFE2
   373                           fsr1l	equ	0xFE1
   374                           bsr	equ	0xFE0
   375                           indf2	equ	0xFDF
   376                           fsr2h	equ	0xFDA
   377                           fsr2l	equ	0xFD9
   378                           status	equ	0xFD8
   379                           
   380                           	psect	cstackBANK0
   381  0000BF                     __pcstackBANK0:
   382                           	opt stack 0
   383  0000BF                     ??_HighISR:
   384                           
   385                           ; 0 bytes @ 0x0
   386  0000BF                     	ds	16
   387  0000CF                     ?_LerDWINram:
   388                           	opt stack 0
   389  0000CF                     ?___wmul:
   390                           	opt stack 0
   391  0000CF                     ?___lldiv:
   392                           	opt stack 0
   393  0000CF                     EscreverDWINram@endereco:
   394                           	opt stack 0
   395  0000CF                     LerDWINram@endereco:
   396                           	opt stack 0
   397  0000CF                     ___wmul@multiplier:
   398                           	opt stack 0
   399  0000CF                     ___lldiv@dividend:
   400                           	opt stack 0
   401                           
   402                           ; 4 bytes @ 0x10
   403  0000CF                     	ds	2
   404  0000D1                     EscreverDWINram@valor:
   405                           	opt stack 0
   406  0000D1                     LerDWINram@VPrecebido:
   407                           	opt stack 0
   408  0000D1                     ___wmul@multiplicand:
   409                           	opt stack 0
   410                           
   411                           ; 2 bytes @ 0x12
   412  0000D1                     	ds	2
   413  0000D3                     EscreverDWINram@cont:
   414                           	opt stack 0
   415  0000D3                     LerDWINram@cont:
   416                           	opt stack 0
   417  0000D3                     ___lldiv@divisor:
   418                           	opt stack 0
   419                           
   420                           ; 4 bytes @ 0x14
   421  0000D3                     	ds	4
   422  0000D7                     ___lldiv@quotient:
   423                           	opt stack 0
   424                           
   425                           ; 4 bytes @ 0x18
   426  0000D7                     	ds	4
   427  0000DB                     ___lldiv@counter:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x1C
   431  0000DB                     	ds	1
   432  0000DC                     ??_main:
   433                           
   434                           ; 0 bytes @ 0x1D
   435  0000DC                     	ds	2
   436  0000DE                     main@diminui:
   437                           	opt stack 0
   438                           
   439                           ; 2 bytes @ 0x1F
   440  0000DE                     	ds	2
   441  0000E0                     main@aumenta:
   442                           	opt stack 0
   443                           
   444                           ; 2 bytes @ 0x21
   445  0000E0                     	ds	2
   446  0000E2                     main@imagem:
   447                           	opt stack 0
   448                           
   449                           ; 2 bytes @ 0x23
   450  0000E2                     	ds	2
   451  0000E4                     main@temp:
   452                           	opt stack 0
   453                           
   454                           ; 2 bytes @ 0x25
   455  0000E4                     	ds	2
   456  0000E6                     main@cont:
   457                           	opt stack 0
   458                           
   459                           ; 2 bytes @ 0x27
   460  0000E6                     	ds	2
   461                           pclatu	equ	0xFFB
   462                           pclath	equ	0xFFA
   463                           tblptru	equ	0xFF8
   464                           tblptrh	equ	0xFF7
   465                           tblptrl	equ	0xFF6
   466                           tablat	equ	0xFF5
   467                           prodh	equ	0xFF4
   468                           prodl	equ	0xFF3
   469                           postinc0	equ	0xFEE
   470                           fsr0h	equ	0xFEA
   471                           fsr0l	equ	0xFE9
   472                           wreg	equ	0xFE8
   473                           fsr1h	equ	0xFE2
   474                           fsr1l	equ	0xFE1
   475                           bsr	equ	0xFE0
   476                           indf2	equ	0xFDF
   477                           fsr2h	equ	0xFDA
   478                           fsr2l	equ	0xFD9
   479                           status	equ	0xFD8
   480                           
   481                           	psect	cstackCOMRAM
   482  000027                     __pcstackCOMRAM:
   483                           	opt stack 0
   484  000027                     ??_LowISR:
   485  000027                     
   486                           ; 0 bytes @ 0x0
   487  000027                     	ds	17
   488  000038                     ?___lwdiv:
   489                           	opt stack 0
   490  000038                     ___lwdiv@dividend:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x11
   494  000038                     	ds	2
   495  00003A                     ___lwdiv@divisor:
   496                           	opt stack 0
   497                           
   498                           ; 2 bytes @ 0x13
   499  00003A                     	ds	2
   500  00003C                     ___lwdiv@quotient:
   501                           	opt stack 0
   502                           
   503                           ; 2 bytes @ 0x15
   504  00003C                     	ds	2
   505  00003E                     ___lwdiv@counter:
   506                           	opt stack 0
   507                           
   508                           ; 1 bytes @ 0x17
   509  00003E                     	ds	1
   510  00003F                     HighISR@Temp16:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x18
   514  00003F                     	ds	2
   515  000041                     HighISR@Temp8:
   516                           	opt stack 0
   517                           
   518                           ; 1 bytes @ 0x1A
   519  000041                     	ds	1
   520  000042                     ??_DelayDWIN:
   521  000042                     ___wmul@product:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x1B
   525  000042                     	ds	1
   526  000043                     DelayDWIN@cont:
   527                           	opt stack 0
   528                           
   529                           ; 1 bytes @ 0x1C
   530  000043                     	ds	1
   531  000044                     pclatu	equ	0xFFB
   532                           pclath	equ	0xFFA
   533                           tblptru	equ	0xFF8
   534                           tblptrh	equ	0xFF7
   535                           tblptrl	equ	0xFF6
   536                           tablat	equ	0xFF5
   537                           prodh	equ	0xFF4
   538                           prodl	equ	0xFF3
   539                           postinc0	equ	0xFEE
   540                           fsr0h	equ	0xFEA
   541                           fsr0l	equ	0xFE9
   542                           wreg	equ	0xFE8
   543                           fsr1h	equ	0xFE2
   544                           fsr1l	equ	0xFE1
   545                           bsr	equ	0xFE0
   546                           indf2	equ	0xFDF
   547                           fsr2h	equ	0xFDA
   548                           fsr2l	equ	0xFD9
   549                           status	equ	0xFD8
   550                           
   551                           ; 0 bytes @ 0x1D
   552 ;;
   553 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   554 ;;
   555 ;; *************** function _main *****************
   556 ;; Defined at:
   557 ;;		line 436 in file "main.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;		None
   560 ;; Auto vars:     Size  Location     Type
   561 ;;  cont            2   39[BANK0 ] unsigned int 
   562 ;;  temp            2   37[BANK0 ] unsigned int 
   563 ;;  imagem          2   35[BANK0 ] unsigned int 
   564 ;;  aumenta         2   33[BANK0 ] unsigned int 
   565 ;;  diminui         2   31[BANK0 ] unsigned int 
   566 ;; Return value:  Size  Location     Type
   567 ;;		None               void
   568 ;; Registers used:
   569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   575 ;;      Params:         0       0       0       0       0       0       0       0       0
   576 ;;      Locals:         0      10       0       0       0       0       0       0       0
   577 ;;      Temps:          0       2       0       0       0       0       0       0       0
   578 ;;      Totals:         0      12       0       0       0       0       0       0       0
   579 ;;Total ram usage:       12 bytes
   580 ;; Hardware stack levels required when called:    5
   581 ;; This function calls:
   582 ;;		_EscreverDWINram
   583 ;;		_Inicializacao
   584 ;;		_LerDWINram
   585 ;;		___lldiv
   586 ;;		___wmul
   587 ;; This function is called by:
   588 ;;		Startup code after reset
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           	psect	text0
   593  0000D2                     __ptext0:
   594                           	opt stack 0
   595  0000D2                     _main:
   596                           	opt stack 26
   597                           
   598                           ;main.c: 437: unsigned int cont;
   599                           ;main.c: 438: unsigned int imagem;
   600                           ;main.c: 439: unsigned int temp;
   601                           ;main.c: 440: unsigned int diminui;
   602                           ;main.c: 441: unsigned int aumenta;
   603                           ;main.c: 443: Inicializacao();
   604                           
   605                           ;incstack = 0
   606  0000D2  ECB8  F008         	call	_Inicializacao	;wreg free
   607                           
   608                           ;main.c: 444: temp = 0;
   609  0000D6  0E00               	movlw	0
   610  0000D8  0100               	movlb	0	; () banked
   611  0000DA  6FE5               	movwf	(main@temp+1)& (0+255),b
   612  0000DC  0E00               	movlw	0
   613  0000DE  6FE4               	movwf	main@temp& (0+255),b
   614                           
   615                           ; BSR set to: 0
   616                           ;main.c: 445: imagem = 0;
   617  0000E0  0E00               	movlw	0
   618  0000E2  0100               	movlb	0	; () banked
   619  0000E4  6FE3               	movwf	(main@imagem+1)& (0+255),b
   620  0000E6  0E00               	movlw	0
   621  0000E8  6FE2               	movwf	main@imagem& (0+255),b
   622                           
   623                           ; BSR set to: 0
   624                           ;main.c: 446: CCPR2L = 51;
   625  0000EA  0E33               	movlw	51
   626  0000EC  6EBB               	movwf	4027,c	;volatile
   627                           
   628                           ; BSR set to: 0
   629                           ;main.c: 447: __nop();
   630  0000EE  F000               	nop	
   631                           
   632                           ;main.c: 448: EscreverDWINram(0x1A,0);
   633  0000F0  0E00               	movlw	0
   634  0000F2  0100               	movlb	0	; () banked
   635  0000F4  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
   636  0000F6  0E1A               	movlw	26
   637  0000F8  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
   638  0000FA  0E00               	movlw	0
   639  0000FC  0100               	movlb	0	; () banked
   640  0000FE  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
   641  000100  0E00               	movlw	0
   642  000102  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
   643  000104  ECF0  F008         	call	_EscreverDWINram	;wreg free
   644                           
   645                           ;main.c: 449: EscreverDWINram(0x1B,0);
   646  000108  0E00               	movlw	0
   647  00010A  0100               	movlb	0	; () banked
   648  00010C  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
   649  00010E  0E1B               	movlw	27
   650  000110  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
   651  000112  0E00               	movlw	0
   652  000114  0100               	movlb	0	; () banked
   653  000116  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
   654  000118  0E00               	movlw	0
   655  00011A  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
   656  00011C  ECF0  F008         	call	_EscreverDWINram	;wreg free
   657                           
   658                           ;main.c: 451: PORTBbits.RB5 = 1;
   659  000120  8A81               	bsf	3969,5,c	;volatile
   660                           
   661                           ;main.c: 452: Outputs10to17 |= 1;
   662  000122  8025               	bsf	_Outputs10to17,0,c
   663                           
   664                           ;main.c: 453: for(cont=0;cont<500;cont++)
   665  000124  0E00               	movlw	0
   666  000126  0100               	movlb	0	; () banked
   667  000128  6FE7               	movwf	(main@cont+1)& (0+255),b
   668  00012A  0E00               	movlw	0
   669  00012C  6FE6               	movwf	main@cont& (0+255),b
   670  00012E                     l2950:
   671                           
   672                           ; BSR set to: 0
   673  00012E  0EF4               	movlw	244
   674  000130  0100               	movlb	0	; () banked
   675  000132  5DE6               	subwf	main@cont& (0+255),w,b
   676  000134  0E01               	movlw	1
   677  000136  0100               	movlb	0	; () banked
   678  000138  59E7               	subwfb	(main@cont+1)& (0+255),w,b
   679  00013A  B0D8               	btfsc	status,0,c
   680  00013C  D00F               	goto	l2958
   681  00013E  D001               	goto	l2954
   682                           
   683                           ; BSR set to: 0
   684  000140  D00D               	goto	l2958
   685  000142                     l2954:
   686                           
   687                           ; BSR set to: 0
   688                           ;main.c: 454: _delay((unsigned long)((10)*(20000000/4000.0)));
   689  000142  0E41               	movlw	65
   690  000144  0100               	movlb	0	; () banked
   691  000146  6FDC               	movwf	??_main& (0+255),b
   692  000148  0EEE               	movlw	238
   693  00014A                     u3167:
   694  00014A  2EE8               	decfsz	wreg,f,c
   695  00014C  D7FE               	goto	u3167
   696  00014E  2FDC               	decfsz	??_main& (0+255),f,b
   697  000150  D7FC               	goto	u3167
   698  000152  D000               	nop2	
   699  000154  0100               	movlb	0	; () banked
   700  000156  4BE6               	infsnz	main@cont& (0+255),f,b
   701  000158  2BE7               	incf	(main@cont+1)& (0+255),f,b
   702  00015A  D7E9               	goto	l2950
   703  00015C                     l2958:
   704                           
   705                           ; BSR set to: 0
   706                           ;main.c: 455: Outputs10to17 &= 0xFE;
   707  00015C  9025               	bcf	_Outputs10to17,0,c
   708                           
   709                           ;main.c: 456: Outputs10to17 |= 2;
   710  00015E  8225               	bsf	_Outputs10to17,1,c
   711                           
   712                           ; BSR set to: 0
   713                           ;main.c: 457: for(cont=0;cont<500;cont++)
   714  000160  0E00               	movlw	0
   715  000162  0100               	movlb	0	; () banked
   716  000164  6FE7               	movwf	(main@cont+1)& (0+255),b
   717  000166  0E00               	movlw	0
   718  000168  6FE6               	movwf	main@cont& (0+255),b
   719  00016A                     l2962:
   720                           
   721                           ; BSR set to: 0
   722  00016A  0EF4               	movlw	244
   723  00016C  0100               	movlb	0	; () banked
   724  00016E  5DE6               	subwf	main@cont& (0+255),w,b
   725  000170  0E01               	movlw	1
   726  000172  0100               	movlb	0	; () banked
   727  000174  59E7               	subwfb	(main@cont+1)& (0+255),w,b
   728  000176  B0D8               	btfsc	status,0,c
   729  000178  D00F               	goto	l2970
   730  00017A  D001               	goto	l2966
   731                           
   732                           ; BSR set to: 0
   733  00017C  D00D               	goto	l2970
   734  00017E                     l2966:
   735                           
   736                           ; BSR set to: 0
   737                           ;main.c: 458: _delay((unsigned long)((10)*(20000000/4000.0)));
   738  00017E  0E41               	movlw	65
   739  000180  0100               	movlb	0	; () banked
   740  000182  6FDC               	movwf	??_main& (0+255),b
   741  000184  0EEE               	movlw	238
   742  000186                     u3177:
   743  000186  2EE8               	decfsz	wreg,f,c
   744  000188  D7FE               	goto	u3177
   745  00018A  2FDC               	decfsz	??_main& (0+255),f,b
   746  00018C  D7FC               	goto	u3177
   747  00018E  D000               	nop2	
   748  000190  0100               	movlb	0	; () banked
   749  000192  4BE6               	infsnz	main@cont& (0+255),f,b
   750  000194  2BE7               	incf	(main@cont+1)& (0+255),f,b
   751  000196  D7E9               	goto	l2962
   752  000198                     l2970:
   753                           
   754                           ; BSR set to: 0
   755                           ;main.c: 459: Outputs10to17 &= 0xFD;
   756  000198  9225               	bcf	_Outputs10to17,1,c
   757                           
   758                           ;main.c: 460: Outputs10to17 |= 4;
   759  00019A  8425               	bsf	_Outputs10to17,2,c
   760                           
   761                           ; BSR set to: 0
   762                           ;main.c: 461: for(cont=0;cont<500;cont++)
   763  00019C  0E00               	movlw	0
   764  00019E  0100               	movlb	0	; () banked
   765  0001A0  6FE7               	movwf	(main@cont+1)& (0+255),b
   766  0001A2  0E00               	movlw	0
   767  0001A4  6FE6               	movwf	main@cont& (0+255),b
   768  0001A6                     l2974:
   769                           
   770                           ; BSR set to: 0
   771  0001A6  0EF4               	movlw	244
   772  0001A8  0100               	movlb	0	; () banked
   773  0001AA  5DE6               	subwf	main@cont& (0+255),w,b
   774  0001AC  0E01               	movlw	1
   775  0001AE  0100               	movlb	0	; () banked
   776  0001B0  59E7               	subwfb	(main@cont+1)& (0+255),w,b
   777  0001B2  B0D8               	btfsc	status,0,c
   778  0001B4  D00F               	goto	l2982
   779  0001B6  D001               	goto	l2978
   780                           
   781                           ; BSR set to: 0
   782  0001B8  D00D               	goto	l2982
   783  0001BA                     l2978:
   784                           
   785                           ; BSR set to: 0
   786                           ;main.c: 462: _delay((unsigned long)((10)*(20000000/4000.0)));
   787  0001BA  0E41               	movlw	65
   788  0001BC  0100               	movlb	0	; () banked
   789  0001BE  6FDC               	movwf	??_main& (0+255),b
   790  0001C0  0EEE               	movlw	238
   791  0001C2                     u3187:
   792  0001C2  2EE8               	decfsz	wreg,f,c
   793  0001C4  D7FE               	goto	u3187
   794  0001C6  2FDC               	decfsz	??_main& (0+255),f,b
   795  0001C8  D7FC               	goto	u3187
   796  0001CA  D000               	nop2	
   797  0001CC  0100               	movlb	0	; () banked
   798  0001CE  4BE6               	infsnz	main@cont& (0+255),f,b
   799  0001D0  2BE7               	incf	(main@cont+1)& (0+255),f,b
   800  0001D2  D7E9               	goto	l2974
   801  0001D4                     l2982:
   802                           
   803                           ; BSR set to: 0
   804                           ;main.c: 463: Outputs10to17 &= 0xFB;
   805  0001D4  9425               	bcf	_Outputs10to17,2,c
   806                           
   807                           ;main.c: 464: Outputs10to17 |= 8;
   808  0001D6  8625               	bsf	_Outputs10to17,3,c
   809                           
   810                           ; BSR set to: 0
   811                           ;main.c: 465: for(cont=0;cont<500;cont++)
   812  0001D8  0E00               	movlw	0
   813  0001DA  0100               	movlb	0	; () banked
   814  0001DC  6FE7               	movwf	(main@cont+1)& (0+255),b
   815  0001DE  0E00               	movlw	0
   816  0001E0  6FE6               	movwf	main@cont& (0+255),b
   817  0001E2                     l2986:
   818                           
   819                           ; BSR set to: 0
   820  0001E2  0EF4               	movlw	244
   821  0001E4  0100               	movlb	0	; () banked
   822  0001E6  5DE6               	subwf	main@cont& (0+255),w,b
   823  0001E8  0E01               	movlw	1
   824  0001EA  0100               	movlb	0	; () banked
   825  0001EC  59E7               	subwfb	(main@cont+1)& (0+255),w,b
   826  0001EE  B0D8               	btfsc	status,0,c
   827  0001F0  D00F               	goto	l2994
   828  0001F2  D001               	goto	l2990
   829                           
   830                           ; BSR set to: 0
   831  0001F4  D00D               	goto	l2994
   832  0001F6                     l2990:
   833                           
   834                           ; BSR set to: 0
   835                           ;main.c: 466: _delay((unsigned long)((10)*(20000000/4000.0)));
   836  0001F6  0E41               	movlw	65
   837  0001F8  0100               	movlb	0	; () banked
   838  0001FA  6FDC               	movwf	??_main& (0+255),b
   839  0001FC  0EEE               	movlw	238
   840  0001FE                     u3197:
   841  0001FE  2EE8               	decfsz	wreg,f,c
   842  000200  D7FE               	goto	u3197
   843  000202  2FDC               	decfsz	??_main& (0+255),f,b
   844  000204  D7FC               	goto	u3197
   845  000206  D000               	nop2	
   846  000208  0100               	movlb	0	; () banked
   847  00020A  4BE6               	infsnz	main@cont& (0+255),f,b
   848  00020C  2BE7               	incf	(main@cont+1)& (0+255),f,b
   849  00020E  D7E9               	goto	l2986
   850  000210                     l2994:
   851                           
   852                           ; BSR set to: 0
   853                           ;main.c: 467: Outputs10to17 &= 0xF7;
   854  000210  9625               	bcf	_Outputs10to17,3,c
   855                           
   856                           ;main.c: 468: Outputs10to17 |= 16;
   857  000212  8825               	bsf	_Outputs10to17,4,c
   858                           
   859                           ; BSR set to: 0
   860                           ;main.c: 469: for(cont=0;cont<500;cont++)
   861  000214  0E00               	movlw	0
   862  000216  0100               	movlb	0	; () banked
   863  000218  6FE7               	movwf	(main@cont+1)& (0+255),b
   864  00021A  0E00               	movlw	0
   865  00021C  6FE6               	movwf	main@cont& (0+255),b
   866  00021E                     l2998:
   867                           
   868                           ; BSR set to: 0
   869  00021E  0EF4               	movlw	244
   870  000220  0100               	movlb	0	; () banked
   871  000222  5DE6               	subwf	main@cont& (0+255),w,b
   872  000224  0E01               	movlw	1
   873  000226  0100               	movlb	0	; () banked
   874  000228  59E7               	subwfb	(main@cont+1)& (0+255),w,b
   875  00022A  B0D8               	btfsc	status,0,c
   876  00022C  D00F               	goto	l3006
   877  00022E  D001               	goto	l3002
   878                           
   879                           ; BSR set to: 0
   880  000230  D00D               	goto	l3006
   881  000232                     l3002:
   882                           
   883                           ; BSR set to: 0
   884                           ;main.c: 470: _delay((unsigned long)((10)*(20000000/4000.0)));
   885  000232  0E41               	movlw	65
   886  000234  0100               	movlb	0	; () banked
   887  000236  6FDC               	movwf	??_main& (0+255),b
   888  000238  0EEE               	movlw	238
   889  00023A                     u3207:
   890  00023A  2EE8               	decfsz	wreg,f,c
   891  00023C  D7FE               	goto	u3207
   892  00023E  2FDC               	decfsz	??_main& (0+255),f,b
   893  000240  D7FC               	goto	u3207
   894  000242  D000               	nop2	
   895  000244  0100               	movlb	0	; () banked
   896  000246  4BE6               	infsnz	main@cont& (0+255),f,b
   897  000248  2BE7               	incf	(main@cont+1)& (0+255),f,b
   898  00024A  D7E9               	goto	l2998
   899  00024C                     l3006:
   900                           
   901                           ; BSR set to: 0
   902                           ;main.c: 471: Outputs10to17 &= 0xEF;
   903  00024C  9825               	bcf	_Outputs10to17,4,c
   904                           
   905                           ;main.c: 472: Outputs10to17 |= 32;
   906  00024E  8A25               	bsf	_Outputs10to17,5,c
   907                           
   908                           ; BSR set to: 0
   909                           ;main.c: 473: for(cont=0;cont<500;cont++)
   910  000250  0E00               	movlw	0
   911  000252  0100               	movlb	0	; () banked
   912  000254  6FE7               	movwf	(main@cont+1)& (0+255),b
   913  000256  0E00               	movlw	0
   914  000258  6FE6               	movwf	main@cont& (0+255),b
   915  00025A                     l3010:
   916                           
   917                           ; BSR set to: 0
   918  00025A  0EF4               	movlw	244
   919  00025C  0100               	movlb	0	; () banked
   920  00025E  5DE6               	subwf	main@cont& (0+255),w,b
   921  000260  0E01               	movlw	1
   922  000262  0100               	movlb	0	; () banked
   923  000264  59E7               	subwfb	(main@cont+1)& (0+255),w,b
   924  000266  B0D8               	btfsc	status,0,c
   925  000268  D00F               	goto	l3018
   926  00026A  D001               	goto	l3014
   927                           
   928                           ; BSR set to: 0
   929  00026C  D00D               	goto	l3018
   930  00026E                     l3014:
   931                           
   932                           ; BSR set to: 0
   933                           ;main.c: 474: _delay((unsigned long)((10)*(20000000/4000.0)));
   934  00026E  0E41               	movlw	65
   935  000270  0100               	movlb	0	; () banked
   936  000272  6FDC               	movwf	??_main& (0+255),b
   937  000274  0EEE               	movlw	238
   938  000276                     u3217:
   939  000276  2EE8               	decfsz	wreg,f,c
   940  000278  D7FE               	goto	u3217
   941  00027A  2FDC               	decfsz	??_main& (0+255),f,b
   942  00027C  D7FC               	goto	u3217
   943  00027E  D000               	nop2	
   944  000280  0100               	movlb	0	; () banked
   945  000282  4BE6               	infsnz	main@cont& (0+255),f,b
   946  000284  2BE7               	incf	(main@cont+1)& (0+255),f,b
   947  000286  D7E9               	goto	l3010
   948  000288                     l3018:
   949                           
   950                           ; BSR set to: 0
   951                           ;main.c: 475: Outputs10to17 &= 0xDF;
   952  000288  9A25               	bcf	_Outputs10to17,5,c
   953                           
   954                           ;main.c: 476: Outputs10to17 |= 64;
   955  00028A  8C25               	bsf	_Outputs10to17,6,c
   956                           
   957                           ; BSR set to: 0
   958                           ;main.c: 477: for(cont=0;cont<500;cont++)
   959  00028C  0E00               	movlw	0
   960  00028E  0100               	movlb	0	; () banked
   961  000290  6FE7               	movwf	(main@cont+1)& (0+255),b
   962  000292  0E00               	movlw	0
   963  000294  6FE6               	movwf	main@cont& (0+255),b
   964  000296                     l3022:
   965                           
   966                           ; BSR set to: 0
   967  000296  0EF4               	movlw	244
   968  000298  0100               	movlb	0	; () banked
   969  00029A  5DE6               	subwf	main@cont& (0+255),w,b
   970  00029C  0E01               	movlw	1
   971  00029E  0100               	movlb	0	; () banked
   972  0002A0  59E7               	subwfb	(main@cont+1)& (0+255),w,b
   973  0002A2  B0D8               	btfsc	status,0,c
   974  0002A4  D00F               	goto	l3030
   975  0002A6  D001               	goto	l3026
   976                           
   977                           ; BSR set to: 0
   978  0002A8  D00D               	goto	l3030
   979  0002AA                     l3026:
   980                           
   981                           ; BSR set to: 0
   982                           ;main.c: 478: _delay((unsigned long)((10)*(20000000/4000.0)));
   983  0002AA  0E41               	movlw	65
   984  0002AC  0100               	movlb	0	; () banked
   985  0002AE  6FDC               	movwf	??_main& (0+255),b
   986  0002B0  0EEE               	movlw	238
   987  0002B2                     u3227:
   988  0002B2  2EE8               	decfsz	wreg,f,c
   989  0002B4  D7FE               	goto	u3227
   990  0002B6  2FDC               	decfsz	??_main& (0+255),f,b
   991  0002B8  D7FC               	goto	u3227
   992  0002BA  D000               	nop2	
   993  0002BC  0100               	movlb	0	; () banked
   994  0002BE  4BE6               	infsnz	main@cont& (0+255),f,b
   995  0002C0  2BE7               	incf	(main@cont+1)& (0+255),f,b
   996  0002C2  D7E9               	goto	l3022
   997  0002C4                     l3030:
   998                           
   999                           ; BSR set to: 0
  1000                           ;main.c: 479: Outputs10to17 &= 0xBF;
  1001  0002C4  9C25               	bcf	_Outputs10to17,6,c
  1002                           
  1003                           ;main.c: 480: Outputs10to17 |= 128;
  1004  0002C6  8E25               	bsf	_Outputs10to17,7,c
  1005                           
  1006                           ; BSR set to: 0
  1007                           ;main.c: 481: for(cont=0;cont<500;cont++)
  1008  0002C8  0E00               	movlw	0
  1009  0002CA  0100               	movlb	0	; () banked
  1010  0002CC  6FE7               	movwf	(main@cont+1)& (0+255),b
  1011  0002CE  0E00               	movlw	0
  1012  0002D0  6FE6               	movwf	main@cont& (0+255),b
  1013  0002D2                     l3034:
  1014                           
  1015                           ; BSR set to: 0
  1016  0002D2  0EF4               	movlw	244
  1017  0002D4  0100               	movlb	0	; () banked
  1018  0002D6  5DE6               	subwf	main@cont& (0+255),w,b
  1019  0002D8  0E01               	movlw	1
  1020  0002DA  0100               	movlb	0	; () banked
  1021  0002DC  59E7               	subwfb	(main@cont+1)& (0+255),w,b
  1022  0002DE  B0D8               	btfsc	status,0,c
  1023  0002E0  D00F               	goto	l3042
  1024  0002E2  D001               	goto	l3038
  1025                           
  1026                           ; BSR set to: 0
  1027  0002E4  D00D               	goto	l3042
  1028  0002E6                     l3038:
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;main.c: 482: _delay((unsigned long)((10)*(20000000/4000.0)));
  1032  0002E6  0E41               	movlw	65
  1033  0002E8  0100               	movlb	0	; () banked
  1034  0002EA  6FDC               	movwf	??_main& (0+255),b
  1035  0002EC  0EEE               	movlw	238
  1036  0002EE                     u3237:
  1037  0002EE  2EE8               	decfsz	wreg,f,c
  1038  0002F0  D7FE               	goto	u3237
  1039  0002F2  2FDC               	decfsz	??_main& (0+255),f,b
  1040  0002F4  D7FC               	goto	u3237
  1041  0002F6  D000               	nop2	
  1042  0002F8  0100               	movlb	0	; () banked
  1043  0002FA  4BE6               	infsnz	main@cont& (0+255),f,b
  1044  0002FC  2BE7               	incf	(main@cont+1)& (0+255),f,b
  1045  0002FE  D7E9               	goto	l3034
  1046  000300                     l3042:
  1047                           
  1048                           ; BSR set to: 0
  1049                           ;main.c: 483: Outputs10to17 &= 0x7F;
  1050  000300  9E25               	bcf	_Outputs10to17,7,c
  1051                           
  1052                           ; BSR set to: 0
  1053                           ;main.c: 485: PORTBbits.RB5 = 0;
  1054  000302  9A81               	bcf	3969,5,c	;volatile
  1055                           
  1056                           ; BSR set to: 0
  1057                           ;main.c: 486: Outputs2to9 = 0;
  1058  000304  0E00               	movlw	0
  1059  000306  6E26               	movwf	_Outputs2to9,c
  1060                           
  1061                           ; BSR set to: 0
  1062                           ;main.c: 487: Outputs10to17 = 0;
  1063  000308  0E00               	movlw	0
  1064  00030A  6E25               	movwf	_Outputs10to17,c
  1065  00030C  D000               	goto	l3050
  1066  00030E                     l3050:
  1067                           
  1068                           ;main.c: 491: EscreverDWINram(0x1C,ValoresAD[0]);
  1069  00030E  0E00               	movlw	0
  1070  000310  0100               	movlb	0	; () banked
  1071  000312  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1072  000314  0E1C               	movlw	28
  1073  000316  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1074  000318  C019  F0D1         	movff	_ValoresAD,EscreverDWINram@valor
  1075  00031C  C01A  F0D2         	movff	_ValoresAD+1,EscreverDWINram@valor+1
  1076  000320  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1077                           
  1078                           ;main.c: 492: EscreverDWINram(0x1D,ValoresAD[1]);
  1079  000324  0E00               	movlw	0
  1080  000326  0100               	movlb	0	; () banked
  1081  000328  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1082  00032A  0E1D               	movlw	29
  1083  00032C  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1084  00032E  C01B  F0D1         	movff	_ValoresAD+2,EscreverDWINram@valor
  1085  000332  C01C  F0D2         	movff	_ValoresAD+3,EscreverDWINram@valor+1
  1086  000336  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1087                           
  1088                           ;main.c: 493: EscreverDWINram(0x1E,ValoresAD[2]);
  1089  00033A  0E00               	movlw	0
  1090  00033C  0100               	movlb	0	; () banked
  1091  00033E  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1092  000340  0E1E               	movlw	30
  1093  000342  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1094  000344  C01D  F0D1         	movff	_ValoresAD+4,EscreverDWINram@valor
  1095  000348  C01E  F0D2         	movff	_ValoresAD+5,EscreverDWINram@valor+1
  1096  00034C  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1097                           
  1098                           ;main.c: 494: PressaommCA = ValoresAD[3]*135 - 15*135;
  1099  000350  0E17               	movlw	23
  1100  000352  0100               	movlb	0	; () banked
  1101  000354  6FDC               	movwf	??_main& (0+255),b
  1102  000356  0EF8               	movlw	248
  1103  000358  0100               	movlb	0	; () banked
  1104  00035A  6FDD               	movwf	(??_main+1)& (0+255),b
  1105  00035C  C01F  F0CF         	movff	_ValoresAD+6,___wmul@multiplier
  1106  000360  C020  F0D0         	movff	_ValoresAD+7,___wmul@multiplier+1
  1107  000364  0E00               	movlw	0
  1108  000366  0100               	movlb	0	; () banked
  1109  000368  6FD2               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1110  00036A  0E87               	movlw	135
  1111  00036C  6FD1               	movwf	___wmul@multiplicand& (0+255),b
  1112  00036E  EC54  F009         	call	___wmul	;wreg free
  1113  000372  0100               	movlb	0	; () banked
  1114  000374  51DC               	movf	??_main& (0+255),w,b
  1115  000376  0100               	movlb	0	; () banked
  1116  000378  27CF               	addwf	?___wmul& (0+255),f,b
  1117  00037A  0100               	movlb	0	; () banked
  1118  00037C  51DD               	movf	(??_main+1)& (0+255),w,b
  1119  00037E  0100               	movlb	0	; () banked
  1120  000380  23D0               	addwfc	(?___wmul+1)& (0+255),f,b
  1121  000382  0100               	movlb	0	; () banked
  1122  000384  C0CF  F0B8         	movff	?___wmul,_PressaommCA
  1123  000388  0100               	movlb	0	; () banked
  1124  00038A  C0D0  F0B9         	movff	?___wmul+1,_PressaommCA+1
  1125  00038E  0100               	movlb	0	; () banked
  1126  000390  6BBA               	clrf	(_PressaommCA+2)& (0+255),b
  1127  000392  6BBB               	clrf	(_PressaommCA+3)& (0+255),b
  1128                           
  1129                           ; BSR set to: 0
  1130                           ;main.c: 495: PressaommCA /= 100;
  1131  000394  C0B8  F0CF         	movff	_PressaommCA,___lldiv@dividend
  1132  000398  C0B9  F0D0         	movff	_PressaommCA+1,___lldiv@dividend+1
  1133  00039C  C0BA  F0D1         	movff	_PressaommCA+2,___lldiv@dividend+2
  1134  0003A0  C0BB  F0D2         	movff	_PressaommCA+3,___lldiv@dividend+3
  1135  0003A4  0E64               	movlw	100
  1136  0003A6  0100               	movlb	0	; () banked
  1137  0003A8  6FD3               	movwf	___lldiv@divisor& (0+255),b
  1138  0003AA  0E00               	movlw	0
  1139  0003AC  6FD4               	movwf	(___lldiv@divisor+1)& (0+255),b
  1140  0003AE  0E00               	movlw	0
  1141  0003B0  6FD5               	movwf	(___lldiv@divisor+2)& (0+255),b
  1142  0003B2  0E00               	movlw	0
  1143  0003B4  6FD6               	movwf	(___lldiv@divisor+3)& (0+255),b
  1144  0003B6  ECF7  F007         	call	___lldiv	;wreg free
  1145  0003BA  C0CF  F0B8         	movff	?___lldiv,_PressaommCA
  1146  0003BE  C0D0  F0B9         	movff	?___lldiv+1,_PressaommCA+1
  1147  0003C2  C0D1  F0BA         	movff	?___lldiv+2,_PressaommCA+2
  1148  0003C6  C0D2  F0BB         	movff	?___lldiv+3,_PressaommCA+3
  1149                           
  1150                           ;main.c: 496: EscreverDWINram(0x1F,PressaommCA);
  1151  0003CA  0E00               	movlw	0
  1152  0003CC  0100               	movlb	0	; () banked
  1153  0003CE  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1154  0003D0  0E1F               	movlw	31
  1155  0003D2  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1156  0003D4  C0B8  F0D1         	movff	_PressaommCA,EscreverDWINram@valor
  1157  0003D8  C0B9  F0D2         	movff	_PressaommCA+1,EscreverDWINram@valor+1
  1158  0003DC  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1159                           
  1160                           ;main.c: 498: EscreverDWINram(0x20,CCPR2L-1);
  1161  0003E0  0E00               	movlw	0
  1162  0003E2  0100               	movlb	0	; () banked
  1163  0003E4  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1164  0003E6  0E20               	movlw	32
  1165  0003E8  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1166  0003EA  0EFF               	movlw	255
  1167  0003EC  24BB               	addwf	4027,w,c	;volatile
  1168  0003EE  0100               	movlb	0	; () banked
  1169  0003F0  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1170  0003F2  0100               	movlb	0	; () banked
  1171  0003F4  6BD2               	clrf	(EscreverDWINram@valor+1)& (0+255),b
  1172  0003F6  0EFF               	movlw	255
  1173  0003F8  23D2               	addwfc	(EscreverDWINram@valor+1)& (0+255),f,b
  1174  0003FA  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1175                           
  1176                           ;main.c: 499: diminui = LerDWINram(0x0021);
  1177  0003FE  0E00               	movlw	0
  1178  000400  0100               	movlb	0	; () banked
  1179  000402  6FD0               	movwf	(LerDWINram@endereco+1)& (0+255),b
  1180  000404  0E21               	movlw	33
  1181  000406  6FCF               	movwf	LerDWINram@endereco& (0+255),b
  1182  000408  EC5A  F008         	call	_LerDWINram	;wreg free
  1183  00040C  C0CF  F0DE         	movff	?_LerDWINram,main@diminui
  1184  000410  C0D0  F0DF         	movff	?_LerDWINram+1,main@diminui+1
  1185                           
  1186                           ;main.c: 500: if(diminui > 0){
  1187  000414  0100               	movlb	0	; () banked
  1188  000416  51DE               	movf	main@diminui& (0+255),w,b
  1189  000418  0100               	movlb	0	; () banked
  1190  00041A  11DF               	iorwf	(main@diminui+1)& (0+255),w,b
  1191  00041C  B4D8               	btfsc	status,2,c
  1192  00041E  D022               	goto	l3076
  1193                           
  1194                           ; BSR set to: 0
  1195                           ;main.c: 501: if(CCPR2L>10){
  1196  000420  0E0A               	movlw	10
  1197  000422  64BB               	cpfsgt	4027,c	;volatile
  1198  000424  D012               	goto	l3074
  1199                           
  1200                           ; BSR set to: 0
  1201                           ;main.c: 502: CCPR2L -= 10;
  1202  000426  0E0A               	movlw	10
  1203  000428  5EBB               	subwf	4027,f,c	;volatile
  1204                           
  1205                           ; BSR set to: 0
  1206                           ;main.c: 503: EscreverDWINram(0x20,CCPR2L-1);
  1207  00042A  0E00               	movlw	0
  1208  00042C  0100               	movlb	0	; () banked
  1209  00042E  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1210  000430  0E20               	movlw	32
  1211  000432  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1212  000434  0EFF               	movlw	255
  1213  000436  24BB               	addwf	4027,w,c	;volatile
  1214  000438  0100               	movlb	0	; () banked
  1215  00043A  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1216  00043C  0100               	movlb	0	; () banked
  1217  00043E  6BD2               	clrf	(EscreverDWINram@valor+1)& (0+255),b
  1218  000440  0EFF               	movlw	255
  1219  000442  23D2               	addwfc	(EscreverDWINram@valor+1)& (0+255),f,b
  1220  000444  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1221  000448  D000               	goto	l3074
  1222  00044A                     l3074:
  1223                           
  1224                           ;main.c: 504: }
  1225                           ;main.c: 505: EscreverDWINram(0x21,0);
  1226  00044A  0E00               	movlw	0
  1227  00044C  0100               	movlb	0	; () banked
  1228  00044E  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1229  000450  0E21               	movlw	33
  1230  000452  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1231  000454  0E00               	movlw	0
  1232  000456  0100               	movlb	0	; () banked
  1233  000458  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1234  00045A  0E00               	movlw	0
  1235  00045C  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1236  00045E  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1237  000462  D000               	goto	l3076
  1238  000464                     l3076:
  1239                           
  1240                           ;main.c: 506: }
  1241                           ;main.c: 508: aumenta = LerDWINram(0x0022);
  1242  000464  0E00               	movlw	0
  1243  000466  0100               	movlb	0	; () banked
  1244  000468  6FD0               	movwf	(LerDWINram@endereco+1)& (0+255),b
  1245  00046A  0E22               	movlw	34
  1246  00046C  6FCF               	movwf	LerDWINram@endereco& (0+255),b
  1247  00046E  EC5A  F008         	call	_LerDWINram	;wreg free
  1248  000472  C0CF  F0E0         	movff	?_LerDWINram,main@aumenta
  1249  000476  C0D0  F0E1         	movff	?_LerDWINram+1,main@aumenta+1
  1250                           
  1251                           ;main.c: 509: if(aumenta > 0){
  1252  00047A  0100               	movlb	0	; () banked
  1253  00047C  51E0               	movf	main@aumenta& (0+255),w,b
  1254  00047E  0100               	movlb	0	; () banked
  1255  000480  11E1               	iorwf	(main@aumenta+1)& (0+255),w,b
  1256  000482  B4D8               	btfsc	status,2,c
  1257  000484  D022               	goto	l3088
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;main.c: 510: if(CCPR2L<91){
  1261  000486  0E5B               	movlw	91
  1262  000488  60BB               	cpfslt	4027,c	;volatile
  1263  00048A  D012               	goto	l3086
  1264                           
  1265                           ; BSR set to: 0
  1266                           ;main.c: 511: CCPR2L += 10;
  1267  00048C  0E0A               	movlw	10
  1268  00048E  26BB               	addwf	4027,f,c	;volatile
  1269                           
  1270                           ; BSR set to: 0
  1271                           ;main.c: 512: EscreverDWINram(0x20,CCPR2L-1);
  1272  000490  0E00               	movlw	0
  1273  000492  0100               	movlb	0	; () banked
  1274  000494  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1275  000496  0E20               	movlw	32
  1276  000498  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1277  00049A  0EFF               	movlw	255
  1278  00049C  24BB               	addwf	4027,w,c	;volatile
  1279  00049E  0100               	movlb	0	; () banked
  1280  0004A0  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1281  0004A2  0100               	movlb	0	; () banked
  1282  0004A4  6BD2               	clrf	(EscreverDWINram@valor+1)& (0+255),b
  1283  0004A6  0EFF               	movlw	255
  1284  0004A8  23D2               	addwfc	(EscreverDWINram@valor+1)& (0+255),f,b
  1285  0004AA  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1286  0004AE  D000               	goto	l3086
  1287  0004B0                     l3086:
  1288                           
  1289                           ;main.c: 513: }
  1290                           ;main.c: 514: EscreverDWINram(0x22,0);
  1291  0004B0  0E00               	movlw	0
  1292  0004B2  0100               	movlb	0	; () banked
  1293  0004B4  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1294  0004B6  0E22               	movlw	34
  1295  0004B8  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1296  0004BA  0E00               	movlw	0
  1297  0004BC  0100               	movlb	0	; () banked
  1298  0004BE  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1299  0004C0  0E00               	movlw	0
  1300  0004C2  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1301  0004C4  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1302  0004C8  D000               	goto	l3088
  1303  0004CA                     l3088:
  1304                           
  1305                           ;main.c: 515: }
  1306                           ;main.c: 517: if(IN0)
  1307  0004CA  A044               	btfss	_IN0/(0+8),_IN0& (0+7),c
  1308  0004CC  D00D               	goto	l3092
  1309                           
  1310                           ;main.c: 518: EscreverDWINram(0x80,1);
  1311  0004CE  0E00               	movlw	0
  1312  0004D0  0100               	movlb	0	; () banked
  1313  0004D2  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1314  0004D4  0E80               	movlw	128
  1315  0004D6  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1316  0004D8  0E00               	movlw	0
  1317  0004DA  0100               	movlb	0	; () banked
  1318  0004DC  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1319  0004DE  0E01               	movlw	1
  1320  0004E0  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1321  0004E2  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1322  0004E6  D00D               	goto	l3094
  1323  0004E8                     l3092:
  1324                           
  1325                           ;main.c: 519: else
  1326                           ;main.c: 520: EscreverDWINram(0x80,0);
  1327  0004E8  0E00               	movlw	0
  1328  0004EA  0100               	movlb	0	; () banked
  1329  0004EC  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1330  0004EE  0E80               	movlw	128
  1331  0004F0  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1332  0004F2  0E00               	movlw	0
  1333  0004F4  0100               	movlb	0	; () banked
  1334  0004F6  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1335  0004F8  0E00               	movlw	0
  1336  0004FA  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1337  0004FC  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1338  000500  D000               	goto	l3094
  1339  000502                     l3094:
  1340                           
  1341                           ;main.c: 521: if(IN1)
  1342  000502  A244               	btfss	_IN1/(0+8),_IN1& (0+7),c
  1343  000504  D00D               	goto	l3098
  1344                           
  1345                           ;main.c: 522: EscreverDWINram(0x81,1);
  1346  000506  0E00               	movlw	0
  1347  000508  0100               	movlb	0	; () banked
  1348  00050A  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1349  00050C  0E81               	movlw	129
  1350  00050E  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1351  000510  0E00               	movlw	0
  1352  000512  0100               	movlb	0	; () banked
  1353  000514  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1354  000516  0E01               	movlw	1
  1355  000518  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1356  00051A  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1357  00051E  D00D               	goto	l3100
  1358  000520                     l3098:
  1359                           
  1360                           ;main.c: 523: else
  1361                           ;main.c: 524: EscreverDWINram(0x81,0);
  1362  000520  0E00               	movlw	0
  1363  000522  0100               	movlb	0	; () banked
  1364  000524  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1365  000526  0E81               	movlw	129
  1366  000528  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1367  00052A  0E00               	movlw	0
  1368  00052C  0100               	movlb	0	; () banked
  1369  00052E  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1370  000530  0E00               	movlw	0
  1371  000532  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1372  000534  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1373  000538  D000               	goto	l3100
  1374  00053A                     l3100:
  1375                           
  1376                           ;main.c: 525: if(( (Inputs2to9 & 1) ? (1) : (0) ))
  1377  00053A  0100               	movlb	0	; () banked
  1378  00053C  A1BE               	btfss	_Inputs2to9& (0+255),0,b
  1379  00053E  D00D               	goto	l3104
  1380                           
  1381                           ; BSR set to: 0
  1382                           ;main.c: 526: EscreverDWINram(0x82,1);
  1383  000540  0E00               	movlw	0
  1384  000542  0100               	movlb	0	; () banked
  1385  000544  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1386  000546  0E82               	movlw	130
  1387  000548  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1388  00054A  0E00               	movlw	0
  1389  00054C  0100               	movlb	0	; () banked
  1390  00054E  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1391  000550  0E01               	movlw	1
  1392  000552  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1393  000554  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1394  000558  D00D               	goto	l3106
  1395  00055A                     l3104:
  1396                           
  1397                           ;main.c: 527: else
  1398                           ;main.c: 528: EscreverDWINram(0x82,0);
  1399  00055A  0E00               	movlw	0
  1400  00055C  0100               	movlb	0	; () banked
  1401  00055E  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1402  000560  0E82               	movlw	130
  1403  000562  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1404  000564  0E00               	movlw	0
  1405  000566  0100               	movlb	0	; () banked
  1406  000568  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1407  00056A  0E00               	movlw	0
  1408  00056C  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1409  00056E  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1410  000572  D000               	goto	l3106
  1411  000574                     l3106:
  1412                           
  1413                           ;main.c: 529: if(( (Inputs2to9 & 2) ? (1) : (0) ))
  1414  000574  0100               	movlb	0	; () banked
  1415  000576  A3BE               	btfss	_Inputs2to9& (0+255),1,b
  1416  000578  D00D               	goto	l3110
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;main.c: 530: EscreverDWINram(0x83,1);
  1420  00057A  0E00               	movlw	0
  1421  00057C  0100               	movlb	0	; () banked
  1422  00057E  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1423  000580  0E83               	movlw	131
  1424  000582  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1425  000584  0E00               	movlw	0
  1426  000586  0100               	movlb	0	; () banked
  1427  000588  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1428  00058A  0E01               	movlw	1
  1429  00058C  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1430  00058E  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1431  000592  D00D               	goto	l3112
  1432  000594                     l3110:
  1433                           
  1434                           ;main.c: 531: else
  1435                           ;main.c: 532: EscreverDWINram(0x83,0);
  1436  000594  0E00               	movlw	0
  1437  000596  0100               	movlb	0	; () banked
  1438  000598  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1439  00059A  0E83               	movlw	131
  1440  00059C  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1441  00059E  0E00               	movlw	0
  1442  0005A0  0100               	movlb	0	; () banked
  1443  0005A2  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1444  0005A4  0E00               	movlw	0
  1445  0005A6  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1446  0005A8  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1447  0005AC  D000               	goto	l3112
  1448  0005AE                     l3112:
  1449                           
  1450                           ;main.c: 533: if(( (Inputs2to9 & 4) ? (1) : (0) ))
  1451  0005AE  0100               	movlb	0	; () banked
  1452  0005B0  A5BE               	btfss	_Inputs2to9& (0+255),2,b
  1453  0005B2  D00D               	goto	l3116
  1454                           
  1455                           ; BSR set to: 0
  1456                           ;main.c: 534: EscreverDWINram(0x84,1);
  1457  0005B4  0E00               	movlw	0
  1458  0005B6  0100               	movlb	0	; () banked
  1459  0005B8  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1460  0005BA  0E84               	movlw	132
  1461  0005BC  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1462  0005BE  0E00               	movlw	0
  1463  0005C0  0100               	movlb	0	; () banked
  1464  0005C2  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1465  0005C4  0E01               	movlw	1
  1466  0005C6  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1467  0005C8  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1468  0005CC  D00D               	goto	l3118
  1469  0005CE                     l3116:
  1470                           
  1471                           ;main.c: 535: else
  1472                           ;main.c: 536: EscreverDWINram(0x84,0);
  1473  0005CE  0E00               	movlw	0
  1474  0005D0  0100               	movlb	0	; () banked
  1475  0005D2  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1476  0005D4  0E84               	movlw	132
  1477  0005D6  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1478  0005D8  0E00               	movlw	0
  1479  0005DA  0100               	movlb	0	; () banked
  1480  0005DC  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1481  0005DE  0E00               	movlw	0
  1482  0005E0  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1483  0005E2  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1484  0005E6  D000               	goto	l3118
  1485  0005E8                     l3118:
  1486                           
  1487                           ;main.c: 537: if(( (Inputs2to9 & 8) ? (1) : (0) ))
  1488  0005E8  0100               	movlb	0	; () banked
  1489  0005EA  A7BE               	btfss	_Inputs2to9& (0+255),3,b
  1490  0005EC  D00D               	goto	l3122
  1491                           
  1492                           ; BSR set to: 0
  1493                           ;main.c: 538: EscreverDWINram(0x85,1);
  1494  0005EE  0E00               	movlw	0
  1495  0005F0  0100               	movlb	0	; () banked
  1496  0005F2  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1497  0005F4  0E85               	movlw	133
  1498  0005F6  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1499  0005F8  0E00               	movlw	0
  1500  0005FA  0100               	movlb	0	; () banked
  1501  0005FC  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1502  0005FE  0E01               	movlw	1
  1503  000600  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1504  000602  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1505  000606  D00D               	goto	l3124
  1506  000608                     l3122:
  1507                           
  1508                           ;main.c: 539: else
  1509                           ;main.c: 540: EscreverDWINram(0x85,0);
  1510  000608  0E00               	movlw	0
  1511  00060A  0100               	movlb	0	; () banked
  1512  00060C  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1513  00060E  0E85               	movlw	133
  1514  000610  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1515  000612  0E00               	movlw	0
  1516  000614  0100               	movlb	0	; () banked
  1517  000616  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1518  000618  0E00               	movlw	0
  1519  00061A  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1520  00061C  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1521  000620  D000               	goto	l3124
  1522  000622                     l3124:
  1523                           
  1524                           ;main.c: 541: if(( (Inputs2to9 & 16) ? (1) : (0) ))
  1525  000622  0100               	movlb	0	; () banked
  1526  000624  A9BE               	btfss	_Inputs2to9& (0+255),4,b
  1527  000626  D00D               	goto	l3128
  1528                           
  1529                           ; BSR set to: 0
  1530                           ;main.c: 542: EscreverDWINram(0x86,1);
  1531  000628  0E00               	movlw	0
  1532  00062A  0100               	movlb	0	; () banked
  1533  00062C  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1534  00062E  0E86               	movlw	134
  1535  000630  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1536  000632  0E00               	movlw	0
  1537  000634  0100               	movlb	0	; () banked
  1538  000636  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1539  000638  0E01               	movlw	1
  1540  00063A  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1541  00063C  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1542  000640  D00D               	goto	l3130
  1543  000642                     l3128:
  1544                           
  1545                           ;main.c: 543: else
  1546                           ;main.c: 544: EscreverDWINram(0x86,0);
  1547  000642  0E00               	movlw	0
  1548  000644  0100               	movlb	0	; () banked
  1549  000646  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1550  000648  0E86               	movlw	134
  1551  00064A  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1552  00064C  0E00               	movlw	0
  1553  00064E  0100               	movlb	0	; () banked
  1554  000650  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1555  000652  0E00               	movlw	0
  1556  000654  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1557  000656  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1558  00065A  D000               	goto	l3130
  1559  00065C                     l3130:
  1560                           
  1561                           ;main.c: 545: if(( (Inputs2to9 & 32) ? (1) : (0) ))
  1562  00065C  0100               	movlb	0	; () banked
  1563  00065E  ABBE               	btfss	_Inputs2to9& (0+255),5,b
  1564  000660  D00D               	goto	l3134
  1565                           
  1566                           ; BSR set to: 0
  1567                           ;main.c: 546: EscreverDWINram(0x87,1);
  1568  000662  0E00               	movlw	0
  1569  000664  0100               	movlb	0	; () banked
  1570  000666  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1571  000668  0E87               	movlw	135
  1572  00066A  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1573  00066C  0E00               	movlw	0
  1574  00066E  0100               	movlb	0	; () banked
  1575  000670  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1576  000672  0E01               	movlw	1
  1577  000674  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1578  000676  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1579  00067A  D00D               	goto	l3136
  1580  00067C                     l3134:
  1581                           
  1582                           ;main.c: 547: else
  1583                           ;main.c: 548: EscreverDWINram(0x87,0);
  1584  00067C  0E00               	movlw	0
  1585  00067E  0100               	movlb	0	; () banked
  1586  000680  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1587  000682  0E87               	movlw	135
  1588  000684  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1589  000686  0E00               	movlw	0
  1590  000688  0100               	movlb	0	; () banked
  1591  00068A  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1592  00068C  0E00               	movlw	0
  1593  00068E  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1594  000690  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1595  000694  D000               	goto	l3136
  1596  000696                     l3136:
  1597                           
  1598                           ;main.c: 549: if(( (Inputs2to9 & 64) ? (1) : (0) ))
  1599  000696  0100               	movlb	0	; () banked
  1600  000698  ADBE               	btfss	_Inputs2to9& (0+255),6,b
  1601  00069A  D00D               	goto	l3140
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;main.c: 550: EscreverDWINram(0x88,1);
  1605  00069C  0E00               	movlw	0
  1606  00069E  0100               	movlb	0	; () banked
  1607  0006A0  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1608  0006A2  0E88               	movlw	136
  1609  0006A4  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1610  0006A6  0E00               	movlw	0
  1611  0006A8  0100               	movlb	0	; () banked
  1612  0006AA  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1613  0006AC  0E01               	movlw	1
  1614  0006AE  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1615  0006B0  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1616  0006B4  D00D               	goto	l3142
  1617  0006B6                     l3140:
  1618                           
  1619                           ;main.c: 551: else
  1620                           ;main.c: 552: EscreverDWINram(0x88,0);
  1621  0006B6  0E00               	movlw	0
  1622  0006B8  0100               	movlb	0	; () banked
  1623  0006BA  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1624  0006BC  0E88               	movlw	136
  1625  0006BE  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1626  0006C0  0E00               	movlw	0
  1627  0006C2  0100               	movlb	0	; () banked
  1628  0006C4  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1629  0006C6  0E00               	movlw	0
  1630  0006C8  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1631  0006CA  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1632  0006CE  D000               	goto	l3142
  1633  0006D0                     l3142:
  1634                           
  1635                           ;main.c: 553: if(( (Inputs2to9 & 128) ? (1) : (0) ))
  1636  0006D0  0100               	movlb	0	; () banked
  1637  0006D2  AFBE               	btfss	_Inputs2to9& (0+255),7,b
  1638  0006D4  D00D               	goto	l3146
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;main.c: 554: EscreverDWINram(0x89,1);
  1642  0006D6  0E00               	movlw	0
  1643  0006D8  0100               	movlb	0	; () banked
  1644  0006DA  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1645  0006DC  0E89               	movlw	137
  1646  0006DE  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1647  0006E0  0E00               	movlw	0
  1648  0006E2  0100               	movlb	0	; () banked
  1649  0006E4  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1650  0006E6  0E01               	movlw	1
  1651  0006E8  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1652  0006EA  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1653  0006EE  D00D               	goto	l3148
  1654  0006F0                     l3146:
  1655                           
  1656                           ;main.c: 555: else
  1657                           ;main.c: 556: EscreverDWINram(0x89,0);
  1658  0006F0  0E00               	movlw	0
  1659  0006F2  0100               	movlb	0	; () banked
  1660  0006F4  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1661  0006F6  0E89               	movlw	137
  1662  0006F8  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1663  0006FA  0E00               	movlw	0
  1664  0006FC  0100               	movlb	0	; () banked
  1665  0006FE  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1666  000700  0E00               	movlw	0
  1667  000702  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1668  000704  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1669  000708  D000               	goto	l3148
  1670  00070A                     l3148:
  1671                           
  1672                           ;main.c: 557: if(( (Inputs10to17 & 1) ? (1) : (0) ))
  1673  00070A  0100               	movlb	0	; () banked
  1674  00070C  A1BC               	btfss	_Inputs10to17& (0+255),0,b
  1675  00070E  D00D               	goto	l3152
  1676                           
  1677                           ; BSR set to: 0
  1678                           ;main.c: 558: EscreverDWINram(0x8A,1);
  1679  000710  0E00               	movlw	0
  1680  000712  0100               	movlb	0	; () banked
  1681  000714  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1682  000716  0E8A               	movlw	138
  1683  000718  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1684  00071A  0E00               	movlw	0
  1685  00071C  0100               	movlb	0	; () banked
  1686  00071E  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1687  000720  0E01               	movlw	1
  1688  000722  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1689  000724  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1690  000728  D00D               	goto	l3154
  1691  00072A                     l3152:
  1692                           
  1693                           ;main.c: 559: else
  1694                           ;main.c: 560: EscreverDWINram(0x8A,0);
  1695  00072A  0E00               	movlw	0
  1696  00072C  0100               	movlb	0	; () banked
  1697  00072E  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1698  000730  0E8A               	movlw	138
  1699  000732  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1700  000734  0E00               	movlw	0
  1701  000736  0100               	movlb	0	; () banked
  1702  000738  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1703  00073A  0E00               	movlw	0
  1704  00073C  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1705  00073E  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1706  000742  D000               	goto	l3154
  1707  000744                     l3154:
  1708                           
  1709                           ;main.c: 561: if(( (Inputs10to17 & 2) ? (1) : (0) ))
  1710  000744  0100               	movlb	0	; () banked
  1711  000746  A3BC               	btfss	_Inputs10to17& (0+255),1,b
  1712  000748  D00D               	goto	l3158
  1713                           
  1714                           ; BSR set to: 0
  1715                           ;main.c: 562: EscreverDWINram(0x8B,1);
  1716  00074A  0E00               	movlw	0
  1717  00074C  0100               	movlb	0	; () banked
  1718  00074E  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1719  000750  0E8B               	movlw	139
  1720  000752  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1721  000754  0E00               	movlw	0
  1722  000756  0100               	movlb	0	; () banked
  1723  000758  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1724  00075A  0E01               	movlw	1
  1725  00075C  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1726  00075E  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1727  000762  D00D               	goto	l3160
  1728  000764                     l3158:
  1729                           
  1730                           ;main.c: 563: else
  1731                           ;main.c: 564: EscreverDWINram(0x8B,0);
  1732  000764  0E00               	movlw	0
  1733  000766  0100               	movlb	0	; () banked
  1734  000768  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1735  00076A  0E8B               	movlw	139
  1736  00076C  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1737  00076E  0E00               	movlw	0
  1738  000770  0100               	movlb	0	; () banked
  1739  000772  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1740  000774  0E00               	movlw	0
  1741  000776  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1742  000778  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1743  00077C  D000               	goto	l3160
  1744  00077E                     l3160:
  1745                           
  1746                           ;main.c: 565: if(( (Inputs10to17 & 4) ? (1) : (0) ))
  1747  00077E  0100               	movlb	0	; () banked
  1748  000780  A5BC               	btfss	_Inputs10to17& (0+255),2,b
  1749  000782  D00D               	goto	l3164
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;main.c: 566: EscreverDWINram(0x8C,1);
  1753  000784  0E00               	movlw	0
  1754  000786  0100               	movlb	0	; () banked
  1755  000788  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1756  00078A  0E8C               	movlw	140
  1757  00078C  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1758  00078E  0E00               	movlw	0
  1759  000790  0100               	movlb	0	; () banked
  1760  000792  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1761  000794  0E01               	movlw	1
  1762  000796  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1763  000798  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1764  00079C  D00D               	goto	l3166
  1765  00079E                     l3164:
  1766                           
  1767                           ;main.c: 567: else
  1768                           ;main.c: 568: EscreverDWINram(0x8C,0);
  1769  00079E  0E00               	movlw	0
  1770  0007A0  0100               	movlb	0	; () banked
  1771  0007A2  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1772  0007A4  0E8C               	movlw	140
  1773  0007A6  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1774  0007A8  0E00               	movlw	0
  1775  0007AA  0100               	movlb	0	; () banked
  1776  0007AC  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1777  0007AE  0E00               	movlw	0
  1778  0007B0  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1779  0007B2  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1780  0007B6  D000               	goto	l3166
  1781  0007B8                     l3166:
  1782                           
  1783                           ;main.c: 569: if(( (Inputs10to17 & 8) ? (1) : (0) ))
  1784  0007B8  0100               	movlb	0	; () banked
  1785  0007BA  A7BC               	btfss	_Inputs10to17& (0+255),3,b
  1786  0007BC  D00D               	goto	l3170
  1787                           
  1788                           ; BSR set to: 0
  1789                           ;main.c: 570: EscreverDWINram(0x8D,1);
  1790  0007BE  0E00               	movlw	0
  1791  0007C0  0100               	movlb	0	; () banked
  1792  0007C2  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1793  0007C4  0E8D               	movlw	141
  1794  0007C6  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1795  0007C8  0E00               	movlw	0
  1796  0007CA  0100               	movlb	0	; () banked
  1797  0007CC  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1798  0007CE  0E01               	movlw	1
  1799  0007D0  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1800  0007D2  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1801  0007D6  D00D               	goto	l3172
  1802  0007D8                     l3170:
  1803                           
  1804                           ;main.c: 571: else
  1805                           ;main.c: 572: EscreverDWINram(0x8D,0);
  1806  0007D8  0E00               	movlw	0
  1807  0007DA  0100               	movlb	0	; () banked
  1808  0007DC  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1809  0007DE  0E8D               	movlw	141
  1810  0007E0  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1811  0007E2  0E00               	movlw	0
  1812  0007E4  0100               	movlb	0	; () banked
  1813  0007E6  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1814  0007E8  0E00               	movlw	0
  1815  0007EA  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1816  0007EC  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1817  0007F0  D000               	goto	l3172
  1818  0007F2                     l3172:
  1819                           
  1820                           ;main.c: 573: if(( (Inputs10to17 & 16) ? (1) : (0) ))
  1821  0007F2  0100               	movlb	0	; () banked
  1822  0007F4  A9BC               	btfss	_Inputs10to17& (0+255),4,b
  1823  0007F6  D00D               	goto	l3176
  1824                           
  1825                           ; BSR set to: 0
  1826                           ;main.c: 574: EscreverDWINram(0x8E,1);
  1827  0007F8  0E00               	movlw	0
  1828  0007FA  0100               	movlb	0	; () banked
  1829  0007FC  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1830  0007FE  0E8E               	movlw	142
  1831  000800  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1832  000802  0E00               	movlw	0
  1833  000804  0100               	movlb	0	; () banked
  1834  000806  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1835  000808  0E01               	movlw	1
  1836  00080A  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1837  00080C  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1838  000810  D00D               	goto	l3178
  1839  000812                     l3176:
  1840                           
  1841                           ;main.c: 575: else
  1842                           ;main.c: 576: EscreverDWINram(0x8E,0);
  1843  000812  0E00               	movlw	0
  1844  000814  0100               	movlb	0	; () banked
  1845  000816  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1846  000818  0E8E               	movlw	142
  1847  00081A  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1848  00081C  0E00               	movlw	0
  1849  00081E  0100               	movlb	0	; () banked
  1850  000820  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1851  000822  0E00               	movlw	0
  1852  000824  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1853  000826  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1854  00082A  D000               	goto	l3178
  1855  00082C                     l3178:
  1856                           
  1857                           ;main.c: 577: if(( (Inputs10to17 & 32) ? (1) : (0) ))
  1858  00082C  0100               	movlb	0	; () banked
  1859  00082E  ABBC               	btfss	_Inputs10to17& (0+255),5,b
  1860  000830  D00D               	goto	l3182
  1861                           
  1862                           ; BSR set to: 0
  1863                           ;main.c: 578: EscreverDWINram(0x8F,1);
  1864  000832  0E00               	movlw	0
  1865  000834  0100               	movlb	0	; () banked
  1866  000836  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1867  000838  0E8F               	movlw	143
  1868  00083A  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1869  00083C  0E00               	movlw	0
  1870  00083E  0100               	movlb	0	; () banked
  1871  000840  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1872  000842  0E01               	movlw	1
  1873  000844  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1874  000846  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1875  00084A  D00D               	goto	l3184
  1876  00084C                     l3182:
  1877                           
  1878                           ;main.c: 579: else
  1879                           ;main.c: 580: EscreverDWINram(0x8F,0);
  1880  00084C  0E00               	movlw	0
  1881  00084E  0100               	movlb	0	; () banked
  1882  000850  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1883  000852  0E8F               	movlw	143
  1884  000854  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1885  000856  0E00               	movlw	0
  1886  000858  0100               	movlb	0	; () banked
  1887  00085A  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1888  00085C  0E00               	movlw	0
  1889  00085E  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1890  000860  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1891  000864  D000               	goto	l3184
  1892  000866                     l3184:
  1893                           
  1894                           ;main.c: 581: if(( (Inputs10to17 & 64) ? (1) : (0) ))
  1895  000866  0100               	movlb	0	; () banked
  1896  000868  ADBC               	btfss	_Inputs10to17& (0+255),6,b
  1897  00086A  D00D               	goto	l3188
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;main.c: 582: EscreverDWINram(0x90,1);
  1901  00086C  0E00               	movlw	0
  1902  00086E  0100               	movlb	0	; () banked
  1903  000870  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1904  000872  0E90               	movlw	144
  1905  000874  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1906  000876  0E00               	movlw	0
  1907  000878  0100               	movlb	0	; () banked
  1908  00087A  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1909  00087C  0E01               	movlw	1
  1910  00087E  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1911  000880  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1912  000884  D00D               	goto	l3190
  1913  000886                     l3188:
  1914                           
  1915                           ;main.c: 583: else
  1916                           ;main.c: 584: EscreverDWINram(0x90,0);
  1917  000886  0E00               	movlw	0
  1918  000888  0100               	movlb	0	; () banked
  1919  00088A  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1920  00088C  0E90               	movlw	144
  1921  00088E  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1922  000890  0E00               	movlw	0
  1923  000892  0100               	movlb	0	; () banked
  1924  000894  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1925  000896  0E00               	movlw	0
  1926  000898  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1927  00089A  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1928  00089E  D000               	goto	l3190
  1929  0008A0                     l3190:
  1930                           
  1931                           ;main.c: 585: if(( (Inputs10to17 & 128) ? (1) : (0) ))
  1932  0008A0  0100               	movlb	0	; () banked
  1933  0008A2  AFBC               	btfss	_Inputs10to17& (0+255),7,b
  1934  0008A4  D00D               	goto	l3194
  1935                           
  1936                           ; BSR set to: 0
  1937                           ;main.c: 586: EscreverDWINram(0x91,1);
  1938  0008A6  0E00               	movlw	0
  1939  0008A8  0100               	movlb	0	; () banked
  1940  0008AA  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1941  0008AC  0E91               	movlw	145
  1942  0008AE  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1943  0008B0  0E00               	movlw	0
  1944  0008B2  0100               	movlb	0	; () banked
  1945  0008B4  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1946  0008B6  0E01               	movlw	1
  1947  0008B8  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1948  0008BA  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1949  0008BE  D00D               	goto	l3196
  1950  0008C0                     l3194:
  1951                           
  1952                           ;main.c: 587: else
  1953                           ;main.c: 588: EscreverDWINram(0x91,0);
  1954  0008C0  0E00               	movlw	0
  1955  0008C2  0100               	movlb	0	; () banked
  1956  0008C4  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1957  0008C6  0E91               	movlw	145
  1958  0008C8  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1959  0008CA  0E00               	movlw	0
  1960  0008CC  0100               	movlb	0	; () banked
  1961  0008CE  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1962  0008D0  0E00               	movlw	0
  1963  0008D2  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1964  0008D4  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1965  0008D8  D000               	goto	l3196
  1966  0008DA                     l3196:
  1967                           
  1968                           ;main.c: 589: if(( (Inputs18to25 & 1) ? (1) : (0) ))
  1969  0008DA  0100               	movlb	0	; () banked
  1970  0008DC  A1BD               	btfss	_Inputs18to25& (0+255),0,b
  1971  0008DE  D00D               	goto	l3200
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;main.c: 590: EscreverDWINram(0x92,1);
  1975  0008E0  0E00               	movlw	0
  1976  0008E2  0100               	movlb	0	; () banked
  1977  0008E4  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1978  0008E6  0E92               	movlw	146
  1979  0008E8  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1980  0008EA  0E00               	movlw	0
  1981  0008EC  0100               	movlb	0	; () banked
  1982  0008EE  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1983  0008F0  0E01               	movlw	1
  1984  0008F2  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  1985  0008F4  ECF0  F008         	call	_EscreverDWINram	;wreg free
  1986  0008F8  D00D               	goto	l3202
  1987  0008FA                     l3200:
  1988                           
  1989                           ;main.c: 591: else
  1990                           ;main.c: 592: EscreverDWINram(0x92,0);
  1991  0008FA  0E00               	movlw	0
  1992  0008FC  0100               	movlb	0	; () banked
  1993  0008FE  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  1994  000900  0E92               	movlw	146
  1995  000902  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  1996  000904  0E00               	movlw	0
  1997  000906  0100               	movlb	0	; () banked
  1998  000908  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  1999  00090A  0E00               	movlw	0
  2000  00090C  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  2001  00090E  ECF0  F008         	call	_EscreverDWINram	;wreg free
  2002  000912  D000               	goto	l3202
  2003  000914                     l3202:
  2004                           
  2005                           ;main.c: 593: if(( (Inputs18to25 & 2) ? (1) : (0) ))
  2006  000914  0100               	movlb	0	; () banked
  2007  000916  A3BD               	btfss	_Inputs18to25& (0+255),1,b
  2008  000918  D00D               	goto	l3206
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;main.c: 594: EscreverDWINram(0x93,1);
  2012  00091A  0E00               	movlw	0
  2013  00091C  0100               	movlb	0	; () banked
  2014  00091E  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  2015  000920  0E93               	movlw	147
  2016  000922  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  2017  000924  0E00               	movlw	0
  2018  000926  0100               	movlb	0	; () banked
  2019  000928  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  2020  00092A  0E01               	movlw	1
  2021  00092C  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  2022  00092E  ECF0  F008         	call	_EscreverDWINram	;wreg free
  2023  000932  D00D               	goto	l3208
  2024  000934                     l3206:
  2025                           
  2026                           ;main.c: 595: else
  2027                           ;main.c: 596: EscreverDWINram(0x93,0);
  2028  000934  0E00               	movlw	0
  2029  000936  0100               	movlb	0	; () banked
  2030  000938  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  2031  00093A  0E93               	movlw	147
  2032  00093C  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  2033  00093E  0E00               	movlw	0
  2034  000940  0100               	movlb	0	; () banked
  2035  000942  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  2036  000944  0E00               	movlw	0
  2037  000946  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  2038  000948  ECF0  F008         	call	_EscreverDWINram	;wreg free
  2039  00094C  D000               	goto	l3208
  2040  00094E                     l3208:
  2041                           
  2042                           ;main.c: 597: if(( (Inputs18to25 & 4) ? (1) : (0) ))
  2043  00094E  0100               	movlb	0	; () banked
  2044  000950  A5BD               	btfss	_Inputs18to25& (0+255),2,b
  2045  000952  D00D               	goto	l3212
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;main.c: 598: EscreverDWINram(0x94,1);
  2049  000954  0E00               	movlw	0
  2050  000956  0100               	movlb	0	; () banked
  2051  000958  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  2052  00095A  0E94               	movlw	148
  2053  00095C  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  2054  00095E  0E00               	movlw	0
  2055  000960  0100               	movlb	0	; () banked
  2056  000962  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  2057  000964  0E01               	movlw	1
  2058  000966  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  2059  000968  ECF0  F008         	call	_EscreverDWINram	;wreg free
  2060  00096C  D00D               	goto	l3214
  2061  00096E                     l3212:
  2062                           
  2063                           ;main.c: 599: else
  2064                           ;main.c: 600: EscreverDWINram(0x94,0);
  2065  00096E  0E00               	movlw	0
  2066  000970  0100               	movlb	0	; () banked
  2067  000972  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  2068  000974  0E94               	movlw	148
  2069  000976  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  2070  000978  0E00               	movlw	0
  2071  00097A  0100               	movlb	0	; () banked
  2072  00097C  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  2073  00097E  0E00               	movlw	0
  2074  000980  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  2075  000982  ECF0  F008         	call	_EscreverDWINram	;wreg free
  2076  000986  D000               	goto	l3214
  2077  000988                     l3214:
  2078                           
  2079                           ;main.c: 601: if(( (Inputs18to25 & 8) ? (1) : (0) ))
  2080  000988  0100               	movlb	0	; () banked
  2081  00098A  A7BD               	btfss	_Inputs18to25& (0+255),3,b
  2082  00098C  D00D               	goto	l3218
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;main.c: 602: EscreverDWINram(0x95,1);
  2086  00098E  0E00               	movlw	0
  2087  000990  0100               	movlb	0	; () banked
  2088  000992  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  2089  000994  0E95               	movlw	149
  2090  000996  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  2091  000998  0E00               	movlw	0
  2092  00099A  0100               	movlb	0	; () banked
  2093  00099C  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  2094  00099E  0E01               	movlw	1
  2095  0009A0  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  2096  0009A2  ECF0  F008         	call	_EscreverDWINram	;wreg free
  2097  0009A6  D00D               	goto	l3220
  2098  0009A8                     l3218:
  2099                           
  2100                           ;main.c: 603: else
  2101                           ;main.c: 604: EscreverDWINram(0x95,0);
  2102  0009A8  0E00               	movlw	0
  2103  0009AA  0100               	movlb	0	; () banked
  2104  0009AC  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  2105  0009AE  0E95               	movlw	149
  2106  0009B0  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  2107  0009B2  0E00               	movlw	0
  2108  0009B4  0100               	movlb	0	; () banked
  2109  0009B6  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  2110  0009B8  0E00               	movlw	0
  2111  0009BA  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  2112  0009BC  ECF0  F008         	call	_EscreverDWINram	;wreg free
  2113  0009C0  D000               	goto	l3220
  2114  0009C2                     l3220:
  2115                           
  2116                           ;main.c: 605: if(( (Inputs18to25 & 16) ? (1) : (0) ))
  2117  0009C2  0100               	movlb	0	; () banked
  2118  0009C4  A9BD               	btfss	_Inputs18to25& (0+255),4,b
  2119  0009C6  D00D               	goto	l3224
  2120                           
  2121                           ; BSR set to: 0
  2122                           ;main.c: 606: EscreverDWINram(0x96,1);
  2123  0009C8  0E00               	movlw	0
  2124  0009CA  0100               	movlb	0	; () banked
  2125  0009CC  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  2126  0009CE  0E96               	movlw	150
  2127  0009D0  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  2128  0009D2  0E00               	movlw	0
  2129  0009D4  0100               	movlb	0	; () banked
  2130  0009D6  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  2131  0009D8  0E01               	movlw	1
  2132  0009DA  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  2133  0009DC  ECF0  F008         	call	_EscreverDWINram	;wreg free
  2134  0009E0  D00D               	goto	l3226
  2135  0009E2                     l3224:
  2136                           
  2137                           ;main.c: 607: else
  2138                           ;main.c: 608: EscreverDWINram(0x96,0);
  2139  0009E2  0E00               	movlw	0
  2140  0009E4  0100               	movlb	0	; () banked
  2141  0009E6  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  2142  0009E8  0E96               	movlw	150
  2143  0009EA  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  2144  0009EC  0E00               	movlw	0
  2145  0009EE  0100               	movlb	0	; () banked
  2146  0009F0  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  2147  0009F2  0E00               	movlw	0
  2148  0009F4  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  2149  0009F6  ECF0  F008         	call	_EscreverDWINram	;wreg free
  2150  0009FA  D000               	goto	l3226
  2151  0009FC                     l3226:
  2152                           
  2153                           ;main.c: 609: if(( (Inputs18to25 & 32) ? (1) : (0) ))
  2154  0009FC  0100               	movlb	0	; () banked
  2155  0009FE  ABBD               	btfss	_Inputs18to25& (0+255),5,b
  2156  000A00  D00D               	goto	l3230
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;main.c: 610: EscreverDWINram(0x97,1);
  2160  000A02  0E00               	movlw	0
  2161  000A04  0100               	movlb	0	; () banked
  2162  000A06  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  2163  000A08  0E97               	movlw	151
  2164  000A0A  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  2165  000A0C  0E00               	movlw	0
  2166  000A0E  0100               	movlb	0	; () banked
  2167  000A10  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  2168  000A12  0E01               	movlw	1
  2169  000A14  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  2170  000A16  ECF0  F008         	call	_EscreverDWINram	;wreg free
  2171  000A1A  D00D               	goto	l3232
  2172  000A1C                     l3230:
  2173                           
  2174                           ;main.c: 611: else
  2175                           ;main.c: 612: EscreverDWINram(0x97,0);
  2176  000A1C  0E00               	movlw	0
  2177  000A1E  0100               	movlb	0	; () banked
  2178  000A20  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  2179  000A22  0E97               	movlw	151
  2180  000A24  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  2181  000A26  0E00               	movlw	0
  2182  000A28  0100               	movlb	0	; () banked
  2183  000A2A  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  2184  000A2C  0E00               	movlw	0
  2185  000A2E  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  2186  000A30  ECF0  F008         	call	_EscreverDWINram	;wreg free
  2187  000A34  D000               	goto	l3232
  2188  000A36                     l3232:
  2189                           
  2190                           ;main.c: 613: if(( (Inputs18to25 & 64) ? (1) : (0) ))
  2191  000A36  0100               	movlb	0	; () banked
  2192  000A38  ADBD               	btfss	_Inputs18to25& (0+255),6,b
  2193  000A3A  D00D               	goto	l3236
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;main.c: 614: EscreverDWINram(0x98,1);
  2197  000A3C  0E00               	movlw	0
  2198  000A3E  0100               	movlb	0	; () banked
  2199  000A40  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  2200  000A42  0E98               	movlw	152
  2201  000A44  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  2202  000A46  0E00               	movlw	0
  2203  000A48  0100               	movlb	0	; () banked
  2204  000A4A  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  2205  000A4C  0E01               	movlw	1
  2206  000A4E  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  2207  000A50  ECF0  F008         	call	_EscreverDWINram	;wreg free
  2208  000A54  D00D               	goto	l3238
  2209  000A56                     l3236:
  2210                           
  2211                           ;main.c: 615: else
  2212                           ;main.c: 616: EscreverDWINram(0x98,0);
  2213  000A56  0E00               	movlw	0
  2214  000A58  0100               	movlb	0	; () banked
  2215  000A5A  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  2216  000A5C  0E98               	movlw	152
  2217  000A5E  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  2218  000A60  0E00               	movlw	0
  2219  000A62  0100               	movlb	0	; () banked
  2220  000A64  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  2221  000A66  0E00               	movlw	0
  2222  000A68  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  2223  000A6A  ECF0  F008         	call	_EscreverDWINram	;wreg free
  2224  000A6E  D000               	goto	l3238
  2225  000A70                     l3238:
  2226                           
  2227                           ;main.c: 617: if(( (Inputs18to25 & 128) ? (1) : (0) ))
  2228  000A70  0100               	movlb	0	; () banked
  2229  000A72  AFBD               	btfss	_Inputs18to25& (0+255),7,b
  2230  000A74  D00D               	goto	l3242
  2231                           
  2232                           ; BSR set to: 0
  2233                           ;main.c: 618: EscreverDWINram(0x99,1);
  2234  000A76  0E00               	movlw	0
  2235  000A78  0100               	movlb	0	; () banked
  2236  000A7A  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  2237  000A7C  0E99               	movlw	153
  2238  000A7E  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  2239  000A80  0E00               	movlw	0
  2240  000A82  0100               	movlb	0	; () banked
  2241  000A84  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  2242  000A86  0E01               	movlw	1
  2243  000A88  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  2244  000A8A  ECF0  F008         	call	_EscreverDWINram	;wreg free
  2245  000A8E  D00C               	goto	l272
  2246  000A90                     l3242:
  2247                           
  2248                           ;main.c: 619: else
  2249                           ;main.c: 620: EscreverDWINram(0x99,0);
  2250  000A90  0E00               	movlw	0
  2251  000A92  0100               	movlb	0	; () banked
  2252  000A94  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  2253  000A96  0E99               	movlw	153
  2254  000A98  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  2255  000A9A  0E00               	movlw	0
  2256  000A9C  0100               	movlb	0	; () banked
  2257  000A9E  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  2258  000AA0  0E00               	movlw	0
  2259  000AA2  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  2260  000AA4  ECF0  F008         	call	_EscreverDWINram	;wreg free
  2261  000AA8                     l272:
  2262                           
  2263                           ;main.c: 622: temp = LerDWINram(0x001A);
  2264  000AA8  0E00               	movlw	0
  2265  000AAA  0100               	movlb	0	; () banked
  2266  000AAC  6FD0               	movwf	(LerDWINram@endereco+1)& (0+255),b
  2267  000AAE  0E1A               	movlw	26
  2268  000AB0  6FCF               	movwf	LerDWINram@endereco& (0+255),b
  2269  000AB2  EC5A  F008         	call	_LerDWINram	;wreg free
  2270  000AB6  C0CF  F0E4         	movff	?_LerDWINram,main@temp
  2271  000ABA  C0D0  F0E5         	movff	?_LerDWINram+1,main@temp+1
  2272                           
  2273                           ;main.c: 623: imagem = LerDWINram(0x001B);
  2274  000ABE  0E00               	movlw	0
  2275  000AC0  0100               	movlb	0	; () banked
  2276  000AC2  6FD0               	movwf	(LerDWINram@endereco+1)& (0+255),b
  2277  000AC4  0E1B               	movlw	27
  2278  000AC6  6FCF               	movwf	LerDWINram@endereco& (0+255),b
  2279  000AC8  EC5A  F008         	call	_LerDWINram	;wreg free
  2280  000ACC  C0CF  F0E2         	movff	?_LerDWINram,main@imagem
  2281  000AD0  C0D0  F0E3         	movff	?_LerDWINram+1,main@imagem+1
  2282                           
  2283                           ;main.c: 624: switch(temp){
  2284  000AD4  D034               	goto	l3278
  2285  000AD6                     l274:
  2286                           
  2287                           ; BSR set to: 0
  2288  000AD6  7444               	btg	_OUT0/(0+8),_OUT0& (0+7),c
  2289  000AD8  D069               	goto	l3280
  2290  000ADA                     l276:
  2291                           
  2292                           ; BSR set to: 0
  2293  000ADA  7644               	btg	_OUT1/(0+8),_OUT1& (0+7),c
  2294  000ADC  D067               	goto	l3280
  2295  000ADE                     l277:
  2296                           
  2297                           ; BSR set to: 0
  2298  000ADE  A026               	btfss	_Outputs2to9,0,c
  2299  000AE0  D002               	goto	l3246
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;main.c: 628: Outputs2to9 &= 0xFE;
  2303  000AE2  9026               	bcf	_Outputs2to9,0,c
  2304  000AE4  D063               	goto	l3280
  2305  000AE6                     l3246:
  2306                           
  2307                           ; BSR set to: 0
  2308                           ;main.c: 629: else
  2309                           ;main.c: 630: Outputs2to9 |= 1;
  2310  000AE6  8026               	bsf	_Outputs2to9,0,c
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;main.c: 631: break;
  2314  000AE8  D061               	goto	l3280
  2315  000AEA                     l280:
  2316                           
  2317                           ; BSR set to: 0
  2318  000AEA  A226               	btfss	_Outputs2to9,1,c
  2319  000AEC  D002               	goto	l3250
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;main.c: 633: Outputs2to9 &= 0xFD;
  2323  000AEE  9226               	bcf	_Outputs2to9,1,c
  2324  000AF0  D05D               	goto	l3280
  2325  000AF2                     l3250:
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;main.c: 634: else
  2329                           ;main.c: 635: Outputs2to9 |= 2;
  2330  000AF2  8226               	bsf	_Outputs2to9,1,c
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;main.c: 636: break;
  2334  000AF4  D05B               	goto	l3280
  2335  000AF6                     l283:
  2336                           
  2337                           ; BSR set to: 0
  2338  000AF6  A426               	btfss	_Outputs2to9,2,c
  2339  000AF8  D002               	goto	l3254
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;main.c: 638: Outputs2to9 &= 0xFB;
  2343  000AFA  9426               	bcf	_Outputs2to9,2,c
  2344  000AFC  D057               	goto	l3280
  2345  000AFE                     l3254:
  2346                           
  2347                           ; BSR set to: 0
  2348                           ;main.c: 639: else
  2349                           ;main.c: 640: Outputs2to9 |= 4;
  2350  000AFE  8426               	bsf	_Outputs2to9,2,c
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;main.c: 641: break;
  2354  000B00  D055               	goto	l3280
  2355  000B02                     l286:
  2356                           
  2357                           ; BSR set to: 0
  2358  000B02  A626               	btfss	_Outputs2to9,3,c
  2359  000B04  D002               	goto	l3258
  2360                           
  2361                           ; BSR set to: 0
  2362                           ;main.c: 643: Outputs2to9 &= 0xF7;
  2363  000B06  9626               	bcf	_Outputs2to9,3,c
  2364  000B08  D051               	goto	l3280
  2365  000B0A                     l3258:
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;main.c: 644: else
  2369                           ;main.c: 645: Outputs2to9 |= 8;
  2370  000B0A  8626               	bsf	_Outputs2to9,3,c
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;main.c: 646: break;
  2374  000B0C  D04F               	goto	l3280
  2375  000B0E                     l289:
  2376                           
  2377                           ; BSR set to: 0
  2378  000B0E  A826               	btfss	_Outputs2to9,4,c
  2379  000B10  D002               	goto	l3262
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;main.c: 648: Outputs2to9 &= 0xEF;
  2383  000B12  9826               	bcf	_Outputs2to9,4,c
  2384  000B14  D04B               	goto	l3280
  2385  000B16                     l3262:
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;main.c: 649: else
  2389                           ;main.c: 650: Outputs2to9 |= 16;
  2390  000B16  8826               	bsf	_Outputs2to9,4,c
  2391                           
  2392                           ; BSR set to: 0
  2393                           ;main.c: 651: break;
  2394  000B18  D049               	goto	l3280
  2395  000B1A                     l292:
  2396                           
  2397                           ; BSR set to: 0
  2398  000B1A  AA26               	btfss	_Outputs2to9,5,c
  2399  000B1C  D002               	goto	l3266
  2400                           
  2401                           ; BSR set to: 0
  2402                           ;main.c: 653: Outputs2to9 &= 0xDF;
  2403  000B1E  9A26               	bcf	_Outputs2to9,5,c
  2404  000B20  D045               	goto	l3280
  2405  000B22                     l3266:
  2406                           
  2407                           ; BSR set to: 0
  2408                           ;main.c: 654: else
  2409                           ;main.c: 655: Outputs2to9 |= 32;
  2410  000B22  8A26               	bsf	_Outputs2to9,5,c
  2411                           
  2412                           ; BSR set to: 0
  2413                           ;main.c: 656: break;
  2414  000B24  D043               	goto	l3280
  2415  000B26                     l295:
  2416                           
  2417                           ; BSR set to: 0
  2418  000B26  AC26               	btfss	_Outputs2to9,6,c
  2419  000B28  D002               	goto	l3270
  2420                           
  2421                           ; BSR set to: 0
  2422                           ;main.c: 658: Outputs2to9 &= 0xBF;
  2423  000B2A  9C26               	bcf	_Outputs2to9,6,c
  2424  000B2C  D03F               	goto	l3280
  2425  000B2E                     l3270:
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;main.c: 659: else
  2429                           ;main.c: 660: Outputs2to9 |= 64;
  2430  000B2E  8C26               	bsf	_Outputs2to9,6,c
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;main.c: 661: break;
  2434  000B30  D03D               	goto	l3280
  2435  000B32                     l298:
  2436                           
  2437                           ; BSR set to: 0
  2438  000B32  AE26               	btfss	_Outputs2to9,7,c
  2439  000B34  D002               	goto	l3274
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;main.c: 663: Outputs2to9 &= 0x7F;
  2443  000B36  9E26               	bcf	_Outputs2to9,7,c
  2444  000B38  D039               	goto	l3280
  2445  000B3A                     l3274:
  2446                           
  2447                           ; BSR set to: 0
  2448                           ;main.c: 664: else
  2449                           ;main.c: 665: Outputs2to9 |= 128;
  2450  000B3A  8E26               	bsf	_Outputs2to9,7,c
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;main.c: 668: }
  2454                           
  2455                           ; BSR set to: 0
  2456                           
  2457                           ;main.c: 667: default: break;
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;main.c: 666: break;
  2461  000B3C  D037               	goto	l3280
  2462  000B3E                     l3278:
  2463  000B3E  C0E4  F0DC         	movff	main@temp,??_main
  2464  000B42  C0E5  F0DD         	movff	main@temp+1,??_main+1
  2465                           
  2466                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  2467                           ; Switch size 1, requested type "space"
  2468                           ; Number of cases is 3, Range of values is 0 to 2
  2469                           ; switch strategies available:
  2470                           ; Name         Instructions Cycles
  2471                           ; simple_byte           10     6 (average)
  2472                           ;	Chosen strategy is simple_byte
  2473  000B46  0100               	movlb	0	; () banked
  2474  000B48  51DD               	movf	(??_main+1)& (0+255),w,b
  2475  000B4A  0A00               	xorlw	0	; case 0
  2476  000B4C  B4D8               	btfsc	status,2,c
  2477  000B4E  D007               	goto	l3504
  2478  000B50  0A01               	xorlw	1	; case 1
  2479  000B52  B4D8               	btfsc	status,2,c
  2480  000B54  D01F               	goto	l3506
  2481  000B56  0A03               	xorlw	3	; case 2
  2482  000B58  B4D8               	btfsc	status,2,c
  2483  000B5A  D022               	goto	l3508
  2484  000B5C  D027               	goto	l3280
  2485  000B5E                     l3504:
  2486                           
  2487                           ; BSR set to: 0
  2488                           ; Switch size 1, requested type "space"
  2489                           ; Number of cases is 8, Range of values is 1 to 128
  2490                           ; switch strategies available:
  2491                           ; Name         Instructions Cycles
  2492                           ; simple_byte           25    13 (average)
  2493                           ;	Chosen strategy is simple_byte
  2494  000B5E  0100               	movlb	0	; () banked
  2495  000B60  51DC               	movf	??_main& (0+255),w,b
  2496  000B62  0A01               	xorlw	1	; case 1
  2497  000B64  B4D8               	btfsc	status,2,c
  2498  000B66  D7B7               	goto	l274
  2499  000B68  0A03               	xorlw	3	; case 2
  2500  000B6A  B4D8               	btfsc	status,2,c
  2501  000B6C  D7B6               	goto	l276
  2502  000B6E  0A06               	xorlw	6	; case 4
  2503  000B70  B4D8               	btfsc	status,2,c
  2504  000B72  D7B5               	goto	l277
  2505  000B74  0A0C               	xorlw	12	; case 8
  2506  000B76  B4D8               	btfsc	status,2,c
  2507  000B78  D7B8               	goto	l280
  2508  000B7A  0A18               	xorlw	24	; case 16
  2509  000B7C  B4D8               	btfsc	status,2,c
  2510  000B7E  D7BB               	goto	l283
  2511  000B80  0A30               	xorlw	48	; case 32
  2512  000B82  B4D8               	btfsc	status,2,c
  2513  000B84  D7BE               	goto	l286
  2514  000B86  0A60               	xorlw	96	; case 64
  2515  000B88  B4D8               	btfsc	status,2,c
  2516  000B8A  D7C1               	goto	l289
  2517  000B8C  0AC0               	xorlw	192	; case 128
  2518  000B8E  B4D8               	btfsc	status,2,c
  2519  000B90  D7C4               	goto	l292
  2520  000B92  D00C               	goto	l3280
  2521  000B94                     l3506:
  2522                           
  2523                           ; BSR set to: 0
  2524                           ; Switch size 1, requested type "space"
  2525                           ; Number of cases is 1, Range of values is 0 to 0
  2526                           ; switch strategies available:
  2527                           ; Name         Instructions Cycles
  2528                           ; simple_byte            4     3 (average)
  2529                           ;	Chosen strategy is simple_byte
  2530  000B94  0100               	movlb	0	; () banked
  2531  000B96  51DC               	movf	??_main& (0+255),w,b
  2532  000B98  0A00               	xorlw	0	; case 0
  2533  000B9A  B4D8               	btfsc	status,2,c
  2534  000B9C  D7C4               	goto	l295
  2535  000B9E  D006               	goto	l3280
  2536  000BA0                     l3508:
  2537                           
  2538                           ; BSR set to: 0
  2539                           ; Switch size 1, requested type "space"
  2540                           ; Number of cases is 1, Range of values is 0 to 0
  2541                           ; switch strategies available:
  2542                           ; Name         Instructions Cycles
  2543                           ; simple_byte            4     3 (average)
  2544                           ;	Chosen strategy is simple_byte
  2545  000BA0  0100               	movlb	0	; () banked
  2546  000BA2  51DC               	movf	??_main& (0+255),w,b
  2547  000BA4  0A00               	xorlw	0	; case 0
  2548  000BA6  B4D8               	btfsc	status,2,c
  2549  000BA8  D7C4               	goto	l298
  2550  000BAA  D000               	goto	l3280
  2551  000BAC                     l3280:
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;main.c: 669: if(temp > 0){
  2555  000BAC  0100               	movlb	0	; () banked
  2556  000BAE  51E4               	movf	main@temp& (0+255),w,b
  2557  000BB0  0100               	movlb	0	; () banked
  2558  000BB2  11E5               	iorwf	(main@temp+1)& (0+255),w,b
  2559  000BB4  B4D8               	btfsc	status,2,c
  2560  000BB6  D03F               	goto	l3318
  2561                           
  2562                           ; BSR set to: 0
  2563                           ;main.c: 670: EscreverDWINram(0x1A,0);
  2564  000BB8  0E00               	movlw	0
  2565  000BBA  0100               	movlb	0	; () banked
  2566  000BBC  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  2567  000BBE  0E1A               	movlw	26
  2568  000BC0  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  2569  000BC2  0E00               	movlw	0
  2570  000BC4  0100               	movlb	0	; () banked
  2571  000BC6  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  2572  000BC8  0E00               	movlw	0
  2573  000BCA  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  2574  000BCC  ECF0  F008         	call	_EscreverDWINram	;wreg free
  2575                           
  2576                           ;main.c: 671: }
  2577                           ;main.c: 673: switch(imagem){
  2578  000BD0  D032               	goto	l3318
  2579  000BD2                     l304:
  2580                           
  2581                           ; BSR set to: 0
  2582  000BD2  A025               	btfss	_Outputs10to17,0,c
  2583  000BD4  D002               	goto	l3286
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;main.c: 675: Outputs10to17 &= 0xFE;
  2587  000BD6  9025               	bcf	_Outputs10to17,0,c
  2588  000BD8  D05C               	goto	l3320
  2589  000BDA                     l3286:
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;main.c: 676: else
  2593                           ;main.c: 677: Outputs10to17 |= 1;
  2594  000BDA  8025               	bsf	_Outputs10to17,0,c
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;main.c: 678: break;
  2598  000BDC  D05A               	goto	l3320
  2599  000BDE                     l308:
  2600                           
  2601                           ; BSR set to: 0
  2602  000BDE  A225               	btfss	_Outputs10to17,1,c
  2603  000BE0  D002               	goto	l3290
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;main.c: 680: Outputs10to17 &= 0xFD;
  2607  000BE2  9225               	bcf	_Outputs10to17,1,c
  2608  000BE4  D056               	goto	l3320
  2609  000BE6                     l3290:
  2610                           
  2611                           ; BSR set to: 0
  2612                           ;main.c: 681: else
  2613                           ;main.c: 682: Outputs10to17 |= 2;
  2614  000BE6  8225               	bsf	_Outputs10to17,1,c
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;main.c: 683: break;
  2618  000BE8  D054               	goto	l3320
  2619  000BEA                     l311:
  2620                           
  2621                           ; BSR set to: 0
  2622  000BEA  A425               	btfss	_Outputs10to17,2,c
  2623  000BEC  D002               	goto	l3294
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;main.c: 685: Outputs10to17 &= 0xFB;
  2627  000BEE  9425               	bcf	_Outputs10to17,2,c
  2628  000BF0  D050               	goto	l3320
  2629  000BF2                     l3294:
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;main.c: 686: else
  2633                           ;main.c: 687: Outputs10to17 |= 4;
  2634  000BF2  8425               	bsf	_Outputs10to17,2,c
  2635                           
  2636                           ; BSR set to: 0
  2637                           ;main.c: 688: break;
  2638  000BF4  D04E               	goto	l3320
  2639  000BF6                     l314:
  2640                           
  2641                           ; BSR set to: 0
  2642  000BF6  A625               	btfss	_Outputs10to17,3,c
  2643  000BF8  D002               	goto	l3298
  2644                           
  2645                           ; BSR set to: 0
  2646                           ;main.c: 690: Outputs10to17 &= 0xF7;
  2647  000BFA  9625               	bcf	_Outputs10to17,3,c
  2648  000BFC  D04A               	goto	l3320
  2649  000BFE                     l3298:
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;main.c: 691: else
  2653                           ;main.c: 692: Outputs10to17 |= 8;
  2654  000BFE  8625               	bsf	_Outputs10to17,3,c
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;main.c: 693: break;
  2658  000C00  D048               	goto	l3320
  2659  000C02                     l317:
  2660                           
  2661                           ; BSR set to: 0
  2662  000C02  A825               	btfss	_Outputs10to17,4,c
  2663  000C04  D002               	goto	l3302
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;main.c: 695: Outputs10to17 &= 0xEF;
  2667  000C06  9825               	bcf	_Outputs10to17,4,c
  2668  000C08  D044               	goto	l3320
  2669  000C0A                     l3302:
  2670                           
  2671                           ; BSR set to: 0
  2672                           ;main.c: 696: else
  2673                           ;main.c: 697: Outputs10to17 |= 16;
  2674  000C0A  8825               	bsf	_Outputs10to17,4,c
  2675                           
  2676                           ; BSR set to: 0
  2677                           ;main.c: 698: break;
  2678  000C0C  D042               	goto	l3320
  2679  000C0E                     l320:
  2680                           
  2681                           ; BSR set to: 0
  2682  000C0E  AA25               	btfss	_Outputs10to17,5,c
  2683  000C10  D002               	goto	l3306
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;main.c: 700: Outputs10to17 &= 0xDF;
  2687  000C12  9A25               	bcf	_Outputs10to17,5,c
  2688  000C14  D03E               	goto	l3320
  2689  000C16                     l3306:
  2690                           
  2691                           ; BSR set to: 0
  2692                           ;main.c: 701: else
  2693                           ;main.c: 702: Outputs10to17 |= 32;
  2694  000C16  8A25               	bsf	_Outputs10to17,5,c
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;main.c: 703: break;
  2698  000C18  D03C               	goto	l3320
  2699  000C1A                     l323:
  2700                           
  2701                           ; BSR set to: 0
  2702  000C1A  AC25               	btfss	_Outputs10to17,6,c
  2703  000C1C  D002               	goto	l3310
  2704                           
  2705                           ; BSR set to: 0
  2706                           ;main.c: 705: Outputs10to17 &= 0xBF;
  2707  000C1E  9C25               	bcf	_Outputs10to17,6,c
  2708  000C20  D038               	goto	l3320
  2709  000C22                     l3310:
  2710                           
  2711                           ; BSR set to: 0
  2712                           ;main.c: 706: else
  2713                           ;main.c: 707: Outputs10to17 |= 64;
  2714  000C22  8C25               	bsf	_Outputs10to17,6,c
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;main.c: 708: break;
  2718  000C24  D036               	goto	l3320
  2719  000C26                     l326:
  2720                           
  2721                           ; BSR set to: 0
  2722  000C26  AE25               	btfss	_Outputs10to17,7,c
  2723  000C28  D002               	goto	l3314
  2724                           
  2725                           ; BSR set to: 0
  2726                           ;main.c: 710: Outputs10to17 &= 0x7F;
  2727  000C2A  9E25               	bcf	_Outputs10to17,7,c
  2728  000C2C  D032               	goto	l3320
  2729  000C2E                     l3314:
  2730                           
  2731                           ; BSR set to: 0
  2732                           ;main.c: 711: else
  2733                           ;main.c: 712: Outputs10to17 |= 128;
  2734  000C2E  8E25               	bsf	_Outputs10to17,7,c
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;main.c: 713: break;
  2738  000C30  D030               	goto	l3320
  2739  000C32                     l329:
  2740                           
  2741                           ; BSR set to: 0
  2742  000C32  7A81               	btg	3969,5,c	;volatile
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;main.c: 717: }
  2746                           
  2747                           ; BSR set to: 0
  2748                           
  2749                           ;main.c: 716: default: break;
  2750                           
  2751                           ;main.c: 715: break;
  2752  000C34  D02E               	goto	l3320
  2753  000C36                     l3318:
  2754  000C36  C0E2  F0DC         	movff	main@imagem,??_main
  2755  000C3A  C0E3  F0DD         	movff	main@imagem+1,??_main+1
  2756                           
  2757                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  2758                           ; Switch size 1, requested type "space"
  2759                           ; Number of cases is 2, Range of values is 0 to 1
  2760                           ; switch strategies available:
  2761                           ; Name         Instructions Cycles
  2762                           ; simple_byte            7     4 (average)
  2763                           ;	Chosen strategy is simple_byte
  2764  000C3E  0100               	movlb	0	; () banked
  2765  000C40  51DD               	movf	(??_main+1)& (0+255),w,b
  2766  000C42  0A00               	xorlw	0	; case 0
  2767  000C44  B4D8               	btfsc	status,2,c
  2768  000C46  D004               	goto	l3510
  2769  000C48  0A01               	xorlw	1	; case 1
  2770  000C4A  B4D8               	btfsc	status,2,c
  2771  000C4C  D01C               	goto	l3512
  2772  000C4E  D021               	goto	l3320
  2773  000C50                     l3510:
  2774                           
  2775                           ; BSR set to: 0
  2776                           ; Switch size 1, requested type "space"
  2777                           ; Number of cases is 8, Range of values is 1 to 128
  2778                           ; switch strategies available:
  2779                           ; Name         Instructions Cycles
  2780                           ; simple_byte           25    13 (average)
  2781                           ;	Chosen strategy is simple_byte
  2782  000C50  0100               	movlb	0	; () banked
  2783  000C52  51DC               	movf	??_main& (0+255),w,b
  2784  000C54  0A01               	xorlw	1	; case 1
  2785  000C56  B4D8               	btfsc	status,2,c
  2786  000C58  D7BC               	goto	l304
  2787  000C5A  0A03               	xorlw	3	; case 2
  2788  000C5C  B4D8               	btfsc	status,2,c
  2789  000C5E  D7BF               	goto	l308
  2790  000C60  0A06               	xorlw	6	; case 4
  2791  000C62  B4D8               	btfsc	status,2,c
  2792  000C64  D7C2               	goto	l311
  2793  000C66  0A0C               	xorlw	12	; case 8
  2794  000C68  B4D8               	btfsc	status,2,c
  2795  000C6A  D7C5               	goto	l314
  2796  000C6C  0A18               	xorlw	24	; case 16
  2797  000C6E  B4D8               	btfsc	status,2,c
  2798  000C70  D7C8               	goto	l317
  2799  000C72  0A30               	xorlw	48	; case 32
  2800  000C74  B4D8               	btfsc	status,2,c
  2801  000C76  D7CB               	goto	l320
  2802  000C78  0A60               	xorlw	96	; case 64
  2803  000C7A  B4D8               	btfsc	status,2,c
  2804  000C7C  D7CE               	goto	l323
  2805  000C7E  0AC0               	xorlw	192	; case 128
  2806  000C80  B4D8               	btfsc	status,2,c
  2807  000C82  D7D1               	goto	l326
  2808  000C84  D006               	goto	l3320
  2809  000C86                     l3512:
  2810                           
  2811                           ; BSR set to: 0
  2812                           ; Switch size 1, requested type "space"
  2813                           ; Number of cases is 1, Range of values is 0 to 0
  2814                           ; switch strategies available:
  2815                           ; Name         Instructions Cycles
  2816                           ; simple_byte            4     3 (average)
  2817                           ;	Chosen strategy is simple_byte
  2818  000C86  0100               	movlb	0	; () banked
  2819  000C88  51DC               	movf	??_main& (0+255),w,b
  2820  000C8A  0A00               	xorlw	0	; case 0
  2821  000C8C  B4D8               	btfsc	status,2,c
  2822  000C8E  D7D1               	goto	l329
  2823  000C90  D000               	goto	l3320
  2824  000C92                     l3320:
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;main.c: 718: if(imagem > 0){
  2828  000C92  0100               	movlb	0	; () banked
  2829  000C94  51E2               	movf	main@imagem& (0+255),w,b
  2830  000C96  0100               	movlb	0	; () banked
  2831  000C98  11E3               	iorwf	(main@imagem+1)& (0+255),w,b
  2832  000C9A  B4D8               	btfsc	status,2,c
  2833  000C9C  EF87  F001         	goto	l3050
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;main.c: 719: EscreverDWINram(0x1B,0);
  2837  000CA0  0E00               	movlw	0
  2838  000CA2  0100               	movlb	0	; () banked
  2839  000CA4  6FD0               	movwf	(EscreverDWINram@endereco+1)& (0+255),b
  2840  000CA6  0E1B               	movlw	27
  2841  000CA8  6FCF               	movwf	EscreverDWINram@endereco& (0+255),b
  2842  000CAA  0E00               	movlw	0
  2843  000CAC  0100               	movlb	0	; () banked
  2844  000CAE  6FD2               	movwf	(EscreverDWINram@valor+1)& (0+255),b
  2845  000CB0  0E00               	movlw	0
  2846  000CB2  6FD1               	movwf	EscreverDWINram@valor& (0+255),b
  2847  000CB4  ECF0  F008         	call	_EscreverDWINram	;wreg free
  2848  000CB8  EF87  F001         	goto	l3050
  2849                           
  2850                           ;main.c: 720: }
  2851                           ;main.c: 721: }
  2852                           ;main.c: 722: return;
  2853  000CBC  EF67  F000         	goto	start
  2854  000CC0                     __end_of_main:
  2855                           	opt stack 0
  2856                           pclatu	equ	0xFFB
  2857                           pclath	equ	0xFFA
  2858                           tblptru	equ	0xFF8
  2859                           tblptrh	equ	0xFF7
  2860                           tblptrl	equ	0xFF6
  2861                           tablat	equ	0xFF5
  2862                           prodh	equ	0xFF4
  2863                           prodl	equ	0xFF3
  2864                           postinc0	equ	0xFEE
  2865                           fsr0h	equ	0xFEA
  2866                           fsr0l	equ	0xFE9
  2867                           wreg	equ	0xFE8
  2868                           fsr1h	equ	0xFE2
  2869                           fsr1l	equ	0xFE1
  2870                           bsr	equ	0xFE0
  2871                           indf2	equ	0xFDF
  2872                           fsr2h	equ	0xFDA
  2873                           fsr2l	equ	0xFD9
  2874                           status	equ	0xFD8
  2875                           
  2876 ;; *************** function ___wmul *****************
  2877 ;; Defined at:
  2878 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;  multiplier      2   16[BANK0 ] unsigned int 
  2881 ;;  multiplicand    2   18[BANK0 ] unsigned int 
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;  product         2   27[COMRAM] unsigned int 
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  2   16[BANK0 ] unsigned int 
  2886 ;; Registers used:
  2887 ;;		wreg, status,2, status,0, prodl, prodh
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2893 ;;      Params:         0       4       0       0       0       0       0       0       0
  2894 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2895 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2896 ;;      Totals:         2       4       0       0       0       0       0       0       0
  2897 ;;Total ram usage:        6 bytes
  2898 ;; Hardware stack levels used:    1
  2899 ;; Hardware stack levels required when called:    3
  2900 ;; This function calls:
  2901 ;;		Nothing
  2902 ;; This function is called by:
  2903 ;;		_main
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           	psect	text1
  2908  0012A8                     __ptext1:
  2909                           	opt stack 0
  2910  0012A8                     ___wmul:
  2911                           	opt stack 27
  2912                           
  2913                           ;incstack = 0
  2914  0012A8  0100               	movlb	0	; () banked
  2915  0012AA  51CF               	movf	___wmul@multiplier& (0+255),w,b
  2916  0012AC  0100               	movlb	0	; () banked
  2917  0012AE  03D1               	mulwf	___wmul@multiplicand& (0+255),b
  2918  0012B0  CFF3 F042          	movff	prodl,___wmul@product
  2919  0012B4  CFF4 F043          	movff	prodh,___wmul@product+1
  2920  0012B8  0100               	movlb	0	; () banked
  2921  0012BA  51CF               	movf	___wmul@multiplier& (0+255),w,b
  2922  0012BC  0100               	movlb	0	; () banked
  2923  0012BE  03D2               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2924  0012C0  50F3               	movf	prodl,w,c
  2925  0012C2  2643               	addwf	___wmul@product+1,f,c
  2926  0012C4  0100               	movlb	0	; () banked
  2927  0012C6  51D0               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2928  0012C8  0100               	movlb	0	; () banked
  2929  0012CA  03D1               	mulwf	___wmul@multiplicand& (0+255),b
  2930  0012CC  50F3               	movf	prodl,w,c
  2931  0012CE  2643               	addwf	___wmul@product+1,f,c
  2932                           
  2933                           ; BSR set to: 0
  2934  0012D0  C042  F0CF         	movff	___wmul@product,?___wmul
  2935  0012D4  C043  F0D0         	movff	___wmul@product+1,?___wmul+1
  2936  0012D8  D000               	goto	l337
  2937  0012DA                     l337:
  2938                           
  2939                           ; BSR set to: 0
  2940  0012DA  0012               	return		;funcret
  2941  0012DC                     __end_of___wmul:
  2942                           	opt stack 0
  2943                           pclatu	equ	0xFFB
  2944                           pclath	equ	0xFFA
  2945                           tblptru	equ	0xFF8
  2946                           tblptrh	equ	0xFF7
  2947                           tblptrl	equ	0xFF6
  2948                           tablat	equ	0xFF5
  2949                           prodh	equ	0xFF4
  2950                           prodl	equ	0xFF3
  2951                           postinc0	equ	0xFEE
  2952                           fsr0h	equ	0xFEA
  2953                           fsr0l	equ	0xFE9
  2954                           wreg	equ	0xFE8
  2955                           fsr1h	equ	0xFE2
  2956                           fsr1l	equ	0xFE1
  2957                           bsr	equ	0xFE0
  2958                           indf2	equ	0xFDF
  2959                           fsr2h	equ	0xFDA
  2960                           fsr2l	equ	0xFD9
  2961                           status	equ	0xFD8
  2962                           
  2963 ;; *************** function ___lldiv *****************
  2964 ;; Defined at:
  2965 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;  dividend        4   16[BANK0 ] unsigned long 
  2968 ;;  divisor         4   20[BANK0 ] unsigned long 
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;  quotient        4   24[BANK0 ] unsigned long 
  2971 ;;  counter         1   28[BANK0 ] unsigned char 
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  4   16[BANK0 ] unsigned long 
  2974 ;; Registers used:
  2975 ;;		wreg, status,2, status,0
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2981 ;;      Params:         0       8       0       0       0       0       0       0       0
  2982 ;;      Locals:         0       5       0       0       0       0       0       0       0
  2983 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2984 ;;      Totals:         0      13       0       0       0       0       0       0       0
  2985 ;;Total ram usage:       13 bytes
  2986 ;; Hardware stack levels used:    1
  2987 ;; Hardware stack levels required when called:    3
  2988 ;; This function calls:
  2989 ;;		Nothing
  2990 ;; This function is called by:
  2991 ;;		_main
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           	psect	text2
  2996  000FEE                     __ptext2:
  2997                           	opt stack 0
  2998  000FEE                     ___lldiv:
  2999                           	opt stack 27
  3000                           
  3001                           ; BSR set to: 0
  3002                           ;incstack = 0
  3003  000FEE  0E00               	movlw	0
  3004  000FF0  0100               	movlb	0	; () banked
  3005  000FF2  6FD7               	movwf	___lldiv@quotient& (0+255),b
  3006  000FF4  0E00               	movlw	0
  3007  000FF6  6FD8               	movwf	(___lldiv@quotient+1)& (0+255),b
  3008  000FF8  0E00               	movlw	0
  3009  000FFA  6FD9               	movwf	(___lldiv@quotient+2)& (0+255),b
  3010  000FFC  0E00               	movlw	0
  3011  000FFE  6FDA               	movwf	(___lldiv@quotient+3)& (0+255),b
  3012                           
  3013                           ; BSR set to: 0
  3014  001000  0100               	movlb	0	; () banked
  3015  001002  51D3               	movf	___lldiv@divisor& (0+255),w,b
  3016  001004  0100               	movlb	0	; () banked
  3017  001006  11D4               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  3018  001008  0100               	movlb	0	; () banked
  3019  00100A  11D5               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  3020  00100C  0100               	movlb	0	; () banked
  3021  00100E  11D6               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  3022  001010  B4D8               	btfsc	status,2,c
  3023  001012  D047               	goto	l792
  3024                           
  3025                           ; BSR set to: 0
  3026  001014  0E01               	movlw	1
  3027  001016  0100               	movlb	0	; () banked
  3028  001018  6FDB               	movwf	___lldiv@counter& (0+255),b
  3029  00101A  D009               	goto	l2722
  3030  00101C                     l2720:
  3031                           
  3032                           ; BSR set to: 0
  3033  00101C  0100               	movlb	0	; () banked
  3034  00101E  90D8               	bcf	status,0,c
  3035  001020  37D3               	rlcf	___lldiv@divisor& (0+255),f,b
  3036  001022  37D4               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  3037  001024  37D5               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  3038  001026  37D6               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  3039  001028  0100               	movlb	0	; () banked
  3040  00102A  2BDB               	incf	___lldiv@counter& (0+255),f,b
  3041  00102C  D000               	goto	l2722
  3042  00102E                     l2722:
  3043                           
  3044                           ; BSR set to: 0
  3045  00102E  0100               	movlb	0	; () banked
  3046  001030  BFD6               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
  3047  001032  D002               	goto	l2724
  3048  001034  D7F3               	goto	l2720
  3049                           
  3050                           ; BSR set to: 0
  3051  001036  D000               	goto	l2724
  3052  001038                     l2724:
  3053                           
  3054                           ; BSR set to: 0
  3055  001038  0100               	movlb	0	; () banked
  3056  00103A  90D8               	bcf	status,0,c
  3057  00103C  37D7               	rlcf	___lldiv@quotient& (0+255),f,b
  3058  00103E  37D8               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  3059  001040  37D9               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  3060  001042  37DA               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  3061                           
  3062                           ; BSR set to: 0
  3063  001044  0100               	movlb	0	; () banked
  3064  001046  51D3               	movf	___lldiv@divisor& (0+255),w,b
  3065  001048  0100               	movlb	0	; () banked
  3066  00104A  5DCF               	subwf	___lldiv@dividend& (0+255),w,b
  3067  00104C  0100               	movlb	0	; () banked
  3068  00104E  51D4               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3069  001050  0100               	movlb	0	; () banked
  3070  001052  59D0               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  3071  001054  0100               	movlb	0	; () banked
  3072  001056  51D5               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3073  001058  0100               	movlb	0	; () banked
  3074  00105A  59D1               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  3075  00105C  0100               	movlb	0	; () banked
  3076  00105E  51D6               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3077  001060  0100               	movlb	0	; () banked
  3078  001062  59D2               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  3079  001064  A0D8               	btfss	status,0,c
  3080  001066  D013               	goto	l2732
  3081                           
  3082                           ; BSR set to: 0
  3083  001068  0100               	movlb	0	; () banked
  3084  00106A  51D3               	movf	___lldiv@divisor& (0+255),w,b
  3085  00106C  0100               	movlb	0	; () banked
  3086  00106E  5FCF               	subwf	___lldiv@dividend& (0+255),f,b
  3087  001070  0100               	movlb	0	; () banked
  3088  001072  51D4               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3089  001074  0100               	movlb	0	; () banked
  3090  001076  5BD0               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  3091  001078  0100               	movlb	0	; () banked
  3092  00107A  51D5               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3093  00107C  0100               	movlb	0	; () banked
  3094  00107E  5BD1               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  3095  001080  0100               	movlb	0	; () banked
  3096  001082  51D6               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3097  001084  0100               	movlb	0	; () banked
  3098  001086  5BD2               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  3099                           
  3100                           ; BSR set to: 0
  3101  001088  0100               	movlb	0	; () banked
  3102  00108A  81D7               	bsf	___lldiv@quotient& (0+255),0,b
  3103  00108C  D000               	goto	l2732
  3104  00108E                     l2732:
  3105                           
  3106                           ; BSR set to: 0
  3107  00108E  0100               	movlb	0	; () banked
  3108  001090  90D8               	bcf	status,0,c
  3109  001092  33D6               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  3110  001094  33D5               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  3111  001096  33D4               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  3112  001098  33D3               	rrcf	___lldiv@divisor& (0+255),f,b
  3113                           
  3114                           ; BSR set to: 0
  3115  00109A  0100               	movlb	0	; () banked
  3116  00109C  2FDB               	decfsz	___lldiv@counter& (0+255),f,b
  3117  00109E  D7CC               	goto	l2724
  3118  0010A0  D000               	goto	l792
  3119  0010A2                     l792:
  3120                           
  3121                           ; BSR set to: 0
  3122  0010A2  C0D7  F0CF         	movff	___lldiv@quotient,?___lldiv
  3123  0010A6  C0D8  F0D0         	movff	___lldiv@quotient+1,?___lldiv+1
  3124  0010AA  C0D9  F0D1         	movff	___lldiv@quotient+2,?___lldiv+2
  3125  0010AE  C0DA  F0D2         	movff	___lldiv@quotient+3,?___lldiv+3
  3126                           
  3127                           ; BSR set to: 0
  3128  0010B2  0012               	return		;funcret
  3129  0010B4                     __end_of___lldiv:
  3130                           	opt stack 0
  3131                           pclatu	equ	0xFFB
  3132                           pclath	equ	0xFFA
  3133                           tblptru	equ	0xFF8
  3134                           tblptrh	equ	0xFF7
  3135                           tblptrl	equ	0xFF6
  3136                           tablat	equ	0xFF5
  3137                           prodh	equ	0xFF4
  3138                           prodl	equ	0xFF3
  3139                           postinc0	equ	0xFEE
  3140                           fsr0h	equ	0xFEA
  3141                           fsr0l	equ	0xFE9
  3142                           wreg	equ	0xFE8
  3143                           fsr1h	equ	0xFE2
  3144                           fsr1l	equ	0xFE1
  3145                           bsr	equ	0xFE0
  3146                           indf2	equ	0xFDF
  3147                           fsr2h	equ	0xFDA
  3148                           fsr2l	equ	0xFD9
  3149                           status	equ	0xFD8
  3150                           
  3151 ;; *************** function _LerDWINram *****************
  3152 ;; Defined at:
  3153 ;;		line 360 in file "main.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;  endereco        2   16[BANK0 ] unsigned int 
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;  VPrecebido      2   18[BANK0 ] unsigned int 
  3158 ;;  cont            1   20[BANK0 ] unsigned char 
  3159 ;; Return value:  Size  Location     Type
  3160 ;;                  2   16[BANK0 ] int 
  3161 ;; Registers used:
  3162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3163 ;; Tracked objects:
  3164 ;;		On entry : 0/0
  3165 ;;		On exit  : 0/0
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3168 ;;      Params:         0       2       0       0       0       0       0       0       0
  3169 ;;      Locals:         0       3       0       0       0       0       0       0       0
  3170 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3171 ;;      Totals:         0       5       0       0       0       0       0       0       0
  3172 ;;Total ram usage:        5 bytes
  3173 ;; Hardware stack levels used:    1
  3174 ;; Hardware stack levels required when called:    4
  3175 ;; This function calls:
  3176 ;;		_DelayDWIN
  3177 ;; This function is called by:
  3178 ;;		_main
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182                           	psect	text3
  3183  0010B4                     __ptext3:
  3184                           	opt stack 0
  3185  0010B4                     _LerDWINram:
  3186                           	opt stack 26
  3187                           
  3188                           ;main.c: 362: unsigned char cont;
  3189                           ;main.c: 363: unsigned int VPrecebido;
  3190                           ;main.c: 367: SerialOut[0] = 0x5A;
  3191                           
  3192                           ; BSR set to: 0
  3193                           ;incstack = 0
  3194  0010B4  0E5A               	movlw	90
  3195  0010B6  0100               	movlb	0	; () banked
  3196  0010B8  6F88               	movwf	_SerialOut& (0+255),b
  3197                           
  3198                           ;main.c: 368: SerialOut[1] = 0xA5;
  3199  0010BA  0EA5               	movlw	165
  3200  0010BC  0100               	movlb	0	; () banked
  3201  0010BE  6F89               	movwf	(_SerialOut+1)& (0+255),b
  3202                           
  3203                           ;main.c: 369: SerialOut[2] = 4;
  3204  0010C0  0E04               	movlw	4
  3205  0010C2  0100               	movlb	0	; () banked
  3206  0010C4  6F8A               	movwf	(_SerialOut+2)& (0+255),b
  3207                           
  3208                           ;main.c: 370: SerialOut[3] = 0x83;
  3209  0010C6  0E83               	movlw	131
  3210  0010C8  0100               	movlb	0	; () banked
  3211  0010CA  6F8B               	movwf	(_SerialOut+3)& (0+255),b
  3212                           
  3213                           ;main.c: 371: SerialOut[4] = endereco >> 8;
  3214  0010CC  0100               	movlb	0	; () banked
  3215  0010CE  51D0               	movf	(LerDWINram@endereco+1)& (0+255),w,b
  3216  0010D0  0100               	movlb	0	; () banked
  3217  0010D2  6F8C               	movwf	(_SerialOut+4)& (0+255),b
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;main.c: 372: SerialOut[5] = endereco & 0x00FF;
  3221  0010D4  C0CF  F08D         	movff	LerDWINram@endereco,_SerialOut+5
  3222                           
  3223                           ;main.c: 373: SerialOut[6] = 1;
  3224  0010D8  0E01               	movlw	1
  3225  0010DA  0100               	movlb	0	; () banked
  3226  0010DC  6F8E               	movwf	(_SerialOut+6)& (0+255),b
  3227                           
  3228                           ; BSR set to: 0
  3229                           ;main.c: 374: PIR1bits.TXIF = 0;
  3230  0010DE  989E               	bcf	3998,4,c	;volatile
  3231                           
  3232                           ;main.c: 375: for(cont=0;cont<7;cont++){
  3233  0010E0  0E00               	movlw	0
  3234  0010E2  0100               	movlb	0	; () banked
  3235  0010E4  6FD3               	movwf	LerDWINram@cont& (0+255),b
  3236  0010E6  D012               	goto	l2684
  3237                           
  3238                           ; BSR set to: 0
  3239                           
  3240                           ; BSR set to: 0
  3241  0010E8  D015               	goto	l175
  3242  0010EA                     l2680:
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;main.c: 376: TXREG = SerialOut[cont];
  3246  0010EA  0100               	movlb	0	; () banked
  3247  0010EC  51D3               	movf	LerDWINram@cont& (0+255),w,b
  3248  0010EE  0D01               	mullw	1
  3249  0010F0  0E88               	movlw	low _SerialOut
  3250  0010F2  24F3               	addwf	prodl,w,c
  3251  0010F4  6ED9               	movwf	fsr2l,c
  3252  0010F6  0E00               	movlw	high _SerialOut
  3253  0010F8  20F4               	addwfc	prodh,w,c
  3254  0010FA  6EDA               	movwf	fsr2h,c
  3255  0010FC  50DF               	movf	indf2,w,c
  3256  0010FE  6EAD               	movwf	4013,c	;volatile
  3257                           
  3258                           ;main.c: 377: while(!PIR1bits.TXIF);
  3259  001100  D000               	goto	l176
  3260  001102                     l176:
  3261  001102  A89E               	btfss	3998,4,c	;volatile
  3262  001104  D7FE               	goto	l176
  3263                           
  3264                           ;main.c: 378: PIR1bits.TXIF = 0;
  3265  001106  989E               	bcf	3998,4,c	;volatile
  3266  001108  0100               	movlb	0	; () banked
  3267  00110A  2BD3               	incf	LerDWINram@cont& (0+255),f,b
  3268  00110C                     l2684:
  3269                           
  3270                           ; BSR set to: 0
  3271  00110C  0E06               	movlw	6
  3272  00110E  0100               	movlb	0	; () banked
  3273  001110  65D3               	cpfsgt	LerDWINram@cont& (0+255),b
  3274  001112  D7EB               	goto	l2680
  3275  001114                     l175:
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;main.c: 379: }
  3279                           ;main.c: 380: PIR1bits.RCIF = 0;
  3280  001114  9A9E               	bcf	3998,5,c	;volatile
  3281                           
  3282                           ; BSR set to: 0
  3283                           ;main.c: 382: for(cont=0;cont<9;cont++){
  3284  001116  0E00               	movlw	0
  3285  001118  0100               	movlb	0	; () banked
  3286  00111A  6FD3               	movwf	LerDWINram@cont& (0+255),b
  3287  00111C                     l2688:
  3288                           
  3289                           ; BSR set to: 0
  3290  00111C  0E08               	movlw	8
  3291  00111E  0100               	movlb	0	; () banked
  3292  001120  65D3               	cpfsgt	LerDWINram@cont& (0+255),b
  3293  001122  D002               	goto	l181
  3294                           
  3295                           ; BSR set to: 0
  3296  001124  D012               	goto	l2698
  3297                           
  3298                           ; BSR set to: 0
  3299                           ;main.c: 383: while(!PIR1bits.RCIF);
  3300  001126  D000               	goto	l181
  3301  001128                     l181:
  3302  001128  AA9E               	btfss	3998,5,c	;volatile
  3303  00112A  D7FE               	goto	l181
  3304                           
  3305                           ;main.c: 384: PIR1bits.RCIF = 0;
  3306  00112C  9A9E               	bcf	3998,5,c	;volatile
  3307                           
  3308                           ;main.c: 385: SerialIn[cont] = RCREG;
  3309  00112E  0100               	movlb	0	; () banked
  3310  001130  51D3               	movf	LerDWINram@cont& (0+255),w,b
  3311  001132  0D01               	mullw	1
  3312  001134  0E60               	movlw	low _SerialIn
  3313  001136  24F3               	addwf	prodl,w,c
  3314  001138  6ED9               	movwf	fsr2l,c
  3315  00113A  0E00               	movlw	high _SerialIn
  3316  00113C  20F4               	addwfc	prodh,w,c
  3317  00113E  6EDA               	movwf	fsr2h,c
  3318  001140  CFAE FFDF          	movff	4014,indf2	;volatile
  3319                           
  3320                           ; BSR set to: 0
  3321  001144  0100               	movlb	0	; () banked
  3322  001146  2BD3               	incf	LerDWINram@cont& (0+255),f,b
  3323  001148  D7E9               	goto	l2688
  3324  00114A                     l2698:
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;main.c: 386: }
  3328                           ;main.c: 387: VPrecebido = SerialIn[7] << 8;
  3329  00114A  0100               	movlb	0	; () banked
  3330  00114C  5167               	movf	(_SerialIn+7)& (0+255),w,b
  3331  00114E  0100               	movlb	0	; () banked
  3332  001150  6FD2               	movwf	(LerDWINram@VPrecebido+1)& (0+255),b
  3333  001152  6BD1               	clrf	LerDWINram@VPrecebido& (0+255),b
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;main.c: 388: VPrecebido += SerialIn[8];
  3337  001154  0100               	movlb	0	; () banked
  3338  001156  5168               	movf	(_SerialIn+8)& (0+255),w,b
  3339  001158  0100               	movlb	0	; () banked
  3340  00115A  27D1               	addwf	LerDWINram@VPrecebido& (0+255),f,b
  3341  00115C  0E00               	movlw	0
  3342  00115E  23D2               	addwfc	(LerDWINram@VPrecebido+1)& (0+255),f,b
  3343                           
  3344                           ; BSR set to: 0
  3345                           ;main.c: 391: DelayDWIN();
  3346  001160  EC80  F009         	call	_DelayDWIN	;wreg free
  3347                           
  3348                           ;main.c: 392: return(VPrecebido);
  3349  001164  C0D1  F0CF         	movff	LerDWINram@VPrecebido,?_LerDWINram
  3350  001168  C0D2  F0D0         	movff	LerDWINram@VPrecebido+1,?_LerDWINram+1
  3351  00116C  D000               	goto	l184
  3352  00116E                     l184:
  3353  00116E  0012               	return		;funcret
  3354  001170                     __end_of_LerDWINram:
  3355                           	opt stack 0
  3356                           pclatu	equ	0xFFB
  3357                           pclath	equ	0xFFA
  3358                           tblptru	equ	0xFF8
  3359                           tblptrh	equ	0xFF7
  3360                           tblptrl	equ	0xFF6
  3361                           tablat	equ	0xFF5
  3362                           prodh	equ	0xFF4
  3363                           prodl	equ	0xFF3
  3364                           postinc0	equ	0xFEE
  3365                           fsr0h	equ	0xFEA
  3366                           fsr0l	equ	0xFE9
  3367                           wreg	equ	0xFE8
  3368                           fsr1h	equ	0xFE2
  3369                           fsr1l	equ	0xFE1
  3370                           bsr	equ	0xFE0
  3371                           indf2	equ	0xFDF
  3372                           fsr2h	equ	0xFDA
  3373                           fsr2l	equ	0xFD9
  3374                           status	equ	0xFD8
  3375                           
  3376 ;; *************** function _Inicializacao *****************
  3377 ;; Defined at:
  3378 ;;		line 248 in file "main.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;		None
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;		None
  3383 ;; Return value:  Size  Location     Type
  3384 ;;		None               void
  3385 ;; Registers used:
  3386 ;;		wreg, status,2
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3392 ;;      Params:         0       0       0       0       0       0       0       0       0
  3393 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3394 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3395 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3396 ;;Total ram usage:        0 bytes
  3397 ;; Hardware stack levels used:    1
  3398 ;; Hardware stack levels required when called:    3
  3399 ;; This function calls:
  3400 ;;		Nothing
  3401 ;; This function is called by:
  3402 ;;		_main
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           	psect	text4
  3407  001170                     __ptext4:
  3408                           	opt stack 0
  3409  001170                     _Inicializacao:
  3410                           	opt stack 27
  3411                           
  3412                           ;main.c: 251: ADCON0 = 0;
  3413                           
  3414                           ;incstack = 0
  3415  001170  0E00               	movlw	0
  3416  001172  6EC2               	movwf	4034,c	;volatile
  3417                           
  3418                           ;main.c: 252: ADCON1 = 0b00011010;
  3419  001174  0E1A               	movlw	26
  3420  001176  6EC1               	movwf	4033,c	;volatile
  3421                           
  3422                           ;main.c: 253: ADCON2 = 0b10100101;
  3423  001178  0EA5               	movlw	165
  3424  00117A  6EC0               	movwf	4032,c	;volatile
  3425                           
  3426                           ;main.c: 254: CMCON = 7;
  3427  00117C  0E07               	movlw	7
  3428  00117E  6EB4               	movwf	4020,c	;volatile
  3429                           
  3430                           ;main.c: 255: TRISA = 0x3F;
  3431  001180  0E3F               	movlw	63
  3432  001182  6E92               	movwf	3986,c	;volatile
  3433                           
  3434                           ;main.c: 256: PORTA = 0;
  3435  001184  0E00               	movlw	0
  3436  001186  6E80               	movwf	3968,c	;volatile
  3437                           
  3438                           ;main.c: 257: TRISB = 0b11000011;
  3439  001188  0EC3               	movlw	195
  3440  00118A  6E93               	movwf	3987,c	;volatile
  3441                           
  3442                           ;main.c: 258: PORTB = 0;
  3443  00118C  0E00               	movlw	0
  3444  00118E  6E81               	movwf	3969,c	;volatile
  3445                           
  3446                           ;main.c: 259: TRISC = 0xFF;
  3447  001190  6894               	setf	3988,c	;volatile
  3448                           
  3449                           ;main.c: 260: PORTC = 0;
  3450  001192  0E00               	movlw	0
  3451  001194  6E82               	movwf	3970,c	;volatile
  3452                           
  3453                           ;main.c: 261: TRISD = 0xFF;
  3454  001196  6895               	setf	3989,c	;volatile
  3455                           
  3456                           ;main.c: 262: PORTD = 0;
  3457  001198  0E00               	movlw	0
  3458  00119A  6E83               	movwf	3971,c	;volatile
  3459                           
  3460                           ;main.c: 263: TRISE = 0;
  3461  00119C  0E00               	movlw	0
  3462  00119E  6E96               	movwf	3990,c	;volatile
  3463                           
  3464                           ;main.c: 264: PORTE = 0;
  3465  0011A0  0E00               	movlw	0
  3466  0011A2  6E84               	movwf	3972,c	;volatile
  3467                           
  3468                           ;main.c: 267: SPBRGH = 2;
  3469  0011A4  0E02               	movlw	2
  3470  0011A6  6EB0               	movwf	4016,c	;volatile
  3471                           
  3472                           ;main.c: 268: SPBRG = 8;
  3473  0011A8  0E08               	movlw	8
  3474  0011AA  6EAF               	movwf	4015,c	;volatile
  3475                           
  3476                           ;main.c: 269: BAUDCONbits.BRG16 = 1;
  3477  0011AC  86B8               	bsf	4024,3,c	;volatile
  3478                           
  3479                           ;main.c: 270: TXSTAbits.BRGH = 1;
  3480  0011AE  84AC               	bsf	4012,2,c	;volatile
  3481                           
  3482                           ;main.c: 271: TXSTAbits.TXEN = 1;
  3483  0011B0  8AAC               	bsf	4012,5,c	;volatile
  3484                           
  3485                           ;main.c: 272: RCSTAbits.SPEN = 1;
  3486  0011B2  8EAB               	bsf	4011,7,c	;volatile
  3487                           
  3488                           ;main.c: 273: RCSTAbits.CREN = 1;
  3489  0011B4  88AB               	bsf	4011,4,c	;volatile
  3490                           
  3491                           ;main.c: 274: IPR1bits.RCIP = 0;
  3492  0011B6  9A9F               	bcf	3999,5,c	;volatile
  3493                           
  3494                           ;main.c: 275: PIE1bits.RCIE = 0;
  3495  0011B8  9A9D               	bcf	3997,5,c	;volatile
  3496                           
  3497                           ;main.c: 277: ADCON0bits.ADON = 1;
  3498  0011BA  80C2               	bsf	4034,0,c	;volatile
  3499                           
  3500                           ;main.c: 280: T0CON = 0b11000110;
  3501  0011BC  0EC6               	movlw	198
  3502  0011BE  6ED5               	movwf	4053,c	;volatile
  3503                           
  3504                           ;main.c: 281: TMR0L = 60;
  3505  0011C0  0E3C               	movlw	60
  3506  0011C2  6ED6               	movwf	4054,c	;volatile
  3507                           
  3508                           ;main.c: 282: INTCON2bits.T0IP = 1;
  3509  0011C4  84F1               	bsf	intcon2,2,c	;volatile
  3510                           
  3511                           ;main.c: 283: INTCONbits.TMR0IE = 1;
  3512  0011C6  8AF2               	bsf	intcon,5,c	;volatile
  3513                           
  3514                           ;main.c: 285: PR2 = 100;
  3515  0011C8  0E64               	movlw	100
  3516  0011CA  6ECB               	movwf	4043,c	;volatile
  3517                           
  3518                           ;main.c: 286: CCPR2L = 0x1F;
  3519  0011CC  0E1F               	movlw	31
  3520  0011CE  6EBB               	movwf	4027,c	;volatile
  3521                           
  3522                           ;main.c: 287: T2CON = 0b00000100;
  3523  0011D0  0E04               	movlw	4
  3524  0011D2  6ECA               	movwf	4042,c	;volatile
  3525                           
  3526                           ;main.c: 288: CCP2CON = 0x0F;
  3527  0011D4  0E0F               	movlw	15
  3528  0011D6  6EBA               	movwf	4026,c	;volatile
  3529                           
  3530                           ;main.c: 291: RCONbits.IPEN = 1;
  3531  0011D8  8ED0               	bsf	4048,7,c	;volatile
  3532                           
  3533                           ;main.c: 292: INTCONbits.GIEH = 1;
  3534  0011DA  8EF2               	bsf	intcon,7,c	;volatile
  3535                           
  3536                           ;main.c: 293: INTCONbits.GIEL = 1;
  3537  0011DC  8CF2               	bsf	intcon,6,c	;volatile
  3538  0011DE  0012               	return		;funcret
  3539  0011E0                     __end_of_Inicializacao:
  3540                           	opt stack 0
  3541                           pclatu	equ	0xFFB
  3542                           pclath	equ	0xFFA
  3543                           tblptru	equ	0xFF8
  3544                           tblptrh	equ	0xFF7
  3545                           tblptrl	equ	0xFF6
  3546                           tablat	equ	0xFF5
  3547                           prodh	equ	0xFF4
  3548                           prodl	equ	0xFF3
  3549                           intcon	equ	0xFF2
  3550                           intcon2	equ	0xFF1
  3551                           postinc0	equ	0xFEE
  3552                           fsr0h	equ	0xFEA
  3553                           fsr0l	equ	0xFE9
  3554                           wreg	equ	0xFE8
  3555                           fsr1h	equ	0xFE2
  3556                           fsr1l	equ	0xFE1
  3557                           bsr	equ	0xFE0
  3558                           indf2	equ	0xFDF
  3559                           fsr2h	equ	0xFDA
  3560                           fsr2l	equ	0xFD9
  3561                           status	equ	0xFD8
  3562                           
  3563 ;; *************** function _EscreverDWINram *****************
  3564 ;; Defined at:
  3565 ;;		line 306 in file "main.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;  endereco        2   16[BANK0 ] unsigned int 
  3568 ;;  valor           2   18[BANK0 ] int 
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;  cont            1   20[BANK0 ] unsigned char 
  3571 ;; Return value:  Size  Location     Type
  3572 ;;		None               void
  3573 ;; Registers used:
  3574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3580 ;;      Params:         0       4       0       0       0       0       0       0       0
  3581 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3582 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3583 ;;      Totals:         0       5       0       0       0       0       0       0       0
  3584 ;;Total ram usage:        5 bytes
  3585 ;; Hardware stack levels used:    1
  3586 ;; Hardware stack levels required when called:    4
  3587 ;; This function calls:
  3588 ;;		_DelayDWIN
  3589 ;; This function is called by:
  3590 ;;		_main
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           	psect	text5
  3595  0011E0                     __ptext5:
  3596                           	opt stack 0
  3597  0011E0                     _EscreverDWINram:
  3598                           	opt stack 26
  3599                           
  3600                           ;main.c: 308: unsigned char cont;
  3601                           ;main.c: 312: SerialOut[0] = 0x5A;
  3602                           
  3603                           ;incstack = 0
  3604  0011E0  0E5A               	movlw	90
  3605  0011E2  0100               	movlb	0	; () banked
  3606  0011E4  6F88               	movwf	_SerialOut& (0+255),b
  3607                           
  3608                           ;main.c: 313: SerialOut[1] = 0xA5;
  3609  0011E6  0EA5               	movlw	165
  3610  0011E8  0100               	movlb	0	; () banked
  3611  0011EA  6F89               	movwf	(_SerialOut+1)& (0+255),b
  3612                           
  3613                           ;main.c: 314: SerialOut[2] = 5;
  3614  0011EC  0E05               	movlw	5
  3615  0011EE  0100               	movlb	0	; () banked
  3616  0011F0  6F8A               	movwf	(_SerialOut+2)& (0+255),b
  3617                           
  3618                           ;main.c: 315: SerialOut[3] = 0x82;
  3619  0011F2  0E82               	movlw	130
  3620  0011F4  0100               	movlb	0	; () banked
  3621  0011F6  6F8B               	movwf	(_SerialOut+3)& (0+255),b
  3622                           
  3623                           ;main.c: 316: SerialOut[4] = endereco >> 8;
  3624  0011F8  0100               	movlb	0	; () banked
  3625  0011FA  51D0               	movf	(EscreverDWINram@endereco+1)& (0+255),w,b
  3626  0011FC  0100               	movlb	0	; () banked
  3627  0011FE  6F8C               	movwf	(_SerialOut+4)& (0+255),b
  3628                           
  3629                           ; BSR set to: 0
  3630                           ;main.c: 317: SerialOut[5] = endereco & 0x00FF;
  3631  001200  C0CF  F08D         	movff	EscreverDWINram@endereco,_SerialOut+5
  3632                           
  3633                           ;main.c: 318: SerialOut[6] = valor >> 8;
  3634  001204  0100               	movlb	0	; () banked
  3635  001206  51D2               	movf	(EscreverDWINram@valor+1)& (0+255),w,b
  3636  001208  0100               	movlb	0	; () banked
  3637  00120A  6F8E               	movwf	(_SerialOut+6)& (0+255),b
  3638                           
  3639                           ; BSR set to: 0
  3640                           ;main.c: 319: SerialOut[7] = valor & 0x00FF;
  3641  00120C  C0D1  F08F         	movff	EscreverDWINram@valor,_SerialOut+7
  3642                           
  3643                           ; BSR set to: 0
  3644                           ;main.c: 320: PIR1bits.TXIF = 0;
  3645  001210  989E               	bcf	3998,4,c	;volatile
  3646                           
  3647                           ;main.c: 321: for(cont=0;cont<8;cont++){
  3648  001212  0E00               	movlw	0
  3649  001214  0100               	movlb	0	; () banked
  3650  001216  6FD3               	movwf	EscreverDWINram@cont& (0+255),b
  3651  001218                     l2658:
  3652                           
  3653                           ; BSR set to: 0
  3654  001218  0E07               	movlw	7
  3655  00121A  0100               	movlb	0	; () banked
  3656  00121C  65D3               	cpfsgt	EscreverDWINram@cont& (0+255),b
  3657  00121E  D001               	goto	l2662
  3658                           
  3659                           ; BSR set to: 0
  3660  001220  D012               	goto	l2668
  3661  001222                     l2662:
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;main.c: 322: TXREG = SerialOut[cont];
  3665  001222  0100               	movlb	0	; () banked
  3666  001224  51D3               	movf	EscreverDWINram@cont& (0+255),w,b
  3667  001226  0D01               	mullw	1
  3668  001228  0E88               	movlw	low _SerialOut
  3669  00122A  24F3               	addwf	prodl,w,c
  3670  00122C  6ED9               	movwf	fsr2l,c
  3671  00122E  0E00               	movlw	high _SerialOut
  3672  001230  20F4               	addwfc	prodh,w,c
  3673  001232  6EDA               	movwf	fsr2h,c
  3674  001234  50DF               	movf	indf2,w,c
  3675  001236  6EAD               	movwf	4013,c	;volatile
  3676                           
  3677                           ;main.c: 323: while(!PIR1bits.TXIF);
  3678  001238  D000               	goto	l160
  3679  00123A                     l160:
  3680  00123A  A89E               	btfss	3998,4,c	;volatile
  3681  00123C  D7FE               	goto	l160
  3682                           
  3683                           ;main.c: 324: PIR1bits.TXIF = 0;
  3684  00123E  989E               	bcf	3998,4,c	;volatile
  3685  001240  0100               	movlb	0	; () banked
  3686  001242  2BD3               	incf	EscreverDWINram@cont& (0+255),f,b
  3687  001244  D7E9               	goto	l2658
  3688  001246                     l2668:
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;main.c: 325: }
  3692                           ;main.c: 326: DelayDWIN();
  3693  001246  EC80  F009         	call	_DelayDWIN	;wreg free
  3694  00124A  0012               	return		;funcret
  3695  00124C                     __end_of_EscreverDWINram:
  3696                           	opt stack 0
  3697                           pclatu	equ	0xFFB
  3698                           pclath	equ	0xFFA
  3699                           tblptru	equ	0xFF8
  3700                           tblptrh	equ	0xFF7
  3701                           tblptrl	equ	0xFF6
  3702                           tablat	equ	0xFF5
  3703                           prodh	equ	0xFF4
  3704                           prodl	equ	0xFF3
  3705                           intcon	equ	0xFF2
  3706                           intcon2	equ	0xFF1
  3707                           postinc0	equ	0xFEE
  3708                           fsr0h	equ	0xFEA
  3709                           fsr0l	equ	0xFE9
  3710                           wreg	equ	0xFE8
  3711                           fsr1h	equ	0xFE2
  3712                           fsr1l	equ	0xFE1
  3713                           bsr	equ	0xFE0
  3714                           indf2	equ	0xFDF
  3715                           fsr2h	equ	0xFDA
  3716                           fsr2l	equ	0xFD9
  3717                           status	equ	0xFD8
  3718                           
  3719 ;; *************** function _DelayDWIN *****************
  3720 ;; Defined at:
  3721 ;;		line 296 in file "main.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;		None
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;  cont            1   28[COMRAM] unsigned char 
  3726 ;; Return value:  Size  Location     Type
  3727 ;;		None               void
  3728 ;; Registers used:
  3729 ;;		wreg, status,2, status,0
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3735 ;;      Params:         0       0       0       0       0       0       0       0       0
  3736 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3737 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3738 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3739 ;;Total ram usage:        2 bytes
  3740 ;; Hardware stack levels used:    1
  3741 ;; Hardware stack levels required when called:    3
  3742 ;; This function calls:
  3743 ;;		Nothing
  3744 ;; This function is called by:
  3745 ;;		_EscreverDWINram
  3746 ;;		_LerDWINram
  3747 ;;		_EscreverDWINreg
  3748 ;;		_LerDWINreg
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752                           	psect	text6
  3753  001300                     __ptext6:
  3754                           	opt stack 0
  3755  001300                     _DelayDWIN:
  3756                           	opt stack 26
  3757                           
  3758                           ;main.c: 297: unsigned char cont;
  3759                           ;main.c: 299: for(cont=0;cont<80;cont++)
  3760                           
  3761                           ;incstack = 0
  3762  001300  0E00               	movlw	0
  3763  001302  6E43               	movwf	DelayDWIN@cont,c
  3764  001304                     l2642:
  3765  001304  0E4F               	movlw	79
  3766  001306  6443               	cpfsgt	DelayDWIN@cont,c
  3767  001308  D001               	goto	l2646
  3768  00130A  D00A               	goto	l155
  3769  00130C                     l2646:
  3770                           
  3771                           ;main.c: 300: _delay((unsigned long)((1)*(20000000/4000.0)));
  3772  00130C  0E07               	movlw	7
  3773  00130E  6E42               	movwf	??_DelayDWIN& (0+255),c
  3774  001310  0E7D               	movlw	125
  3775  001312                     u3247:
  3776  001312  2EE8               	decfsz	wreg,f,c
  3777  001314  D7FE               	goto	u3247
  3778  001316  2E42               	decfsz	??_DelayDWIN& (0+255),f,c
  3779  001318  D7FC               	goto	u3247
  3780  00131A  F000               	nop	
  3781  00131C  2A43               	incf	DelayDWIN@cont,f,c
  3782  00131E  D7F2               	goto	l2642
  3783  001320                     l155:
  3784  001320  0012               	return		;funcret
  3785  001322                     __end_of_DelayDWIN:
  3786                           	opt stack 0
  3787                           pclatu	equ	0xFFB
  3788                           pclath	equ	0xFFA
  3789                           tblptru	equ	0xFF8
  3790                           tblptrh	equ	0xFF7
  3791                           tblptrl	equ	0xFF6
  3792                           tablat	equ	0xFF5
  3793                           prodh	equ	0xFF4
  3794                           prodl	equ	0xFF3
  3795                           intcon	equ	0xFF2
  3796                           intcon2	equ	0xFF1
  3797                           postinc0	equ	0xFEE
  3798                           fsr0h	equ	0xFEA
  3799                           fsr0l	equ	0xFE9
  3800                           wreg	equ	0xFE8
  3801                           fsr1h	equ	0xFE2
  3802                           fsr1l	equ	0xFE1
  3803                           bsr	equ	0xFE0
  3804                           indf2	equ	0xFDF
  3805                           fsr2h	equ	0xFDA
  3806                           fsr2l	equ	0xFD9
  3807                           status	equ	0xFD8
  3808                           
  3809 ;; *************** function _HighISR *****************
  3810 ;; Defined at:
  3811 ;;		line 117 in file "main.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;		None
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;  Temp16          2   24[COMRAM] unsigned int 
  3816 ;;  Temp8           1   26[COMRAM] unsigned char 
  3817 ;; Return value:  Size  Location     Type
  3818 ;;		None               void
  3819 ;; Registers used:
  3820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3826 ;;      Params:         0       0       0       0       0       0       0       0       0
  3827 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3828 ;;      Temps:          0      16       0       0       0       0       0       0       0
  3829 ;;      Totals:         3      16       0       0       0       0       0       0       0
  3830 ;;Total ram usage:       19 bytes
  3831 ;; Hardware stack levels used:    1
  3832 ;; Hardware stack levels required when called:    1
  3833 ;; This function calls:
  3834 ;;		___lwdiv
  3835 ;; This function is called by:
  3836 ;;		Interrupt level 2
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	intcode
  3841  000008                     __pintcode:
  3842                           	opt stack 0
  3843  000008                     _HighISR:
  3844                           	opt stack 26
  3845                           
  3846                           ;incstack = 0
  3847  000008  CFFA F0C1          	movff	pclath,??_HighISR+2
  3848  00000C  CFFB F0C2          	movff	pclatu,??_HighISR+3
  3849  000010  CFE9 F0C3          	movff	fsr0l,??_HighISR+4
  3850  000014  ED60  F006         	call	int_func,f	;refresh shadow registers
  3851                           pclatu	equ	0xFFB
  3852                           pclath	equ	0xFFA
  3853                           tblptru	equ	0xFF8
  3854                           tblptrh	equ	0xFF7
  3855                           tblptrl	equ	0xFF6
  3856                           tablat	equ	0xFF5
  3857                           prodh	equ	0xFF4
  3858                           prodl	equ	0xFF3
  3859                           intcon	equ	0xFF2
  3860                           intcon2	equ	0xFF1
  3861                           postinc0	equ	0xFEE
  3862                           fsr0h	equ	0xFEA
  3863                           fsr0l	equ	0xFE9
  3864                           wreg	equ	0xFE8
  3865                           fsr1h	equ	0xFE2
  3866                           fsr1l	equ	0xFE1
  3867                           bsr	equ	0xFE0
  3868                           indf2	equ	0xFDF
  3869                           fsr2h	equ	0xFDA
  3870                           fsr2l	equ	0xFD9
  3871                           status	equ	0xFD8
  3872                           
  3873                           	psect	intcode_body
  3874  000CC0                     __pintcode_body:
  3875                           	opt stack 26
  3876  000CC0                     int_func:
  3877                           	opt stack 26
  3878  000CC0  0006               	pop		; remove dummy address from shadow register refresh
  3879  000CC2  CFEA F0C4          	movff	fsr0h,??_HighISR+5
  3880  000CC6  CFE1 F0C5          	movff	fsr1l,??_HighISR+6
  3881  000CCA  CFE2 F0C6          	movff	fsr1h,??_HighISR+7
  3882  000CCE  CFD9 F0C7          	movff	fsr2l,??_HighISR+8
  3883  000CD2  CFDA F0C8          	movff	fsr2h,??_HighISR+9
  3884  000CD6  CFF3 F0C9          	movff	prodl,??_HighISR+10
  3885  000CDA  CFF4 F0CA          	movff	prodh,??_HighISR+11
  3886  000CDE  CFF6 F0CB          	movff	tblptrl,??_HighISR+12
  3887  000CE2  CFF7 F0CC          	movff	tblptrh,??_HighISR+13
  3888  000CE6  CFF8 F0CD          	movff	tblptru,??_HighISR+14
  3889  000CEA  CFF5 F0CE          	movff	tablat,??_HighISR+15
  3890                           
  3891                           ;main.c: 118: unsigned int Temp16;
  3892                           ;main.c: 119: unsigned char Temp8;
  3893                           ;main.c: 120: enum EstadosAD{SETACANAL,CONVERSAO,AGUARDACONVERSAO,CALCULAMEDIA};
  3894                           ;main.c: 121: static unsigned char EstadoAD = SETACANAL;
  3895                           ;main.c: 122: static unsigned char ContMedia = 0;
  3896                           ;main.c: 123: static unsigned int AccValoresAD[4];
  3897                           ;main.c: 124: static unsigned int ValoresADanteriores1[4] = {0,0,0,0};
  3898                           ;main.c: 125: static unsigned int ValoresADanteriores2[4] = {0,0,0,0};
  3899                           ;main.c: 126: static unsigned int ValoresADanteriores3[4] = {0,0,0,0};
  3900  000CEE  BAF2               	btfsc	intcon,5,c	;volatile
  3901  000CF0  A4F2               	btfss	intcon,2,c	;volatile
  3902  000CF2  D152               	goto	i2l2864
  3903                           
  3904                           ;main.c: 132: TMR0L = 60;
  3905  000CF4  0E3C               	movlw	60
  3906  000CF6  6ED6               	movwf	4054,c	;volatile
  3907                           
  3908                           ;main.c: 133: INTCONbits.T0IF = 0;
  3909  000CF8  94F2               	bcf	intcon,2,c	;volatile
  3910                           
  3911                           ;main.c: 134: IN0 = PORTAbits.RA4;
  3912  000CFA  9044               	bcf	_IN0/(0+8),_IN0& (0+7),c
  3913  000CFC  B880               	btfsc	3968,4,c	;volatile
  3914  000CFE  8044               	bsf	_IN0/(0+8),_IN0& (0+7),c
  3915                           
  3916                           ;main.c: 135: IN1 = PORTCbits.RC2;
  3917  000D00  9244               	bcf	_IN1/(0+8),_IN1& (0+7),c
  3918  000D02  B482               	btfsc	3970,2,c	;volatile
  3919  000D04  8244               	bsf	_IN1/(0+8),_IN1& (0+7),c
  3920                           
  3921                           ;main.c: 136: TRISD = 0xFF;
  3922  000D06  6895               	setf	3989,c	;volatile
  3923                           
  3924                           ;main.c: 137: PORTE = 1;
  3925  000D08  0E01               	movlw	1
  3926  000D0A  6E84               	movwf	3972,c	;volatile
  3927                           
  3928                           ;main.c: 138: __nop();
  3929  000D0C  F000               	nop	
  3930                           
  3931                           ;main.c: 139: __nop();
  3932  000D0E  F000               	nop	
  3933                           
  3934                           ;main.c: 140: __nop();
  3935  000D10  F000               	nop	
  3936                           
  3937                           ;main.c: 141: Inputs2to9 = PORTD;
  3938  000D12  CF83 F0BE          	movff	3971,_Inputs2to9	;volatile
  3939                           
  3940                           ;main.c: 142: PORTE = 3;
  3941  000D16  0E03               	movlw	3
  3942  000D18  6E84               	movwf	3972,c	;volatile
  3943                           
  3944                           ;main.c: 143: __nop();
  3945  000D1A  F000               	nop	
  3946                           
  3947                           ;main.c: 144: __nop();
  3948  000D1C  F000               	nop	
  3949                           
  3950                           ;main.c: 145: __nop();
  3951  000D1E  F000               	nop	
  3952                           
  3953                           ;main.c: 146: Inputs18to25 = PORTD;
  3954  000D20  CF83 F0BD          	movff	3971,_Inputs18to25	;volatile
  3955                           
  3956                           ;main.c: 147: PORTE = 4;
  3957  000D24  0E04               	movlw	4
  3958  000D26  6E84               	movwf	3972,c	;volatile
  3959                           
  3960                           ;main.c: 148: __nop();
  3961  000D28  F000               	nop	
  3962                           
  3963                           ;main.c: 149: __nop();
  3964  000D2A  F000               	nop	
  3965                           
  3966                           ;main.c: 150: __nop();
  3967  000D2C  F000               	nop	
  3968                           
  3969                           ;main.c: 151: Inputs10to17 = PORTD;
  3970  000D2E  CF83 F0BC          	movff	3971,_Inputs10to17	;volatile
  3971                           
  3972                           ;main.c: 152: PORTE = 2;
  3973  000D32  0E02               	movlw	2
  3974  000D34  6E84               	movwf	3972,c	;volatile
  3975                           
  3976                           ;main.c: 153: __nop();
  3977  000D36  F000               	nop	
  3978                           
  3979                           ;main.c: 154: TRISD = 0;
  3980  000D38  0E00               	movlw	0
  3981  000D3A  6E95               	movwf	3989,c	;volatile
  3982                           
  3983                           ;main.c: 155: __nop();
  3984  000D3C  F000               	nop	
  3985                           
  3986                           ;main.c: 156: __nop();
  3987  000D3E  F000               	nop	
  3988                           
  3989                           ;main.c: 157: __nop();
  3990  000D40  F000               	nop	
  3991                           
  3992                           ;main.c: 158: PORTD = Outputs2to9;
  3993  000D42  C026  FF83         	movff	_Outputs2to9,3971	;volatile
  3994                           
  3995                           ;main.c: 159: __nop();
  3996  000D46  F000               	nop	
  3997                           
  3998                           ;main.c: 160: PORTE = 5;
  3999  000D48  0E05               	movlw	5
  4000  000D4A  6E84               	movwf	3972,c	;volatile
  4001                           
  4002                           ;main.c: 161: __nop();
  4003  000D4C  F000               	nop	
  4004                           
  4005                           ;main.c: 162: __nop();
  4006  000D4E  F000               	nop	
  4007                           
  4008                           ;main.c: 163: __nop();
  4009  000D50  F000               	nop	
  4010                           
  4011                           ;main.c: 164: PORTD = Outputs10to17;
  4012  000D52  C025  FF83         	movff	_Outputs10to17,3971	;volatile
  4013                           
  4014                           ;main.c: 165: __nop();
  4015  000D56  F000               	nop	
  4016                           
  4017                           ;main.c: 166: PORTE = 0;
  4018  000D58  0E00               	movlw	0
  4019  000D5A  6E84               	movwf	3972,c	;volatile
  4020                           
  4021                           ;main.c: 167: __nop();
  4022  000D5C  F000               	nop	
  4023                           
  4024                           ;main.c: 168: TRISD = 0xFF;
  4025  000D5E  6895               	setf	3989,c	;volatile
  4026                           
  4027                           ;main.c: 169: PORTBbits.RB2 = OUT0;
  4028  000D60  A444               	btfss	_OUT0/(0+8),_OUT0& (0+7),c
  4029  000D62  D002               	bra	i2u233_45
  4030  000D64  8481               	bsf	3969,2,c	;volatile
  4031  000D66  D001               	bra	i2u233_47
  4032  000D68                     i2u233_45:
  4033  000D68  9481               	bcf	3969,2,c	;volatile
  4034  000D6A                     i2u233_47:
  4035                           
  4036                           ;main.c: 170: PORTBbits.RB4 = OUT1;
  4037  000D6A  A644               	btfss	_OUT1/(0+8),_OUT1& (0+7),c
  4038  000D6C  D002               	bra	i2u234_45
  4039  000D6E  8881               	bsf	3969,4,c	;volatile
  4040  000D70  D001               	bra	i2u234_47
  4041  000D72                     i2u234_45:
  4042  000D72  9881               	bcf	3969,4,c	;volatile
  4043  000D74                     i2u234_47:
  4044                           
  4045                           ;main.c: 171: }
  4046                           ;main.c: 174: switch(EstadoAD){
  4047  000D74  D111               	goto	i2l2864
  4048  000D76                     i2l2804:
  4049                           
  4050                           ;main.c: 176: ADCON0 &= 0b11000011;
  4051  000D76  0EC3               	movlw	195
  4052  000D78  16C2               	andwf	4034,f,c	;volatile
  4053                           
  4054                           ;main.c: 177: if(CanalAD < 3)
  4055  000D7A  0E03               	movlw	3
  4056  000D7C  6021               	cpfslt	HighISR@CanalAD,c
  4057  000D7E  D004               	goto	i2l2808
  4058                           
  4059                           ;main.c: 178: ADCON0 |= CanalAD << 2;
  4060  000D80  4421               	rlncf	HighISR@CanalAD,w,c
  4061  000D82  46E8               	rlncf	wreg,f,c
  4062  000D84  0BFC               	andlw	252
  4063  000D86  D004               	goto	L1
  4064  000D88                     i2l2808:
  4065                           
  4066                           ;main.c: 179: else
  4067                           ;main.c: 180: ADCON0 |= (CanalAD+1) << 2;
  4068  000D88  4421               	rlncf	HighISR@CanalAD,w,c
  4069  000D8A  46E8               	rlncf	wreg,f,c
  4070  000D8C  0BFC               	andlw	252
  4071  000D8E  0F04               	addlw	4
  4072  000D90                     L1:
  4073  000D90  12C2               	iorwf	4034,f,c	;volatile
  4074  000D92  D000               	goto	i2l2810
  4075  000D94                     i2l2810:
  4076                           
  4077                           ;main.c: 181: EstadoAD = CONVERSAO;
  4078  000D94  0E01               	movlw	1
  4079  000D96  D0FE               	goto	L4
  4080  000D98                     i2l131:
  4081                           
  4082                           ;main.c: 184: ADCON0bits.GO = 1;
  4083  000D98  82C2               	bsf	4034,1,c	;volatile
  4084                           
  4085                           ;main.c: 185: EstadoAD = AGUARDACONVERSAO;
  4086  000D9A  0E02               	movlw	2
  4087  000D9C  D0FB               	goto	L4
  4088  000D9E                     i2l132:
  4089                           
  4090                           ;main.c: 188: if(!ADCON0bits.GO){
  4091  000D9E  B2C2               	btfsc	4034,1,c	;volatile
  4092  000DA0  D109               	goto	i2l140
  4093                           
  4094                           ;main.c: 189: Temp16 = ADRESH;
  4095  000DA2  CFC4 F03F          	movff	4036,HighISR@Temp16	;volatile
  4096  000DA6  6A40               	clrf	HighISR@Temp16+1,c
  4097                           
  4098                           ;main.c: 190: Temp16 = Temp16 << 8;
  4099  000DA8  503F               	movf	HighISR@Temp16,w,c
  4100  000DAA  6E40               	movwf	HighISR@Temp16+1,c
  4101  000DAC  6A3F               	clrf	HighISR@Temp16,c
  4102                           
  4103                           ;main.c: 191: Temp16 |= ADRESL;
  4104  000DAE  50C3               	movf	4035,w,c	;volatile
  4105  000DB0  123F               	iorwf	HighISR@Temp16,f,c
  4106                           
  4107                           ;main.c: 192: AccValoresAD[CanalAD] += Temp16;
  4108  000DB2  5021               	movf	HighISR@CanalAD,w,c
  4109  000DB4  0D02               	mullw	2
  4110  000DB6  0E01               	movlw	low HighISR@AccValoresAD
  4111  000DB8  24F3               	addwf	prodl,w,c
  4112  000DBA  6ED9               	movwf	fsr2l,c
  4113  000DBC  0E00               	movlw	high HighISR@AccValoresAD
  4114  000DBE  20F4               	addwfc	prodh,w,c
  4115  000DC0  6EDA               	movwf	fsr2h,c
  4116  000DC2  503F               	movf	HighISR@Temp16,w,c
  4117  000DC4  26DE               	addwf	postinc2,f,c
  4118  000DC6  5040               	movf	HighISR@Temp16+1,w,c
  4119  000DC8  22DD               	addwfc	postdec2,f,c
  4120                           
  4121                           ;main.c: 194: CanalAD++;
  4122  000DCA  2A21               	incf	HighISR@CanalAD,f,c
  4123                           
  4124                           ;main.c: 195: if(CanalAD > 3){
  4125  000DCC  0E03               	movlw	3
  4126  000DCE  6421               	cpfsgt	HighISR@CanalAD,c
  4127  000DD0  D004               	goto	i2l2830
  4128                           
  4129                           ;main.c: 196: CanalAD = 0;
  4130  000DD2  0E00               	movlw	0
  4131  000DD4  6E21               	movwf	HighISR@CanalAD,c
  4132                           
  4133                           ;main.c: 197: ContMedia++;
  4134  000DD6  2A22               	incf	HighISR@ContMedia,f,c
  4135  000DD8  D000               	goto	i2l2830
  4136  000DDA                     i2l2830:
  4137                           
  4138                           ;main.c: 198: }
  4139                           ;main.c: 199: EstadoAD = SETACANAL;
  4140  000DDA  0E00               	movlw	0
  4141  000DDC  6E23               	movwf	HighISR@EstadoAD,c
  4142                           
  4143                           ;main.c: 200: if(ContMedia == 25)
  4144  000DDE  0E19               	movlw	25
  4145  000DE0  1822               	xorwf	HighISR@ContMedia,w,c
  4146  000DE2  A4D8               	btfss	status,2,c
  4147  000DE4  D0E7               	goto	i2l140
  4148                           
  4149                           ;main.c: 201: EstadoAD = CALCULAMEDIA;
  4150  000DE6  0E03               	movlw	3
  4151  000DE8  D0D5               	goto	L4
  4152                           
  4153                           ;main.c: 202: }
  4154                           ;main.c: 203: break;
  4155  000DEA  D0E4               	goto	i2l140
  4156  000DEC                     i2l2836:
  4157                           
  4158                           ;main.c: 205: for(Temp8=0;Temp8<4;Temp8++){
  4159  000DEC  0E00               	movlw	0
  4160  000DEE  6E41               	movwf	HighISR@Temp8,c
  4161  000DF0                     i2l2838:
  4162  000DF0  0E03               	movlw	3
  4163  000DF2  6441               	cpfsgt	HighISR@Temp8,c
  4164  000DF4  D001               	goto	i2l2842
  4165  000DF6  D0CB               	goto	i2l2860
  4166  000DF8                     i2l2842:
  4167                           
  4168                           ;main.c: 206: ValoresAD[Temp8] = AccValoresAD[Temp8] / 25;
  4169  000DF8  5041               	movf	HighISR@Temp8,w,c
  4170  000DFA  0D02               	mullw	2
  4171  000DFC  0E01               	movlw	low HighISR@AccValoresAD
  4172  000DFE  24F3               	addwf	prodl,w,c
  4173  000E00  6ED9               	movwf	fsr2l,c
  4174  000E02  0E00               	movlw	high HighISR@AccValoresAD
  4175  000E04  20F4               	addwfc	prodh,w,c
  4176  000E06  6EDA               	movwf	fsr2h,c
  4177  000E08  CFDE F038          	movff	postinc2,___lwdiv@dividend
  4178  000E0C  CFDD F039          	movff	postdec2,___lwdiv@dividend+1
  4179  000E10  0E00               	movlw	0
  4180  000E12  6E3B               	movwf	___lwdiv@divisor+1,c
  4181  000E14  0E19               	movlw	25
  4182  000E16  6E3A               	movwf	___lwdiv@divisor,c
  4183  000E18  EC26  F009         	call	___lwdiv	;wreg free
  4184  000E1C  5041               	movf	HighISR@Temp8,w,c
  4185  000E1E  0D02               	mullw	2
  4186  000E20  0E19               	movlw	low _ValoresAD
  4187  000E22  24F3               	addwf	prodl,w,c
  4188  000E24  6ED9               	movwf	fsr2l,c
  4189  000E26  0E00               	movlw	high _ValoresAD
  4190  000E28  20F4               	addwfc	prodh,w,c
  4191  000E2A  6EDA               	movwf	fsr2h,c
  4192  000E2C  C038  FFDE         	movff	?___lwdiv,postinc2
  4193  000E30  C039  FFDD         	movff	?___lwdiv+1,postdec2
  4194                           
  4195                           ;main.c: 207: if(Temp8<3){
  4196  000E34  0E03               	movlw	3
  4197  000E36  6041               	cpfslt	HighISR@Temp8,c
  4198  000E38  D09C               	goto	i2l2854
  4199                           
  4200                           ;main.c: 208: ValoresAD[Temp8] += ValoresADanteriores1[Temp8];
  4201  000E3A  5041               	movf	HighISR@Temp8,w,c
  4202  000E3C  0D02               	mullw	2
  4203  000E3E  0E09               	movlw	low HighISR@ValoresADanteriores1
  4204  000E40  24F3               	addwf	prodl,w,c
  4205  000E42  6ED9               	movwf	fsr2l,c
  4206  000E44  0E00               	movlw	high HighISR@ValoresADanteriores1
  4207  000E46  20F4               	addwfc	prodh,w,c
  4208  000E48  6EDA               	movwf	fsr2h,c
  4209  000E4A  CFDE F0BF          	movff	postinc2,??_HighISR
  4210  000E4E  CFDD F0C0          	movff	postdec2,??_HighISR+1
  4211  000E52  5041               	movf	HighISR@Temp8,w,c
  4212  000E54  0D02               	mullw	2
  4213  000E56  0E19               	movlw	low _ValoresAD
  4214  000E58  24F3               	addwf	prodl,w,c
  4215  000E5A  6ED9               	movwf	fsr2l,c
  4216  000E5C  0E00               	movlw	high _ValoresAD
  4217  000E5E  20F4               	addwfc	prodh,w,c
  4218  000E60  6EDA               	movwf	fsr2h,c
  4219  000E62  0100               	movlb	0	; () banked
  4220  000E64  51BF               	movf	??_HighISR& (0+255),w,b
  4221  000E66  26DE               	addwf	postinc2,f,c
  4222  000E68  51C0               	movf	(??_HighISR+1)& (0+255),w,b
  4223  000E6A  22DD               	addwfc	postdec2,f,c
  4224                           
  4225                           ;main.c: 209: ValoresAD[Temp8] += ValoresADanteriores2[Temp8];
  4226  000E6C  5041               	movf	HighISR@Temp8,w,c
  4227  000E6E  0D02               	mullw	2
  4228  000E70  0E11               	movlw	low HighISR@ValoresADanteriores2
  4229  000E72  24F3               	addwf	prodl,w,c
  4230  000E74  6ED9               	movwf	fsr2l,c
  4231  000E76  0E00               	movlw	high HighISR@ValoresADanteriores2
  4232  000E78  20F4               	addwfc	prodh,w,c
  4233  000E7A  6EDA               	movwf	fsr2h,c
  4234  000E7C  CFDE F0BF          	movff	postinc2,??_HighISR
  4235  000E80  CFDD F0C0          	movff	postdec2,??_HighISR+1
  4236  000E84  5041               	movf	HighISR@Temp8,w,c
  4237  000E86  0D02               	mullw	2
  4238  000E88  0E19               	movlw	low _ValoresAD
  4239  000E8A  24F3               	addwf	prodl,w,c
  4240  000E8C  6ED9               	movwf	fsr2l,c
  4241  000E8E  0E00               	movlw	high _ValoresAD
  4242  000E90  20F4               	addwfc	prodh,w,c
  4243  000E92  6EDA               	movwf	fsr2h,c
  4244  000E94  0100               	movlb	0	; () banked
  4245  000E96  51BF               	movf	??_HighISR& (0+255),w,b
  4246  000E98  26DE               	addwf	postinc2,f,c
  4247  000E9A  51C0               	movf	(??_HighISR+1)& (0+255),w,b
  4248  000E9C  22DD               	addwfc	postdec2,f,c
  4249                           
  4250                           ;main.c: 210: ValoresAD[Temp8] += ValoresADanteriores3[Temp8];
  4251  000E9E  5041               	movf	HighISR@Temp8,w,c
  4252  000EA0  0D02               	mullw	2
  4253  000EA2  0EB0               	movlw	low HighISR@ValoresADanteriores3
  4254  000EA4  24F3               	addwf	prodl,w,c
  4255  000EA6  6ED9               	movwf	fsr2l,c
  4256  000EA8  0E00               	movlw	high HighISR@ValoresADanteriores3
  4257  000EAA  20F4               	addwfc	prodh,w,c
  4258  000EAC  6EDA               	movwf	fsr2h,c
  4259  000EAE  CFDE F0BF          	movff	postinc2,??_HighISR
  4260  000EB2  CFDD F0C0          	movff	postdec2,??_HighISR+1
  4261  000EB6  5041               	movf	HighISR@Temp8,w,c
  4262  000EB8  0D02               	mullw	2
  4263  000EBA  0E19               	movlw	low _ValoresAD
  4264  000EBC  24F3               	addwf	prodl,w,c
  4265  000EBE  6ED9               	movwf	fsr2l,c
  4266  000EC0  0E00               	movlw	high _ValoresAD
  4267  000EC2  20F4               	addwfc	prodh,w,c
  4268  000EC4  6EDA               	movwf	fsr2h,c
  4269  000EC6  0100               	movlb	0	; () banked
  4270  000EC8  51BF               	movf	??_HighISR& (0+255),w,b
  4271  000ECA  26DE               	addwf	postinc2,f,c
  4272  000ECC  51C0               	movf	(??_HighISR+1)& (0+255),w,b
  4273  000ECE  22DD               	addwfc	postdec2,f,c
  4274                           
  4275                           ;main.c: 211: ValoresAD[Temp8] /= 4;
  4276  000ED0  0E02               	movlw	2
  4277  000ED2  0100               	movlb	0	; () banked
  4278  000ED4  6FBF               	movwf	??_HighISR& (0+255),b
  4279  000ED6  5041               	movf	HighISR@Temp8,w,c
  4280  000ED8  0D02               	mullw	2
  4281  000EDA  0E19               	movlw	low _ValoresAD
  4282  000EDC  24F3               	addwf	prodl,w,c
  4283  000EDE  6ED9               	movwf	fsr2l,c
  4284  000EE0  0E00               	movlw	high _ValoresAD
  4285  000EE2  20F4               	addwfc	prodh,w,c
  4286  000EE4  6EDA               	movwf	fsr2h,c
  4287  000EE6  0100               	movlb	0	; () banked
  4288  000EE8  29BF               	incf	??_HighISR& (0+255),w,b
  4289  000EEA  D004               	goto	i2u241_40
  4290  000EEC                     i2u241_45:
  4291  000EEC  2AD9               	incf	fsr2l,f,c
  4292  000EEE  90D8               	bcf	status,0,c
  4293  000EF0  32DD               	rrcf	postdec2,f,c
  4294  000EF2  32DF               	rrcf	indf2,f,c
  4295  000EF4                     i2u241_40:
  4296  000EF4  2EE8               	decfsz	wreg,f,c
  4297  000EF6  D7FA               	goto	i2u241_45
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;main.c: 212: ValoresADanteriores3[Temp8] = ValoresADanteriores2[Temp8];
  4301  000EF8  5041               	movf	HighISR@Temp8,w,c
  4302  000EFA  0D02               	mullw	2
  4303  000EFC  0E11               	movlw	low HighISR@ValoresADanteriores2
  4304  000EFE  24F3               	addwf	prodl,w,c
  4305  000F00  6ED9               	movwf	fsr2l,c
  4306  000F02  0E00               	movlw	high HighISR@ValoresADanteriores2
  4307  000F04  20F4               	addwfc	prodh,w,c
  4308  000F06  6EDA               	movwf	fsr2h,c
  4309  000F08  5041               	movf	HighISR@Temp8,w,c
  4310  000F0A  0D02               	mullw	2
  4311  000F0C  0EB0               	movlw	low HighISR@ValoresADanteriores3
  4312  000F0E  24F3               	addwf	prodl,w,c
  4313  000F10  6EE1               	movwf	fsr1l,c
  4314  000F12  0E00               	movlw	high HighISR@ValoresADanteriores3
  4315  000F14  20F4               	addwfc	prodh,w,c
  4316  000F16  6EE2               	movwf	fsr1h,c
  4317  000F18  CFDE FFE6          	movff	postinc2,postinc1
  4318  000F1C  CFDD FFE5          	movff	postdec2,postdec1
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;main.c: 213: ValoresADanteriores2[Temp8] = ValoresADanteriores1[Temp8];
  4322  000F20  5041               	movf	HighISR@Temp8,w,c
  4323  000F22  0D02               	mullw	2
  4324  000F24  0E09               	movlw	low HighISR@ValoresADanteriores1
  4325  000F26  24F3               	addwf	prodl,w,c
  4326  000F28  6ED9               	movwf	fsr2l,c
  4327  000F2A  0E00               	movlw	high HighISR@ValoresADanteriores1
  4328  000F2C  20F4               	addwfc	prodh,w,c
  4329  000F2E  6EDA               	movwf	fsr2h,c
  4330  000F30  5041               	movf	HighISR@Temp8,w,c
  4331  000F32  0D02               	mullw	2
  4332  000F34  0E11               	movlw	low HighISR@ValoresADanteriores2
  4333  000F36  24F3               	addwf	prodl,w,c
  4334  000F38  6EE1               	movwf	fsr1l,c
  4335  000F3A  0E00               	movlw	high HighISR@ValoresADanteriores2
  4336  000F3C  20F4               	addwfc	prodh,w,c
  4337  000F3E  6EE2               	movwf	fsr1h,c
  4338  000F40  CFDE FFE6          	movff	postinc2,postinc1
  4339  000F44  CFDD FFE5          	movff	postdec2,postdec1
  4340                           
  4341                           ; BSR set to: 0
  4342                           ;main.c: 214: ValoresADanteriores1[Temp8] = ValoresAD[Temp8];
  4343  000F48  5041               	movf	HighISR@Temp8,w,c
  4344  000F4A  0D02               	mullw	2
  4345  000F4C  0E19               	movlw	low _ValoresAD
  4346  000F4E  24F3               	addwf	prodl,w,c
  4347  000F50  6ED9               	movwf	fsr2l,c
  4348  000F52  0E00               	movlw	high _ValoresAD
  4349  000F54  20F4               	addwfc	prodh,w,c
  4350  000F56  6EDA               	movwf	fsr2h,c
  4351  000F58  5041               	movf	HighISR@Temp8,w,c
  4352  000F5A  0D02               	mullw	2
  4353  000F5C  0E09               	movlw	low HighISR@ValoresADanteriores1
  4354  000F5E  24F3               	addwf	prodl,w,c
  4355  000F60  6EE1               	movwf	fsr1l,c
  4356  000F62  0E00               	movlw	high HighISR@ValoresADanteriores1
  4357  000F64  20F4               	addwfc	prodh,w,c
  4358  000F66  6EE2               	movwf	fsr1h,c
  4359  000F68  CFDE FFE6          	movff	postinc2,postinc1
  4360  000F6C  CFDD FFE5          	movff	postdec2,postdec1
  4361  000F70  D000               	goto	i2l2854
  4362  000F72                     i2l2854:
  4363                           
  4364                           ;main.c: 215: }
  4365                           ;main.c: 216: AccValoresAD[Temp8] = 0;
  4366  000F72  5041               	movf	HighISR@Temp8,w,c
  4367  000F74  0D02               	mullw	2
  4368  000F76  0E01               	movlw	low HighISR@AccValoresAD
  4369  000F78  24F3               	addwf	prodl,w,c
  4370  000F7A  6ED9               	movwf	fsr2l,c
  4371  000F7C  0E00               	movlw	high HighISR@AccValoresAD
  4372  000F7E  20F4               	addwfc	prodh,w,c
  4373  000F80  6EDA               	movwf	fsr2h,c
  4374  000F82  0E00               	movlw	0
  4375  000F84  6EDE               	movwf	postinc2,c
  4376  000F86  0E00               	movlw	0
  4377  000F88  6EDD               	movwf	postdec2,c
  4378  000F8A  2A41               	incf	HighISR@Temp8,f,c
  4379  000F8C  D731               	goto	i2l2838
  4380  000F8E                     i2l2860:
  4381                           
  4382                           ;main.c: 217: }
  4383                           ;main.c: 218: ContMedia = 0;
  4384  000F8E  0E00               	movlw	0
  4385  000F90  6E22               	movwf	HighISR@ContMedia,c
  4386                           
  4387                           ;main.c: 219: EstadoAD = SETACANAL;
  4388  000F92  0E00               	movlw	0
  4389  000F94                     L4:
  4390  000F94  6E23               	movwf	HighISR@EstadoAD,c
  4391                           
  4392                           ;main.c: 221: }
  4393                           
  4394                           ;main.c: 220: break;
  4395  000F96  D00E               	goto	i2l140
  4396  000F98                     i2l2864:
  4397  000F98  5023               	movf	HighISR@EstadoAD,w,c
  4398                           
  4399                           ; Switch size 1, requested type "space"
  4400                           ; Number of cases is 4, Range of values is 0 to 3
  4401                           ; switch strategies available:
  4402                           ; Name         Instructions Cycles
  4403                           ; simple_byte           13     7 (average)
  4404                           ;	Chosen strategy is simple_byte
  4405  000F9A  0A00               	xorlw	0	; case 0
  4406  000F9C  B4D8               	btfsc	status,2,c
  4407  000F9E  D6EB               	goto	i2l2804
  4408  000FA0  0A01               	xorlw	1	; case 1
  4409  000FA2  B4D8               	btfsc	status,2,c
  4410  000FA4  D6F9               	goto	i2l131
  4411  000FA6  0A03               	xorlw	3	; case 2
  4412  000FA8  B4D8               	btfsc	status,2,c
  4413  000FAA  D6F9               	goto	i2l132
  4414  000FAC  0A01               	xorlw	1	; case 3
  4415  000FAE  B4D8               	btfsc	status,2,c
  4416  000FB0  D71D               	goto	i2l2836
  4417  000FB2  D000               	goto	i2l140
  4418  000FB4                     i2l140:
  4419  000FB4  C0CE  FFF5         	movff	??_HighISR+15,tablat
  4420  000FB8  C0CD  FFF8         	movff	??_HighISR+14,tblptru
  4421  000FBC  C0CC  FFF7         	movff	??_HighISR+13,tblptrh
  4422  000FC0  C0CB  FFF6         	movff	??_HighISR+12,tblptrl
  4423  000FC4  C0CA  FFF4         	movff	??_HighISR+11,prodh
  4424  000FC8  C0C9  FFF3         	movff	??_HighISR+10,prodl
  4425  000FCC  C0C8  FFDA         	movff	??_HighISR+9,fsr2h
  4426  000FD0  C0C7  FFD9         	movff	??_HighISR+8,fsr2l
  4427  000FD4  C0C6  FFE2         	movff	??_HighISR+7,fsr1h
  4428  000FD8  C0C5  FFE1         	movff	??_HighISR+6,fsr1l
  4429  000FDC  C0C4  FFEA         	movff	??_HighISR+5,fsr0h
  4430  000FE0  C0C3  FFE9         	movff	??_HighISR+4,fsr0l
  4431  000FE4  C0C2  FFFB         	movff	??_HighISR+3,pclatu
  4432  000FE8  C0C1  FFFA         	movff	??_HighISR+2,pclath
  4433  000FEC  0011               	retfie		f
  4434  000FEE                     __end_of_HighISR:
  4435                           	opt stack 0
  4436                           pclatu	equ	0xFFB
  4437                           pclath	equ	0xFFA
  4438                           tblptru	equ	0xFF8
  4439                           tblptrh	equ	0xFF7
  4440                           tblptrl	equ	0xFF6
  4441                           tablat	equ	0xFF5
  4442                           prodh	equ	0xFF4
  4443                           prodl	equ	0xFF3
  4444                           intcon	equ	0xFF2
  4445                           intcon2	equ	0xFF1
  4446                           postinc0	equ	0xFEE
  4447                           fsr0h	equ	0xFEA
  4448                           fsr0l	equ	0xFE9
  4449                           wreg	equ	0xFE8
  4450                           postinc1	equ	0xFE6
  4451                           postdec1	equ	0xFE5
  4452                           fsr1h	equ	0xFE2
  4453                           fsr1l	equ	0xFE1
  4454                           bsr	equ	0xFE0
  4455                           indf2	equ	0xFDF
  4456                           postinc2	equ	0xFDE
  4457                           postdec2	equ	0xFDD
  4458                           fsr2h	equ	0xFDA
  4459                           fsr2l	equ	0xFD9
  4460                           status	equ	0xFD8
  4461                           
  4462 ;; *************** function ___lwdiv *****************
  4463 ;; Defined at:
  4464 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;  dividend        2   17[COMRAM] unsigned int 
  4467 ;;  divisor         2   19[COMRAM] unsigned int 
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;  quotient        2   21[COMRAM] unsigned int 
  4470 ;;  counter         1   23[COMRAM] unsigned char 
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  2   17[COMRAM] unsigned int 
  4473 ;; Registers used:
  4474 ;;		wreg, status,2, status,0
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4480 ;;      Params:         4       0       0       0       0       0       0       0       0
  4481 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4482 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4483 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4484 ;;Total ram usage:        7 bytes
  4485 ;; Hardware stack levels used:    1
  4486 ;; This function calls:
  4487 ;;		Nothing
  4488 ;; This function is called by:
  4489 ;;		_HighISR
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493                           	psect	text9
  4494  00124C                     __ptext9:
  4495                           	opt stack 0
  4496  00124C                     ___lwdiv:
  4497                           	opt stack 26
  4498                           
  4499                           ;incstack = 0
  4500  00124C  0E00               	movlw	0
  4501  00124E  6E3D               	movwf	___lwdiv@quotient+1,c
  4502  001250  0E00               	movlw	0
  4503  001252  6E3C               	movwf	___lwdiv@quotient,c
  4504  001254  503A               	movf	___lwdiv@divisor,w,c
  4505  001256  103B               	iorwf	___lwdiv@divisor+1,w,c
  4506  001258  B4D8               	btfsc	status,2,c
  4507  00125A  D021               	goto	i2l855
  4508  00125C  0E01               	movlw	1
  4509  00125E  6E3E               	movwf	___lwdiv@counter,c
  4510  001260  D005               	goto	i2l1844
  4511  001262                     i2l1842:
  4512  001262  90D8               	bcf	status,0,c
  4513  001264  363A               	rlcf	___lwdiv@divisor,f,c
  4514  001266  363B               	rlcf	___lwdiv@divisor+1,f,c
  4515  001268  2A3E               	incf	___lwdiv@counter,f,c
  4516  00126A  D000               	goto	i2l1844
  4517  00126C                     i2l1844:
  4518  00126C  BE3B               	btfsc	___lwdiv@divisor+1,7,c
  4519  00126E  D002               	goto	i2l1846
  4520  001270  D7F8               	goto	i2l1842
  4521  001272  D000               	goto	i2l1846
  4522  001274                     i2l1846:
  4523  001274  90D8               	bcf	status,0,c
  4524  001276  363C               	rlcf	___lwdiv@quotient,f,c
  4525  001278  363D               	rlcf	___lwdiv@quotient+1,f,c
  4526  00127A  503A               	movf	___lwdiv@divisor,w,c
  4527  00127C  5C38               	subwf	___lwdiv@dividend,w,c
  4528  00127E  503B               	movf	___lwdiv@divisor+1,w,c
  4529  001280  5839               	subwfb	___lwdiv@dividend+1,w,c
  4530  001282  A0D8               	btfss	status,0,c
  4531  001284  D006               	goto	i2l1854
  4532  001286  503A               	movf	___lwdiv@divisor,w,c
  4533  001288  5E38               	subwf	___lwdiv@dividend,f,c
  4534  00128A  503B               	movf	___lwdiv@divisor+1,w,c
  4535  00128C  5A39               	subwfb	___lwdiv@dividend+1,f,c
  4536  00128E  803C               	bsf	___lwdiv@quotient,0,c
  4537  001290  D000               	goto	i2l1854
  4538  001292                     i2l1854:
  4539  001292  90D8               	bcf	status,0,c
  4540  001294  323B               	rrcf	___lwdiv@divisor+1,f,c
  4541  001296  323A               	rrcf	___lwdiv@divisor,f,c
  4542  001298  2E3E               	decfsz	___lwdiv@counter,f,c
  4543  00129A  D7EC               	goto	i2l1846
  4544  00129C  D000               	goto	i2l855
  4545  00129E                     i2l855:
  4546  00129E  C03C  F038         	movff	___lwdiv@quotient,?___lwdiv
  4547  0012A2  C03D  F039         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4548  0012A6  0012               	return		;funcret
  4549  0012A8                     __end_of___lwdiv:
  4550                           	opt stack 0
  4551  0000                     pclatu	equ	0xFFB
  4552                           pclath	equ	0xFFA
  4553                           tblptru	equ	0xFF8
  4554                           tblptrh	equ	0xFF7
  4555                           tblptrl	equ	0xFF6
  4556                           tablat	equ	0xFF5
  4557                           prodh	equ	0xFF4
  4558                           prodl	equ	0xFF3
  4559                           intcon	equ	0xFF2
  4560                           intcon2	equ	0xFF1
  4561                           postinc0	equ	0xFEE
  4562                           fsr0h	equ	0xFEA
  4563                           fsr0l	equ	0xFE9
  4564                           wreg	equ	0xFE8
  4565                           postinc1	equ	0xFE6
  4566                           postdec1	equ	0xFE5
  4567                           fsr1h	equ	0xFE2
  4568                           fsr1l	equ	0xFE1
  4569                           bsr	equ	0xFE0
  4570                           indf2	equ	0xFDF
  4571                           postinc2	equ	0xFDE
  4572                           postdec2	equ	0xFDD
  4573                           fsr2h	equ	0xFDA
  4574                           fsr2l	equ	0xFD9
  4575                           status	equ	0xFD8
  4576                           pclatu	equ	0xFFB
  4577                           pclath	equ	0xFFA
  4578                           tblptru	equ	0xFF8
  4579                           tblptrh	equ	0xFF7
  4580                           tblptrl	equ	0xFF6
  4581                           tablat	equ	0xFF5
  4582                           prodh	equ	0xFF4
  4583                           prodl	equ	0xFF3
  4584                           intcon	equ	0xFF2
  4585                           intcon2	equ	0xFF1
  4586                           postinc0	equ	0xFEE
  4587                           fsr0h	equ	0xFEA
  4588                           fsr0l	equ	0xFE9
  4589                           wreg	equ	0xFE8
  4590                           postinc1	equ	0xFE6
  4591                           postdec1	equ	0xFE5
  4592                           fsr1h	equ	0xFE2
  4593                           fsr1l	equ	0xFE1
  4594                           bsr	equ	0xFE0
  4595                           indf2	equ	0xFDF
  4596                           postinc2	equ	0xFDE
  4597                           postdec2	equ	0xFDD
  4598                           fsr2h	equ	0xFDA
  4599                           fsr2l	equ	0xFD9
  4600                           status	equ	0xFD8
  4601                           
  4602                           	psect	rparam
  4603  0000                     pclatu	equ	0xFFB
  4604                           pclath	equ	0xFFA
  4605                           tblptru	equ	0xFF8
  4606                           tblptrh	equ	0xFF7
  4607                           tblptrl	equ	0xFF6
  4608                           tablat	equ	0xFF5
  4609                           prodh	equ	0xFF4
  4610                           prodl	equ	0xFF3
  4611                           intcon	equ	0xFF2
  4612                           intcon2	equ	0xFF1
  4613                           postinc0	equ	0xFEE
  4614                           fsr0h	equ	0xFEA
  4615                           fsr0l	equ	0xFE9
  4616                           wreg	equ	0xFE8
  4617                           postinc1	equ	0xFE6
  4618                           postdec1	equ	0xFE5
  4619                           fsr1h	equ	0xFE2
  4620                           fsr1l	equ	0xFE1
  4621                           bsr	equ	0xFE0
  4622                           indf2	equ	0xFDF
  4623                           postinc2	equ	0xFDE
  4624                           postdec2	equ	0xFDD
  4625                           fsr2h	equ	0xFDA
  4626                           fsr2l	equ	0xFD9
  4627                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         133
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     29      68
    BANK0           160     41     136
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___wmul
    _LerDWINram->_DelayDWIN
    _EscreverDWINram->_DelayDWIN

Critical Paths under _HighISR in COMRAM

    _HighISR->___lwdiv

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->___lldiv

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    9329
                                             29 BANK0     12    12      0
                    _EscreverDWINram
                      _Inicializacao
                         _LerDWINram
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     340
                                             27 COMRAM     2     2      0
                                             16 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     349
                                             16 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _LerDWINram                                           5     3      2     581
                                             16 BANK0      5     3      2
                          _DelayDWIN
 ---------------------------------------------------------------------------------
 (1) _Inicializacao                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EscreverDWINram                                      5     1      4    7311
                                             16 BANK0      5     1      4
                          _DelayDWIN
 ---------------------------------------------------------------------------------
 (2) _DelayDWIN                                            2     2      0      68
                                             27 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _LowISR                                              17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _HighISR                                             19    19      0     914
                                             24 COMRAM     3     3      0
                                              0 BANK0     16    16      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     248
                                             17 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EscreverDWINram
     _DelayDWIN
   _Inicializacao
   _LerDWINram
     _DelayDWIN
   ___lldiv
   ___wmul

 _LowISR (ROOT)

 _HighISR (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     29      88       5       85.0%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     1D      44       1       71.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CC      20        0.0%
DATA                 0      0      CC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon Sep 16 16:10:38 2019

              DelayDWIN@cont 0043                           bsr 000FE0          ___wmul@multiplicand 00D1  
              _Outputs10to17 0025                  __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000  
               __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000  
                        l311 0BEA                          l160 123A                          l320 0C0E  
                        l304 0BD2                          l314 0BF6                          l155 1320  
                        l323 0C1A                          l308 0BDE                          l181 1128  
                        l317 0C02                          l326 0C26                          l175 1114  
                        l184 116E                          l176 1102                          l280 0AEA  
                        l272 0AA8                          l337 12DA                          l329 0C32  
                        l274 0AD6                          l283 0AF6                          l292 0B1A  
                        l276 0ADA                          l277 0ADE                          l286 0B02  
                        l295 0B26                          l289 0B0E                          l298 0B32  
                        l792 10A2                          _IN0 0220                          _IN1 0221  
               __CFG_CPB$OFF 000000                          _PR2 000FCB                 __CFG_CPD$OFF 000000  
              _Inicializacao 1170                 __CFG_BOR$OFF 000000                          fsr2 000FD9  
                        prod 000FF3                          wreg 000FE8                 __CFG_FOSC$HS 000000  
               __CFG_LVP$OFF 000000                  main@diminui 00DE                 __CFG_WDT$OFF 000000  
                       l3010 025A                         l3002 0232                         l3100 053A  
                       l3110 0594                         l3030 02C4                         l3022 0296  
                       l3014 026E                         l3006 024C                         l3200 08FA  
                       l3112 05AE                         l3104 055A                         l3202 0914  
                       l3130 065C                         l3122 0608                         l3106 0574  
                       l3050 030E                         l3042 0300                         l3034 02D2  
                       l3026 02AA                         l3018 0288                         l3220 09C2  
                       l3212 096E                         l3140 06B6                         l3124 0622  
                       l3116 05CE                         l3310 0C22                         l3302 0C0A  
                       l3230 0A1C                         l3214 0988                         l3206 0934  
                       l3142 06D0                         l3134 067C                         l3118 05E8  
                       l3038 02E6                         l3320 0C92                         l3232 0A36  
                       l3224 09E2                         l3208 094E                         l3160 077E  
                       l3152 072A                         l3136 0696                         l3128 0642  
                       l3314 0C2E                         l3306 0C16                         l3250 0AF2  
                       l3242 0A90                         l3226 09FC                         l3218 09A8  
                       l3170 07D8                         l3154 0744                         l3146 06F0  
                       l3074 044A                         l3236 0A56                         l3172 07F2  
                       l3164 079E                         l3148 070A                         l3092 04E8  
                       l3076 0464                         l3510 0C50                         l3318 0C36  
                       l3270 0B2E                         l3262 0B16                         l3254 0AFE  
                       l3246 0AE6                         l3238 0A70                         l3190 08A0  
                       l3182 084C                         l3166 07B8                         l3158 0764  
                       l3094 0502                         l3086 04B0                  main@aumenta 00E0  
                       l2720 101C                         l3512 0C86                         l3504 0B5E  
                       l3280 0BAC                         l3184 0866                         l3176 0812  
                       l3088 04CA                         l2642 1304                         l2722 102E  
                       l3290 0BE6                         l3506 0B94                         l3274 0B3A  
                       l3266 0B22                         l3258 0B0A                         l3194 08C0  
                       l3178 082C                         l3098 0520                         l2732 108E  
                       l2724 1038                         l3508 0BA0                         l3196 08DA  
                       l3188 0886                         l2646 130C                         l2662 1222  
                       l3294 0BF2                         l3286 0BDA                         l3278 0B3E  
                       l2680 10EA                         l2658 1218                         l3298 0BFE  
                       l2668 1246                         l2684 110C                         l2950 012E  
                       l2688 111C                         l2698 114A                         l2970 0198  
                       l2962 016A                         l2954 0142                         l2990 01F6  
                       l2982 01D4                         l2974 01A6                         l2966 017E  
                       l2958 015C                         l2994 0210                         l2986 01E2  
                       l2978 01BA                         l2998 021E                         u3207 023A  
                       u3217 0276                         u3227 02B2                         u3237 02EE  
                       u3247 1312                         u3167 014A                         u3177 0186  
                       u3187 01C2                         u3197 01FE                         _OUT0 0222  
                       _OUT1 0223                         _main 00D2                         fsr0h 000FEA  
                       fsr1h 000FE2                         fsr0l 000FE9                         fsr2h 000FDA  
                       fsr1l 000FE1                         indf2 000FDF                         fsr2l 000FD9  
                       pclat 000FFA                         prodh 000FF4                         prodl 000FF3  
                       start 00CE                __CFG_IESO$OFF 000000              __end_of_HighISR 0FEE  
              __CFG_MCLRE$ON 000000                 ___param_bank 000010             ?_EscreverDWINram 00CF  
              __CFG_PLLDIV$1 000000                   _LerDWINram 10B4                        ?_main 0027  
             ?_Inicializacao 0027                        _CMCON 000FB4              __end_of___lldiv 10B4  
                      _T0CON 000FD5                        _T2CON 000FCA              __end_of___lwdiv 12A8  
                      i1l147 0088                        i2l131 0D98                        i2l132 0D9E  
                      i2l140 0FB4                        i2l855 129E                        _RCREG 000FAE  
                      _TMR0L 000FD6                        _SPBRG 000FAF                        _PORTA 000F80  
                      _PORTB 000F81                        _PORTC 000F82                        _PORTD 000F83  
                      _PORTE 000F84                __CFG_USBDIV$1 000000                        _TRISA 000F92  
                      _TRISB 000F93                        _TRISC 000F94                        _TRISD 000F95  
                      _TRISE 000F96                        _TXREG 000FAD                __CFG_PWRT$OFF 000000  
              __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000  
              __CFG_WRT3$OFF 000000               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
             __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000  
              __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000  
             __CFG_EBTRB$OFF 000000               __pbitbssCOMRAM 0220                        tablat 000FF5  
                      status 000FD8              __initialization 12DC                 __end_of_main 0CC0  
         __size_of_DelayDWIN 0022               LerDWINram@cont 00D3                       ??_main 00DC  
              __activetblptr 000002                   _Inputs2to9 00BE              __CFG_CCP2MX$OFF 000000  
                     _ADCON0 000FC2                       _ADCON1 000FC1                       _ADCON2 000FC0  
                     _ADRESH 000FC4                       _ADRESL 000FC3                       _CCPR2L 000FBB  
                     i2l1842 1262                       i2l2810 0D94                       i2l1844 126C  
                     i2l2804 0D76                       i2l1854 1292                       i2l1846 1274  
                     i2l2830 0DDA                       i2l2808 0D88                       i2l2842 0DF8  
                     i2l2860 0F8E                       i2l2836 0DEC                       i2l2854 0F72  
                     i2l2838 0DF0                       i2l2864 0F98                    ??_HighISR 00BF  
                     _SPBRGH 000FB0                       _LowISR 0018               __CFG_XINST$OFF 000000  
                     ___wmul 12A8                    ??___lldiv 0042                    ??___lwdiv 003C  
            ??_Inicializacao 0042                       clear_0 12E2                       clear_1 12F0  
                ?_LerDWINram 00CF         EscreverDWINram@valor 00D1                 LowISR@Indice 0024  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
          __end_of_DelayDWIN 1322                   __accesstop 0060      __end_of__initialization 12F6  
            __CFG_PBADEN$OFF 000000                ___rparam_used 000001               __pcstackCOMRAM 0027  
           HighISR@ContMedia 0022         LerDWINram@VPrecebido 00D1                   __pbssBANK0 0060  
        __size_of_LerDWINram 00BC                      ?_LowISR 0027                      ?___wmul 00CF  
                    _CCP2CON 000FBA              __CFG_VREGEN$OFF 000000           LerDWINram@endereco 00CF  
                    _HighISR 0008                      __Hparam 0000                      __Lparam 0000  
            __size_of_LowISR 00B6                      ___lldiv 0FEE              __size_of___wmul 0034  
                    ___lwdiv 124C              __CFG_STVREN$OFF 000000                HighISR@Temp16 003F  
                    __pcinit 12DC                      __ramtop 0800                      __ptext0 00D2  
                    __ptext1 12A8                      __ptext2 0FEE                      __ptext3 10B4  
                    __ptext4 1170                      __ptext5 11E0                      __ptext6 1300  
                    __ptext9 124C     __size_of_EscreverDWINram 006C                  _PressaommCA 00B8  
             __pintcode_body 0CC0         end_of_initialization 12F6                __Lmediumconst 0000  
                    int_func 0CC0              ___lldiv@divisor 00D3              ___lldiv@counter 00DB  
                  _RCSTAbits 000FAB                      postdec1 000FE5                      postdec2 000FDD  
                    postinc0 000FEE                      postinc1 000FE6                      postinc2 000FDE  
               ??_LerDWINram 0044                    _PORTAbits 000F80                    _PORTBbits 000F81  
                  _PORTCbits 000F82                  _Outputs2to9 0026                   main@imagem 00E2  
                  _TXSTAbits 000FAC           __end_of_LerDWINram 1170                    _DelayDWIN 1300  
             __end_of_LowISR 00CE               __end_of___wmul 12DC                  _BAUDCONbits 000FB8  
      __end_of_Inicializacao 11E0          start_initialization 12DC            ??_EscreverDWINram 0044  
                 ?_DelayDWIN 0027                     ??_LowISR 0027                    _SerialOut 0088  
                  _ValoresAD 0019                     ??___wmul 0042          EscreverDWINram@cont 00D3  
           __CFG_LPT1OSC$OFF 000000                  __pbssCOMRAM 0001                __pcstackBANK0 00BF  
               _Inputs10to17 00BC                 _Inputs18to25 00BD  HighISR@ValoresADanteriores1 0009  
HighISR@ValoresADanteriores2 0011  HighISR@ValoresADanteriores3 00B0                     ?_HighISR 0027  
            HighISR@EstadoAD 0023             ___lwdiv@dividend 0038                    __pintcode 0008  
                   ?___lldiv 00CF                     ?___lwdiv 0038                  __pintcodelo 0018  
           ___lwdiv@quotient 003C                 HighISR@Temp8 0041               ___wmul@product 0042  
                ??_DelayDWIN 0042                     _IPR1bits 000F9F                     _PIE1bits 000F9D  
                   i2u241_40 0EF4                     i2u241_45 0EEC                     i2u233_45 0D68  
                   i2u233_47 0D6A                     i2u234_45 0D72                     i2u234_47 0D74  
                   _PIR1bits 000F9E                     _RCONbits 000FD0             __CFG_WDTPS$32768 000000  
                 _ADCON0bits 000FC2      EscreverDWINram@endereco 00CF            ___wmul@multiplier 00CF  
                _INTCON2bits 000FF1             __size_of_HighISR 0FE6                     __Hrparam 0000  
                   _SerialIn 0060                     __Lrparam 0000               HighISR@CanalAD 0021  
           __size_of___lldiv 00C6             __size_of___lwdiv 005C              _EscreverDWINram 11E0  
            ___lwdiv@divisor 003A              ___lwdiv@counter 003E          HighISR@AccValoresAD 0001  
              __size_of_main 0BEE                     main@cont 00E6                     main@temp 00E4  
      __CFG_CPUDIV$OSC1_PLL2 000000                   _INTCONbits 000FF2                     intlevel1 0000  
                   intlevel2 0000             ___lldiv@dividend 00CF       __size_of_Inicializacao 0070  
    __end_of_EscreverDWINram 124C             ___lldiv@quotient 00D7  
