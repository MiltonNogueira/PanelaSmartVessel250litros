

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Mar 24 22:14:07 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK4,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    10                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    11                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    12                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	swtext1,local,class=CONST,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	swtext2,local,class=CONST,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	swtext3,local,class=CONST,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	swtext4,local,class=CONST,delta=2
    59                           	psect	text35,local,class=CODE,merge=1,delta=2
    60                           	psect	text36,local,class=CODE,merge=1,delta=2
    61                           	psect	text37,local,class=CODE,merge=1,delta=2
    62                           	psect	text38,local,class=CODE,merge=1,delta=2
    63                           	psect	text39,local,class=CODE,merge=1,delta=2
    64                           	psect	text40,local,class=CODE,merge=1,delta=2
    65                           	psect	text41,local,class=CODE,merge=1,delta=2
    66                           	psect	text42,local,class=CODE,merge=1,delta=2
    67                           	psect	text43,local,class=CODE,merge=1,delta=2
    68                           	psect	text44,local,class=CODE,merge=1,delta=2
    69                           	dabs	1,0x20,48,_BDT
    70                           	dabs	1,0x58,8,_CtrlTrfData
    71                           	dabs	1,0x50,8,_SetupPkt
    72                           	dabs	1,0xA0,64,_cdc_data_tx
    73                           	dabs	1,0x120,64,_cdc_data_rx
    74                           	dabs	1,0x7E,2
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  0111                     	;# 
   122  0112                     	;# 
   123  0113                     	;# 
   124  0114                     	;# 
   125  0115                     	;# 
   126  0116                     	;# 
   127  0117                     	;# 
   128  0118                     	;# 
   129  0119                     	;# 
   130  011D                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  018E                     	;# 
   134  0191                     	;# 
   135  0191                     	;# 
   136  0192                     	;# 
   137  0193                     	;# 
   138  0193                     	;# 
   139  0194                     	;# 
   140  0195                     	;# 
   141  0196                     	;# 
   142  0197                     	;# 
   143  0199                     	;# 
   144  019A                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019C                     	;# 
   148  019D                     	;# 
   149  019E                     	;# 
   150  019F                     	;# 
   151  020C                     	;# 
   152  020D                     	;# 
   153  0211                     	;# 
   154  0211                     	;# 
   155  0212                     	;# 
   156  0212                     	;# 
   157  0213                     	;# 
   158  0213                     	;# 
   159  0214                     	;# 
   160  0214                     	;# 
   161  0215                     	;# 
   162  0215                     	;# 
   163  0215                     	;# 
   164  0216                     	;# 
   165  0216                     	;# 
   166  0217                     	;# 
   167  0217                     	;# 
   168  0391                     	;# 
   169  0392                     	;# 
   170  0393                     	;# 
   171  0394                     	;# 
   172  0395                     	;# 
   173  0396                     	;# 
   174  039A                     	;# 
   175  039B                     	;# 
   176  0611                     	;# 
   177  0612                     	;# 
   178  0613                     	;# 
   179  0613                     	;# 
   180  0614                     	;# 
   181  0615                     	;# 
   182  0616                     	;# 
   183  0616                     	;# 
   184  0691                     	;# 
   185  0692                     	;# 
   186  0693                     	;# 
   187  0694                     	;# 
   188  0695                     	;# 
   189  0E8E                     	;# 
   190  0E8F                     	;# 
   191  0E90                     	;# 
   192  0E91                     	;# 
   193  0E92                     	;# 
   194  0E93                     	;# 
   195  0E94                     	;# 
   196  0E94                     	;# 
   197  0E95                     	;# 
   198  0E96                     	;# 
   199  0E97                     	;# 
   200  0E98                     	;# 
   201  0E99                     	;# 
   202  0E9A                     	;# 
   203  0E9B                     	;# 
   204  0E9C                     	;# 
   205  0E9D                     	;# 
   206  0E9E                     	;# 
   207  0E9F                     	;# 
   208  0FE4                     	;# 
   209  0FE5                     	;# 
   210  0FE6                     	;# 
   211  0FE7                     	;# 
   212  0FE8                     	;# 
   213  0FE9                     	;# 
   214  0FEA                     	;# 
   215  0FEB                     	;# 
   216  0FED                     	;# 
   217  0FEE                     	;# 
   218  0FEF                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  0091                     	;# 
   249  0092                     	;# 
   250  0095                     	;# 
   251  0096                     	;# 
   252  0097                     	;# 
   253  0098                     	;# 
   254  0099                     	;# 
   255  009A                     	;# 
   256  009B                     	;# 
   257  009B                     	;# 
   258  009C                     	;# 
   259  009D                     	;# 
   260  009E                     	;# 
   261  009F                     	;# 
   262  010C                     	;# 
   263  010D                     	;# 
   264  010E                     	;# 
   265  0111                     	;# 
   266  0112                     	;# 
   267  0113                     	;# 
   268  0114                     	;# 
   269  0115                     	;# 
   270  0116                     	;# 
   271  0117                     	;# 
   272  0118                     	;# 
   273  0119                     	;# 
   274  011D                     	;# 
   275  018C                     	;# 
   276  018D                     	;# 
   277  018E                     	;# 
   278  0191                     	;# 
   279  0191                     	;# 
   280  0192                     	;# 
   281  0193                     	;# 
   282  0193                     	;# 
   283  0194                     	;# 
   284  0195                     	;# 
   285  0196                     	;# 
   286  0197                     	;# 
   287  0199                     	;# 
   288  019A                     	;# 
   289  019B                     	;# 
   290  019B                     	;# 
   291  019C                     	;# 
   292  019D                     	;# 
   293  019E                     	;# 
   294  019F                     	;# 
   295  020C                     	;# 
   296  020D                     	;# 
   297  0211                     	;# 
   298  0211                     	;# 
   299  0212                     	;# 
   300  0212                     	;# 
   301  0213                     	;# 
   302  0213                     	;# 
   303  0214                     	;# 
   304  0214                     	;# 
   305  0215                     	;# 
   306  0215                     	;# 
   307  0215                     	;# 
   308  0216                     	;# 
   309  0216                     	;# 
   310  0217                     	;# 
   311  0217                     	;# 
   312  0391                     	;# 
   313  0392                     	;# 
   314  0393                     	;# 
   315  0394                     	;# 
   316  0395                     	;# 
   317  0396                     	;# 
   318  039A                     	;# 
   319  039B                     	;# 
   320  0611                     	;# 
   321  0612                     	;# 
   322  0613                     	;# 
   323  0613                     	;# 
   324  0614                     	;# 
   325  0615                     	;# 
   326  0616                     	;# 
   327  0616                     	;# 
   328  0691                     	;# 
   329  0692                     	;# 
   330  0693                     	;# 
   331  0694                     	;# 
   332  0695                     	;# 
   333  0E8E                     	;# 
   334  0E8F                     	;# 
   335  0E90                     	;# 
   336  0E91                     	;# 
   337  0E92                     	;# 
   338  0E93                     	;# 
   339  0E94                     	;# 
   340  0E94                     	;# 
   341  0E95                     	;# 
   342  0E96                     	;# 
   343  0E97                     	;# 
   344  0E98                     	;# 
   345  0E99                     	;# 
   346  0E9A                     	;# 
   347  0E9B                     	;# 
   348  0E9C                     	;# 
   349  0E9D                     	;# 
   350  0E9E                     	;# 
   351  0E9F                     	;# 
   352  0FE4                     	;# 
   353  0FE5                     	;# 
   354  0FE6                     	;# 
   355  0FE7                     	;# 
   356  0FE8                     	;# 
   357  0FE9                     	;# 
   358  0FEA                     	;# 
   359  0FEB                     	;# 
   360  0FED                     	;# 
   361  0FEE                     	;# 
   362  0FEF                     	;# 
   363  0000                     	;# 
   364  0001                     	;# 
   365  0002                     	;# 
   366  0003                     	;# 
   367  0004                     	;# 
   368  0005                     	;# 
   369  0006                     	;# 
   370  0007                     	;# 
   371  0008                     	;# 
   372  0009                     	;# 
   373  000A                     	;# 
   374  000B                     	;# 
   375  000C                     	;# 
   376  000D                     	;# 
   377  000E                     	;# 
   378  0011                     	;# 
   379  0012                     	;# 
   380  0015                     	;# 
   381  0016                     	;# 
   382  0016                     	;# 
   383  0017                     	;# 
   384  0018                     	;# 
   385  0019                     	;# 
   386  001A                     	;# 
   387  001B                     	;# 
   388  001C                     	;# 
   389  008C                     	;# 
   390  008D                     	;# 
   391  008E                     	;# 
   392  0091                     	;# 
   393  0092                     	;# 
   394  0095                     	;# 
   395  0096                     	;# 
   396  0097                     	;# 
   397  0098                     	;# 
   398  0099                     	;# 
   399  009A                     	;# 
   400  009B                     	;# 
   401  009B                     	;# 
   402  009C                     	;# 
   403  009D                     	;# 
   404  009E                     	;# 
   405  009F                     	;# 
   406  010C                     	;# 
   407  010D                     	;# 
   408  010E                     	;# 
   409  0111                     	;# 
   410  0112                     	;# 
   411  0113                     	;# 
   412  0114                     	;# 
   413  0115                     	;# 
   414  0116                     	;# 
   415  0117                     	;# 
   416  0118                     	;# 
   417  0119                     	;# 
   418  011D                     	;# 
   419  018C                     	;# 
   420  018D                     	;# 
   421  018E                     	;# 
   422  0191                     	;# 
   423  0191                     	;# 
   424  0192                     	;# 
   425  0193                     	;# 
   426  0193                     	;# 
   427  0194                     	;# 
   428  0195                     	;# 
   429  0196                     	;# 
   430  0197                     	;# 
   431  0199                     	;# 
   432  019A                     	;# 
   433  019B                     	;# 
   434  019B                     	;# 
   435  019C                     	;# 
   436  019D                     	;# 
   437  019E                     	;# 
   438  019F                     	;# 
   439  020C                     	;# 
   440  020D                     	;# 
   441  0211                     	;# 
   442  0211                     	;# 
   443  0212                     	;# 
   444  0212                     	;# 
   445  0213                     	;# 
   446  0213                     	;# 
   447  0214                     	;# 
   448  0214                     	;# 
   449  0215                     	;# 
   450  0215                     	;# 
   451  0215                     	;# 
   452  0216                     	;# 
   453  0216                     	;# 
   454  0217                     	;# 
   455  0217                     	;# 
   456  0391                     	;# 
   457  0392                     	;# 
   458  0393                     	;# 
   459  0394                     	;# 
   460  0395                     	;# 
   461  0396                     	;# 
   462  039A                     	;# 
   463  039B                     	;# 
   464  0611                     	;# 
   465  0612                     	;# 
   466  0613                     	;# 
   467  0613                     	;# 
   468  0614                     	;# 
   469  0615                     	;# 
   470  0616                     	;# 
   471  0616                     	;# 
   472  0691                     	;# 
   473  0692                     	;# 
   474  0693                     	;# 
   475  0694                     	;# 
   476  0695                     	;# 
   477  0E8E                     	;# 
   478  0E8F                     	;# 
   479  0E90                     	;# 
   480  0E91                     	;# 
   481  0E92                     	;# 
   482  0E93                     	;# 
   483  0E94                     	;# 
   484  0E94                     	;# 
   485  0E95                     	;# 
   486  0E96                     	;# 
   487  0E97                     	;# 
   488  0E98                     	;# 
   489  0E99                     	;# 
   490  0E9A                     	;# 
   491  0E9B                     	;# 
   492  0E9C                     	;# 
   493  0E9D                     	;# 
   494  0E9E                     	;# 
   495  0E9F                     	;# 
   496  0FE4                     	;# 
   497  0FE5                     	;# 
   498  0FE6                     	;# 
   499  0FE7                     	;# 
   500  0FE8                     	;# 
   501  0FE9                     	;# 
   502  0FEA                     	;# 
   503  0FEB                     	;# 
   504  0FED                     	;# 
   505  0FEE                     	;# 
   506  0FEF                     	;# 
   507  0000                     	;# 
   508  0001                     	;# 
   509  0002                     	;# 
   510  0003                     	;# 
   511  0004                     	;# 
   512  0005                     	;# 
   513  0006                     	;# 
   514  0007                     	;# 
   515  0008                     	;# 
   516  0009                     	;# 
   517  000A                     	;# 
   518  000B                     	;# 
   519  000C                     	;# 
   520  000D                     	;# 
   521  000E                     	;# 
   522  0011                     	;# 
   523  0012                     	;# 
   524  0015                     	;# 
   525  0016                     	;# 
   526  0016                     	;# 
   527  0017                     	;# 
   528  0018                     	;# 
   529  0019                     	;# 
   530  001A                     	;# 
   531  001B                     	;# 
   532  001C                     	;# 
   533  008C                     	;# 
   534  008D                     	;# 
   535  008E                     	;# 
   536  0091                     	;# 
   537  0092                     	;# 
   538  0095                     	;# 
   539  0096                     	;# 
   540  0097                     	;# 
   541  0098                     	;# 
   542  0099                     	;# 
   543  009A                     	;# 
   544  009B                     	;# 
   545  009B                     	;# 
   546  009C                     	;# 
   547  009D                     	;# 
   548  009E                     	;# 
   549  009F                     	;# 
   550  010C                     	;# 
   551  010D                     	;# 
   552  010E                     	;# 
   553  0111                     	;# 
   554  0112                     	;# 
   555  0113                     	;# 
   556  0114                     	;# 
   557  0115                     	;# 
   558  0116                     	;# 
   559  0117                     	;# 
   560  0118                     	;# 
   561  0119                     	;# 
   562  011D                     	;# 
   563  018C                     	;# 
   564  018D                     	;# 
   565  018E                     	;# 
   566  0191                     	;# 
   567  0191                     	;# 
   568  0192                     	;# 
   569  0193                     	;# 
   570  0193                     	;# 
   571  0194                     	;# 
   572  0195                     	;# 
   573  0196                     	;# 
   574  0197                     	;# 
   575  0199                     	;# 
   576  019A                     	;# 
   577  019B                     	;# 
   578  019B                     	;# 
   579  019C                     	;# 
   580  019D                     	;# 
   581  019E                     	;# 
   582  019F                     	;# 
   583  020C                     	;# 
   584  020D                     	;# 
   585  0211                     	;# 
   586  0211                     	;# 
   587  0212                     	;# 
   588  0212                     	;# 
   589  0213                     	;# 
   590  0213                     	;# 
   591  0214                     	;# 
   592  0214                     	;# 
   593  0215                     	;# 
   594  0215                     	;# 
   595  0215                     	;# 
   596  0216                     	;# 
   597  0216                     	;# 
   598  0217                     	;# 
   599  0217                     	;# 
   600  0391                     	;# 
   601  0392                     	;# 
   602  0393                     	;# 
   603  0394                     	;# 
   604  0395                     	;# 
   605  0396                     	;# 
   606  039A                     	;# 
   607  039B                     	;# 
   608  0611                     	;# 
   609  0612                     	;# 
   610  0613                     	;# 
   611  0613                     	;# 
   612  0614                     	;# 
   613  0615                     	;# 
   614  0616                     	;# 
   615  0616                     	;# 
   616  0691                     	;# 
   617  0692                     	;# 
   618  0693                     	;# 
   619  0694                     	;# 
   620  0695                     	;# 
   621  0E8E                     	;# 
   622  0E8F                     	;# 
   623  0E90                     	;# 
   624  0E91                     	;# 
   625  0E92                     	;# 
   626  0E93                     	;# 
   627  0E94                     	;# 
   628  0E94                     	;# 
   629  0E95                     	;# 
   630  0E96                     	;# 
   631  0E97                     	;# 
   632  0E98                     	;# 
   633  0E99                     	;# 
   634  0E9A                     	;# 
   635  0E9B                     	;# 
   636  0E9C                     	;# 
   637  0E9D                     	;# 
   638  0E9E                     	;# 
   639  0E9F                     	;# 
   640  0FE4                     	;# 
   641  0FE5                     	;# 
   642  0FE6                     	;# 
   643  0FE7                     	;# 
   644  0FE8                     	;# 
   645  0FE9                     	;# 
   646  0FEA                     	;# 
   647  0FEB                     	;# 
   648  0FED                     	;# 
   649  0FEE                     	;# 
   650  0FEF                     	;# 
   651  0000                     	;# 
   652  0001                     	;# 
   653  0002                     	;# 
   654  0003                     	;# 
   655  0004                     	;# 
   656  0005                     	;# 
   657  0006                     	;# 
   658  0007                     	;# 
   659  0008                     	;# 
   660  0009                     	;# 
   661  000A                     	;# 
   662  000B                     	;# 
   663  000C                     	;# 
   664  000D                     	;# 
   665  000E                     	;# 
   666  0011                     	;# 
   667  0012                     	;# 
   668  0015                     	;# 
   669  0016                     	;# 
   670  0016                     	;# 
   671  0017                     	;# 
   672  0018                     	;# 
   673  0019                     	;# 
   674  001A                     	;# 
   675  001B                     	;# 
   676  001C                     	;# 
   677  008C                     	;# 
   678  008D                     	;# 
   679  008E                     	;# 
   680  0091                     	;# 
   681  0092                     	;# 
   682  0095                     	;# 
   683  0096                     	;# 
   684  0097                     	;# 
   685  0098                     	;# 
   686  0099                     	;# 
   687  009A                     	;# 
   688  009B                     	;# 
   689  009B                     	;# 
   690  009C                     	;# 
   691  009D                     	;# 
   692  009E                     	;# 
   693  009F                     	;# 
   694  010C                     	;# 
   695  010D                     	;# 
   696  010E                     	;# 
   697  0111                     	;# 
   698  0112                     	;# 
   699  0113                     	;# 
   700  0114                     	;# 
   701  0115                     	;# 
   702  0116                     	;# 
   703  0117                     	;# 
   704  0118                     	;# 
   705  0119                     	;# 
   706  011D                     	;# 
   707  018C                     	;# 
   708  018D                     	;# 
   709  018E                     	;# 
   710  0191                     	;# 
   711  0191                     	;# 
   712  0192                     	;# 
   713  0193                     	;# 
   714  0193                     	;# 
   715  0194                     	;# 
   716  0195                     	;# 
   717  0196                     	;# 
   718  0197                     	;# 
   719  0199                     	;# 
   720  019A                     	;# 
   721  019B                     	;# 
   722  019B                     	;# 
   723  019C                     	;# 
   724  019D                     	;# 
   725  019E                     	;# 
   726  019F                     	;# 
   727  020C                     	;# 
   728  020D                     	;# 
   729  0211                     	;# 
   730  0211                     	;# 
   731  0212                     	;# 
   732  0212                     	;# 
   733  0213                     	;# 
   734  0213                     	;# 
   735  0214                     	;# 
   736  0214                     	;# 
   737  0215                     	;# 
   738  0215                     	;# 
   739  0215                     	;# 
   740  0216                     	;# 
   741  0216                     	;# 
   742  0217                     	;# 
   743  0217                     	;# 
   744  0391                     	;# 
   745  0392                     	;# 
   746  0393                     	;# 
   747  0394                     	;# 
   748  0395                     	;# 
   749  0396                     	;# 
   750  039A                     	;# 
   751  039B                     	;# 
   752  0611                     	;# 
   753  0612                     	;# 
   754  0613                     	;# 
   755  0613                     	;# 
   756  0614                     	;# 
   757  0615                     	;# 
   758  0616                     	;# 
   759  0616                     	;# 
   760  0691                     	;# 
   761  0692                     	;# 
   762  0693                     	;# 
   763  0694                     	;# 
   764  0695                     	;# 
   765  0E8E                     	;# 
   766  0E8F                     	;# 
   767  0E90                     	;# 
   768  0E91                     	;# 
   769  0E92                     	;# 
   770  0E93                     	;# 
   771  0E94                     	;# 
   772  0E94                     	;# 
   773  0E95                     	;# 
   774  0E96                     	;# 
   775  0E97                     	;# 
   776  0E98                     	;# 
   777  0E99                     	;# 
   778  0E9A                     	;# 
   779  0E9B                     	;# 
   780  0E9C                     	;# 
   781  0E9D                     	;# 
   782  0E9E                     	;# 
   783  0E9F                     	;# 
   784  0FE4                     	;# 
   785  0FE5                     	;# 
   786  0FE6                     	;# 
   787  0FE7                     	;# 
   788  0FE8                     	;# 
   789  0FE9                     	;# 
   790  0FEA                     	;# 
   791  0FEB                     	;# 
   792  0FED                     	;# 
   793  0FEE                     	;# 
   794  0FEF                     	;# 
   795  0000                     	;# 
   796  0001                     	;# 
   797  0002                     	;# 
   798  0003                     	;# 
   799  0004                     	;# 
   800  0005                     	;# 
   801  0006                     	;# 
   802  0007                     	;# 
   803  0008                     	;# 
   804  0009                     	;# 
   805  000A                     	;# 
   806  000B                     	;# 
   807  000C                     	;# 
   808  000D                     	;# 
   809  000E                     	;# 
   810  0011                     	;# 
   811  0012                     	;# 
   812  0015                     	;# 
   813  0016                     	;# 
   814  0016                     	;# 
   815  0017                     	;# 
   816  0018                     	;# 
   817  0019                     	;# 
   818  001A                     	;# 
   819  001B                     	;# 
   820  001C                     	;# 
   821  008C                     	;# 
   822  008D                     	;# 
   823  008E                     	;# 
   824  0091                     	;# 
   825  0092                     	;# 
   826  0095                     	;# 
   827  0096                     	;# 
   828  0097                     	;# 
   829  0098                     	;# 
   830  0099                     	;# 
   831  009A                     	;# 
   832  009B                     	;# 
   833  009B                     	;# 
   834  009C                     	;# 
   835  009D                     	;# 
   836  009E                     	;# 
   837  009F                     	;# 
   838  010C                     	;# 
   839  010D                     	;# 
   840  010E                     	;# 
   841  0111                     	;# 
   842  0112                     	;# 
   843  0113                     	;# 
   844  0114                     	;# 
   845  0115                     	;# 
   846  0116                     	;# 
   847  0117                     	;# 
   848  0118                     	;# 
   849  0119                     	;# 
   850  011D                     	;# 
   851  018C                     	;# 
   852  018D                     	;# 
   853  018E                     	;# 
   854  0191                     	;# 
   855  0191                     	;# 
   856  0192                     	;# 
   857  0193                     	;# 
   858  0193                     	;# 
   859  0194                     	;# 
   860  0195                     	;# 
   861  0196                     	;# 
   862  0197                     	;# 
   863  0199                     	;# 
   864  019A                     	;# 
   865  019B                     	;# 
   866  019B                     	;# 
   867  019C                     	;# 
   868  019D                     	;# 
   869  019E                     	;# 
   870  019F                     	;# 
   871  020C                     	;# 
   872  020D                     	;# 
   873  0211                     	;# 
   874  0211                     	;# 
   875  0212                     	;# 
   876  0212                     	;# 
   877  0213                     	;# 
   878  0213                     	;# 
   879  0214                     	;# 
   880  0214                     	;# 
   881  0215                     	;# 
   882  0215                     	;# 
   883  0215                     	;# 
   884  0216                     	;# 
   885  0216                     	;# 
   886  0217                     	;# 
   887  0217                     	;# 
   888  0391                     	;# 
   889  0392                     	;# 
   890  0393                     	;# 
   891  0394                     	;# 
   892  0395                     	;# 
   893  0396                     	;# 
   894  039A                     	;# 
   895  039B                     	;# 
   896  0611                     	;# 
   897  0612                     	;# 
   898  0613                     	;# 
   899  0613                     	;# 
   900  0614                     	;# 
   901  0615                     	;# 
   902  0616                     	;# 
   903  0616                     	;# 
   904  0691                     	;# 
   905  0692                     	;# 
   906  0693                     	;# 
   907  0694                     	;# 
   908  0695                     	;# 
   909  0E8E                     	;# 
   910  0E8F                     	;# 
   911  0E90                     	;# 
   912  0E91                     	;# 
   913  0E92                     	;# 
   914  0E93                     	;# 
   915  0E94                     	;# 
   916  0E94                     	;# 
   917  0E95                     	;# 
   918  0E96                     	;# 
   919  0E97                     	;# 
   920  0E98                     	;# 
   921  0E99                     	;# 
   922  0E9A                     	;# 
   923  0E9B                     	;# 
   924  0E9C                     	;# 
   925  0E9D                     	;# 
   926  0E9E                     	;# 
   927  0E9F                     	;# 
   928  0FE4                     	;# 
   929  0FE5                     	;# 
   930  0FE6                     	;# 
   931  0FE7                     	;# 
   932  0FE8                     	;# 
   933  0FE9                     	;# 
   934  0FEA                     	;# 
   935  0FEB                     	;# 
   936  0FED                     	;# 
   937  0FEE                     	;# 
   938  0FEF                     	;# 
   939  0000                     	;# 
   940  0001                     	;# 
   941  0002                     	;# 
   942  0003                     	;# 
   943  0004                     	;# 
   944  0005                     	;# 
   945  0006                     	;# 
   946  0007                     	;# 
   947  0008                     	;# 
   948  0009                     	;# 
   949  000A                     	;# 
   950  000B                     	;# 
   951  000C                     	;# 
   952  000D                     	;# 
   953  000E                     	;# 
   954  0011                     	;# 
   955  0012                     	;# 
   956  0015                     	;# 
   957  0016                     	;# 
   958  0016                     	;# 
   959  0017                     	;# 
   960  0018                     	;# 
   961  0019                     	;# 
   962  001A                     	;# 
   963  001B                     	;# 
   964  001C                     	;# 
   965  008C                     	;# 
   966  008D                     	;# 
   967  008E                     	;# 
   968  0091                     	;# 
   969  0092                     	;# 
   970  0095                     	;# 
   971  0096                     	;# 
   972  0097                     	;# 
   973  0098                     	;# 
   974  0099                     	;# 
   975  009A                     	;# 
   976  009B                     	;# 
   977  009B                     	;# 
   978  009C                     	;# 
   979  009D                     	;# 
   980  009E                     	;# 
   981  009F                     	;# 
   982  010C                     	;# 
   983  010D                     	;# 
   984  010E                     	;# 
   985  0111                     	;# 
   986  0112                     	;# 
   987  0113                     	;# 
   988  0114                     	;# 
   989  0115                     	;# 
   990  0116                     	;# 
   991  0117                     	;# 
   992  0118                     	;# 
   993  0119                     	;# 
   994  011D                     	;# 
   995  018C                     	;# 
   996  018D                     	;# 
   997  018E                     	;# 
   998  0191                     	;# 
   999  0191                     	;# 
  1000  0192                     	;# 
  1001  0193                     	;# 
  1002  0193                     	;# 
  1003  0194                     	;# 
  1004  0195                     	;# 
  1005  0196                     	;# 
  1006  0197                     	;# 
  1007  0199                     	;# 
  1008  019A                     	;# 
  1009  019B                     	;# 
  1010  019B                     	;# 
  1011  019C                     	;# 
  1012  019D                     	;# 
  1013  019E                     	;# 
  1014  019F                     	;# 
  1015  020C                     	;# 
  1016  020D                     	;# 
  1017  0211                     	;# 
  1018  0211                     	;# 
  1019  0212                     	;# 
  1020  0212                     	;# 
  1021  0213                     	;# 
  1022  0213                     	;# 
  1023  0214                     	;# 
  1024  0214                     	;# 
  1025  0215                     	;# 
  1026  0215                     	;# 
  1027  0215                     	;# 
  1028  0216                     	;# 
  1029  0216                     	;# 
  1030  0217                     	;# 
  1031  0217                     	;# 
  1032  0391                     	;# 
  1033  0392                     	;# 
  1034  0393                     	;# 
  1035  0394                     	;# 
  1036  0395                     	;# 
  1037  0396                     	;# 
  1038  039A                     	;# 
  1039  039B                     	;# 
  1040  0611                     	;# 
  1041  0612                     	;# 
  1042  0613                     	;# 
  1043  0613                     	;# 
  1044  0614                     	;# 
  1045  0615                     	;# 
  1046  0616                     	;# 
  1047  0616                     	;# 
  1048  0691                     	;# 
  1049  0692                     	;# 
  1050  0693                     	;# 
  1051  0694                     	;# 
  1052  0695                     	;# 
  1053  0E8E                     	;# 
  1054  0E8F                     	;# 
  1055  0E90                     	;# 
  1056  0E91                     	;# 
  1057  0E92                     	;# 
  1058  0E93                     	;# 
  1059  0E94                     	;# 
  1060  0E94                     	;# 
  1061  0E95                     	;# 
  1062  0E96                     	;# 
  1063  0E97                     	;# 
  1064  0E98                     	;# 
  1065  0E99                     	;# 
  1066  0E9A                     	;# 
  1067  0E9B                     	;# 
  1068  0E9C                     	;# 
  1069  0E9D                     	;# 
  1070  0E9E                     	;# 
  1071  0E9F                     	;# 
  1072  0FE4                     	;# 
  1073  0FE5                     	;# 
  1074  0FE6                     	;# 
  1075  0FE7                     	;# 
  1076  0FE8                     	;# 
  1077  0FE9                     	;# 
  1078  0FEA                     	;# 
  1079  0FEB                     	;# 
  1080  0FED                     	;# 
  1081  0FEE                     	;# 
  1082  0FEF                     	;# 
  1083  0000                     	;# 
  1084  0001                     	;# 
  1085  0002                     	;# 
  1086  0003                     	;# 
  1087  0004                     	;# 
  1088  0005                     	;# 
  1089  0006                     	;# 
  1090  0007                     	;# 
  1091  0008                     	;# 
  1092  0009                     	;# 
  1093  000A                     	;# 
  1094  000B                     	;# 
  1095  000C                     	;# 
  1096  000D                     	;# 
  1097  000E                     	;# 
  1098  0011                     	;# 
  1099  0012                     	;# 
  1100  0015                     	;# 
  1101  0016                     	;# 
  1102  0016                     	;# 
  1103  0017                     	;# 
  1104  0018                     	;# 
  1105  0019                     	;# 
  1106  001A                     	;# 
  1107  001B                     	;# 
  1108  001C                     	;# 
  1109  008C                     	;# 
  1110  008D                     	;# 
  1111  008E                     	;# 
  1112  0091                     	;# 
  1113  0092                     	;# 
  1114  0095                     	;# 
  1115  0096                     	;# 
  1116  0097                     	;# 
  1117  0098                     	;# 
  1118  0099                     	;# 
  1119  009A                     	;# 
  1120  009B                     	;# 
  1121  009B                     	;# 
  1122  009C                     	;# 
  1123  009D                     	;# 
  1124  009E                     	;# 
  1125  009F                     	;# 
  1126  010C                     	;# 
  1127  010D                     	;# 
  1128  010E                     	;# 
  1129  0111                     	;# 
  1130  0112                     	;# 
  1131  0113                     	;# 
  1132  0114                     	;# 
  1133  0115                     	;# 
  1134  0116                     	;# 
  1135  0117                     	;# 
  1136  0118                     	;# 
  1137  0119                     	;# 
  1138  011D                     	;# 
  1139  018C                     	;# 
  1140  018D                     	;# 
  1141  018E                     	;# 
  1142  0191                     	;# 
  1143  0191                     	;# 
  1144  0192                     	;# 
  1145  0193                     	;# 
  1146  0193                     	;# 
  1147  0194                     	;# 
  1148  0195                     	;# 
  1149  0196                     	;# 
  1150  0197                     	;# 
  1151  0199                     	;# 
  1152  019A                     	;# 
  1153  019B                     	;# 
  1154  019B                     	;# 
  1155  019C                     	;# 
  1156  019D                     	;# 
  1157  019E                     	;# 
  1158  019F                     	;# 
  1159  020C                     	;# 
  1160  020D                     	;# 
  1161  0211                     	;# 
  1162  0211                     	;# 
  1163  0212                     	;# 
  1164  0212                     	;# 
  1165  0213                     	;# 
  1166  0213                     	;# 
  1167  0214                     	;# 
  1168  0214                     	;# 
  1169  0215                     	;# 
  1170  0215                     	;# 
  1171  0215                     	;# 
  1172  0216                     	;# 
  1173  0216                     	;# 
  1174  0217                     	;# 
  1175  0217                     	;# 
  1176  0391                     	;# 
  1177  0392                     	;# 
  1178  0393                     	;# 
  1179  0394                     	;# 
  1180  0395                     	;# 
  1181  0396                     	;# 
  1182  039A                     	;# 
  1183  039B                     	;# 
  1184  0611                     	;# 
  1185  0612                     	;# 
  1186  0613                     	;# 
  1187  0613                     	;# 
  1188  0614                     	;# 
  1189  0615                     	;# 
  1190  0616                     	;# 
  1191  0616                     	;# 
  1192  0691                     	;# 
  1193  0692                     	;# 
  1194  0693                     	;# 
  1195  0694                     	;# 
  1196  0695                     	;# 
  1197  0E8E                     	;# 
  1198  0E8F                     	;# 
  1199  0E90                     	;# 
  1200  0E91                     	;# 
  1201  0E92                     	;# 
  1202  0E93                     	;# 
  1203  0E94                     	;# 
  1204  0E94                     	;# 
  1205  0E95                     	;# 
  1206  0E96                     	;# 
  1207  0E97                     	;# 
  1208  0E98                     	;# 
  1209  0E99                     	;# 
  1210  0E9A                     	;# 
  1211  0E9B                     	;# 
  1212  0E9C                     	;# 
  1213  0E9D                     	;# 
  1214  0E9E                     	;# 
  1215  0E9F                     	;# 
  1216  0FE4                     	;# 
  1217  0FE5                     	;# 
  1218  0FE6                     	;# 
  1219  0FE7                     	;# 
  1220  0FE8                     	;# 
  1221  0FE9                     	;# 
  1222  0FEA                     	;# 
  1223  0FEB                     	;# 
  1224  0FED                     	;# 
  1225  0FEE                     	;# 
  1226  0FEF                     	;# 
  1227  0000                     	;# 
  1228  0001                     	;# 
  1229  0002                     	;# 
  1230  0003                     	;# 
  1231  0004                     	;# 
  1232  0005                     	;# 
  1233  0006                     	;# 
  1234  0007                     	;# 
  1235  0008                     	;# 
  1236  0009                     	;# 
  1237  000A                     	;# 
  1238  000B                     	;# 
  1239  000C                     	;# 
  1240  000D                     	;# 
  1241  000E                     	;# 
  1242  0011                     	;# 
  1243  0012                     	;# 
  1244  0015                     	;# 
  1245  0016                     	;# 
  1246  0016                     	;# 
  1247  0017                     	;# 
  1248  0018                     	;# 
  1249  0019                     	;# 
  1250  001A                     	;# 
  1251  001B                     	;# 
  1252  001C                     	;# 
  1253  008C                     	;# 
  1254  008D                     	;# 
  1255  008E                     	;# 
  1256  0091                     	;# 
  1257  0092                     	;# 
  1258  0095                     	;# 
  1259  0096                     	;# 
  1260  0097                     	;# 
  1261  0098                     	;# 
  1262  0099                     	;# 
  1263  009A                     	;# 
  1264  009B                     	;# 
  1265  009B                     	;# 
  1266  009C                     	;# 
  1267  009D                     	;# 
  1268  009E                     	;# 
  1269  009F                     	;# 
  1270  010C                     	;# 
  1271  010D                     	;# 
  1272  010E                     	;# 
  1273  0111                     	;# 
  1274  0112                     	;# 
  1275  0113                     	;# 
  1276  0114                     	;# 
  1277  0115                     	;# 
  1278  0116                     	;# 
  1279  0117                     	;# 
  1280  0118                     	;# 
  1281  0119                     	;# 
  1282  011D                     	;# 
  1283  018C                     	;# 
  1284  018D                     	;# 
  1285  018E                     	;# 
  1286  0191                     	;# 
  1287  0191                     	;# 
  1288  0192                     	;# 
  1289  0193                     	;# 
  1290  0193                     	;# 
  1291  0194                     	;# 
  1292  0195                     	;# 
  1293  0196                     	;# 
  1294  0197                     	;# 
  1295  0199                     	;# 
  1296  019A                     	;# 
  1297  019B                     	;# 
  1298  019B                     	;# 
  1299  019C                     	;# 
  1300  019D                     	;# 
  1301  019E                     	;# 
  1302  019F                     	;# 
  1303  020C                     	;# 
  1304  020D                     	;# 
  1305  0211                     	;# 
  1306  0211                     	;# 
  1307  0212                     	;# 
  1308  0212                     	;# 
  1309  0213                     	;# 
  1310  0213                     	;# 
  1311  0214                     	;# 
  1312  0214                     	;# 
  1313  0215                     	;# 
  1314  0215                     	;# 
  1315  0215                     	;# 
  1316  0216                     	;# 
  1317  0216                     	;# 
  1318  0217                     	;# 
  1319  0217                     	;# 
  1320  0391                     	;# 
  1321  0392                     	;# 
  1322  0393                     	;# 
  1323  0394                     	;# 
  1324  0395                     	;# 
  1325  0396                     	;# 
  1326  039A                     	;# 
  1327  039B                     	;# 
  1328  0611                     	;# 
  1329  0612                     	;# 
  1330  0613                     	;# 
  1331  0613                     	;# 
  1332  0614                     	;# 
  1333  0615                     	;# 
  1334  0616                     	;# 
  1335  0616                     	;# 
  1336  0691                     	;# 
  1337  0692                     	;# 
  1338  0693                     	;# 
  1339  0694                     	;# 
  1340  0695                     	;# 
  1341  0E8E                     	;# 
  1342  0E8F                     	;# 
  1343  0E90                     	;# 
  1344  0E91                     	;# 
  1345  0E92                     	;# 
  1346  0E93                     	;# 
  1347  0E94                     	;# 
  1348  0E94                     	;# 
  1349  0E95                     	;# 
  1350  0E96                     	;# 
  1351  0E97                     	;# 
  1352  0E98                     	;# 
  1353  0E99                     	;# 
  1354  0E9A                     	;# 
  1355  0E9B                     	;# 
  1356  0E9C                     	;# 
  1357  0E9D                     	;# 
  1358  0E9E                     	;# 
  1359  0E9F                     	;# 
  1360  0FE4                     	;# 
  1361  0FE5                     	;# 
  1362  0FE6                     	;# 
  1363  0FE7                     	;# 
  1364  0FE8                     	;# 
  1365  0FE9                     	;# 
  1366  0FEA                     	;# 
  1367  0FEB                     	;# 
  1368  0FED                     	;# 
  1369  0FEE                     	;# 
  1370  0FEF                     	;# 
  1371  0000                     	;# 
  1372  0001                     	;# 
  1373  0002                     	;# 
  1374  0003                     	;# 
  1375  0004                     	;# 
  1376  0005                     	;# 
  1377  0006                     	;# 
  1378  0007                     	;# 
  1379  0008                     	;# 
  1380  0009                     	;# 
  1381  000A                     	;# 
  1382  000B                     	;# 
  1383  000C                     	;# 
  1384  000D                     	;# 
  1385  000E                     	;# 
  1386  0011                     	;# 
  1387  0012                     	;# 
  1388  0015                     	;# 
  1389  0016                     	;# 
  1390  0016                     	;# 
  1391  0017                     	;# 
  1392  0018                     	;# 
  1393  0019                     	;# 
  1394  001A                     	;# 
  1395  001B                     	;# 
  1396  001C                     	;# 
  1397  008C                     	;# 
  1398  008D                     	;# 
  1399  008E                     	;# 
  1400  0091                     	;# 
  1401  0092                     	;# 
  1402  0095                     	;# 
  1403  0096                     	;# 
  1404  0097                     	;# 
  1405  0098                     	;# 
  1406  0099                     	;# 
  1407  009A                     	;# 
  1408  009B                     	;# 
  1409  009B                     	;# 
  1410  009C                     	;# 
  1411  009D                     	;# 
  1412  009E                     	;# 
  1413  009F                     	;# 
  1414  010C                     	;# 
  1415  010D                     	;# 
  1416  010E                     	;# 
  1417  0111                     	;# 
  1418  0112                     	;# 
  1419  0113                     	;# 
  1420  0114                     	;# 
  1421  0115                     	;# 
  1422  0116                     	;# 
  1423  0117                     	;# 
  1424  0118                     	;# 
  1425  0119                     	;# 
  1426  011D                     	;# 
  1427  018C                     	;# 
  1428  018D                     	;# 
  1429  018E                     	;# 
  1430  0191                     	;# 
  1431  0191                     	;# 
  1432  0192                     	;# 
  1433  0193                     	;# 
  1434  0193                     	;# 
  1435  0194                     	;# 
  1436  0195                     	;# 
  1437  0196                     	;# 
  1438  0197                     	;# 
  1439  0199                     	;# 
  1440  019A                     	;# 
  1441  019B                     	;# 
  1442  019B                     	;# 
  1443  019C                     	;# 
  1444  019D                     	;# 
  1445  019E                     	;# 
  1446  019F                     	;# 
  1447  020C                     	;# 
  1448  020D                     	;# 
  1449  0211                     	;# 
  1450  0211                     	;# 
  1451  0212                     	;# 
  1452  0212                     	;# 
  1453  0213                     	;# 
  1454  0213                     	;# 
  1455  0214                     	;# 
  1456  0214                     	;# 
  1457  0215                     	;# 
  1458  0215                     	;# 
  1459  0215                     	;# 
  1460  0216                     	;# 
  1461  0216                     	;# 
  1462  0217                     	;# 
  1463  0217                     	;# 
  1464  0391                     	;# 
  1465  0392                     	;# 
  1466  0393                     	;# 
  1467  0394                     	;# 
  1468  0395                     	;# 
  1469  0396                     	;# 
  1470  039A                     	;# 
  1471  039B                     	;# 
  1472  0611                     	;# 
  1473  0612                     	;# 
  1474  0613                     	;# 
  1475  0613                     	;# 
  1476  0614                     	;# 
  1477  0615                     	;# 
  1478  0616                     	;# 
  1479  0616                     	;# 
  1480  0691                     	;# 
  1481  0692                     	;# 
  1482  0693                     	;# 
  1483  0694                     	;# 
  1484  0695                     	;# 
  1485  0E8E                     	;# 
  1486  0E8F                     	;# 
  1487  0E90                     	;# 
  1488  0E91                     	;# 
  1489  0E92                     	;# 
  1490  0E93                     	;# 
  1491  0E94                     	;# 
  1492  0E94                     	;# 
  1493  0E95                     	;# 
  1494  0E96                     	;# 
  1495  0E97                     	;# 
  1496  0E98                     	;# 
  1497  0E99                     	;# 
  1498  0E9A                     	;# 
  1499  0E9B                     	;# 
  1500  0E9C                     	;# 
  1501  0E9D                     	;# 
  1502  0E9E                     	;# 
  1503  0E9F                     	;# 
  1504  0FE4                     	;# 
  1505  0FE5                     	;# 
  1506  0FE6                     	;# 
  1507  0FE7                     	;# 
  1508  0FE8                     	;# 
  1509  0FE9                     	;# 
  1510  0FEA                     	;# 
  1511  0FEB                     	;# 
  1512  0FED                     	;# 
  1513  0FEE                     	;# 
  1514  0FEF                     	;# 
  1515                           
  1516                           	psect	idataBANK4
  1517  08E1                     __pidataBANK4:	
  1518                           
  1519                           ;initializer for _buttonMessage
  1520  08E1  3442               	retlw	66
  1521  08E2  3475               	retlw	117
  1522  08E3  3474               	retlw	116
  1523  08E4  3474               	retlw	116
  1524  08E5  346F               	retlw	111
  1525  08E6  346E               	retlw	110
  1526  08E7  3420               	retlw	32
  1527  08E8  3470               	retlw	112
  1528  08E9  3472               	retlw	114
  1529  08EA  3465               	retlw	101
  1530  08EB  3473               	retlw	115
  1531  08EC  3473               	retlw	115
  1532  08ED  3465               	retlw	101
  1533  08EE  3464               	retlw	100
  1534  08EF  342E               	retlw	46
  1535  08F0  340D               	retlw	13
  1536  08F1  340A               	retlw	10
  1537  08F2  3400               	retlw	0
  1538                           
  1539                           	psect	stringtext
  1540  0400                     __pstringtext:	
  1541  0400                     _USB_SD_Ptr:	
  1542  0400  34C5               	retlw	low (_sd000| (0+32768))
  1543  0401  3484               	retlw	high (_sd000| (0+32768))
  1544  0402  344B               	retlw	low (_sd001| (0+32768))
  1545  0403  3484               	retlw	high (_sd001| (0+32768))
  1546  0404  347F               	retlw	low (_sd002| (0+32768))
  1547  0405  3484               	retlw	high (_sd002| (0+32768))
  1548  0406                     __end_of_USB_SD_Ptr:	
  1549  0406                     _USB_CD_Ptr:	
  1550  0406  3408               	retlw	low (_configDescriptor1| (0+32768))
  1551  0407  3484               	retlw	high (_configDescriptor1| (0+32768))
  1552  0408                     __end_of_USB_CD_Ptr:	
  1553  0408                     _configDescriptor1:	
  1554  0408  3409               	retlw	9
  1555  0409  3402               	retlw	2
  1556  040A  3443               	retlw	67
  1557  040B  3400               	retlw	0
  1558  040C  3402               	retlw	2
  1559  040D  3401               	retlw	1
  1560  040E  3400               	retlw	0
  1561  040F  34C0               	retlw	192
  1562  0410  3432               	retlw	50
  1563  0411  3409               	retlw	9
  1564  0412  3404               	retlw	4
  1565  0413  3400               	retlw	0
  1566  0414  3400               	retlw	0
  1567  0415  3401               	retlw	1
  1568  0416  3402               	retlw	2
  1569  0417  3402               	retlw	2
  1570  0418  3401               	retlw	1
  1571  0419  3400               	retlw	0
  1572  041A  3405               	retlw	5
  1573  041B  3424               	retlw	36
  1574  041C  3400               	retlw	0
  1575  041D  3410               	retlw	16
  1576  041E  3401               	retlw	1
  1577  041F  3404               	retlw	4
  1578  0420  3424               	retlw	36
  1579  0421  3402               	retlw	2
  1580  0422  3402               	retlw	2
  1581  0423  3405               	retlw	5
  1582  0424  3424               	retlw	36
  1583  0425  3406               	retlw	6
  1584  0426  3400               	retlw	0
  1585  0427  3401               	retlw	1
  1586  0428  3405               	retlw	5
  1587  0429  3424               	retlw	36
  1588  042A  3401               	retlw	1
  1589  042B  3400               	retlw	0
  1590  042C  3401               	retlw	1
  1591  042D  3407               	retlw	7
  1592  042E  3405               	retlw	5
  1593  042F  3481               	retlw	129
  1594  0430  3403               	retlw	3
  1595  0431  3408               	retlw	8
  1596  0432  3400               	retlw	0
  1597  0433  3402               	retlw	2
  1598  0434  3409               	retlw	9
  1599  0435  3404               	retlw	4
  1600  0436  3401               	retlw	1
  1601  0437  3400               	retlw	0
  1602  0438  3402               	retlw	2
  1603  0439  340A               	retlw	10
  1604  043A  3400               	retlw	0
  1605  043B  3400               	retlw	0
  1606  043C  3400               	retlw	0
  1607  043D  3407               	retlw	7
  1608  043E  3405               	retlw	5
  1609  043F  3402               	retlw	2
  1610  0440  3402               	retlw	2
  1611  0441  3440               	retlw	64
  1612  0442  3400               	retlw	0
  1613  0443  3400               	retlw	0
  1614  0444  3407               	retlw	7
  1615  0445  3405               	retlw	5
  1616  0446  3482               	retlw	130
  1617  0447  3402               	retlw	2
  1618  0448  3440               	retlw	64
  1619  0449  3400               	retlw	0
  1620  044A  3400               	retlw	0
  1621  044B                     __end_of_configDescriptor1:	
  1622  044B                     _sd001:	
  1623  044B  3434               	retlw	52
  1624  044C  3403               	retlw	3
  1625  044D  344D               	retlw	77
  1626  044E  3400               	retlw	0
  1627  044F  3469               	retlw	105
  1628  0450  3400               	retlw	0
  1629  0451  3463               	retlw	99
  1630  0452  3400               	retlw	0
  1631  0453  3472               	retlw	114
  1632  0454  3400               	retlw	0
  1633  0455  346F               	retlw	111
  1634  0456  3400               	retlw	0
  1635  0457  3463               	retlw	99
  1636  0458  3400               	retlw	0
  1637  0459  3468               	retlw	104
  1638  045A  3400               	retlw	0
  1639  045B  3469               	retlw	105
  1640  045C  3400               	retlw	0
  1641  045D  3470               	retlw	112
  1642  045E  3400               	retlw	0
  1643  045F  3420               	retlw	32
  1644  0460  3400               	retlw	0
  1645  0461  3454               	retlw	84
  1646  0462  3400               	retlw	0
  1647  0463  3465               	retlw	101
  1648  0464  3400               	retlw	0
  1649  0465  3463               	retlw	99
  1650  0466  3400               	retlw	0
  1651  0467  3468               	retlw	104
  1652  0468  3400               	retlw	0
  1653  0469  346E               	retlw	110
  1654  046A  3400               	retlw	0
  1655  046B  346F               	retlw	111
  1656  046C  3400               	retlw	0
  1657  046D  346C               	retlw	108
  1658  046E  3400               	retlw	0
  1659  046F  346F               	retlw	111
  1660  0470  3400               	retlw	0
  1661  0471  3467               	retlw	103
  1662  0472  3400               	retlw	0
  1663  0473  3479               	retlw	121
  1664  0474  3400               	retlw	0
  1665  0475  3420               	retlw	32
  1666  0476  3400               	retlw	0
  1667  0477  3449               	retlw	73
  1668  0478  3400               	retlw	0
  1669  0479  346E               	retlw	110
  1670  047A  3400               	retlw	0
  1671  047B  3463               	retlw	99
  1672  047C  3400               	retlw	0
  1673  047D  342E               	retlw	46
  1674  047E  3400               	retlw	0
  1675  047F                     __end_of_sd001:	
  1676  047F                     _sd002:	
  1677  047F  3434               	retlw	52
  1678  0480  3403               	retlw	3
  1679  0481  3443               	retlw	67
  1680  0482  3400               	retlw	0
  1681  0483  3444               	retlw	68
  1682  0484  3400               	retlw	0
  1683  0485  3443               	retlw	67
  1684  0486  3400               	retlw	0
  1685  0487  3420               	retlw	32
  1686  0488  3400               	retlw	0
  1687  0489  3452               	retlw	82
  1688  048A  3400               	retlw	0
  1689  048B  3453               	retlw	83
  1690  048C  3400               	retlw	0
  1691  048D  342D               	retlw	45
  1692  048E  3400               	retlw	0
  1693  048F  3432               	retlw	50
  1694  0490  3400               	retlw	0
  1695  0491  3433               	retlw	51
  1696  0492  3400               	retlw	0
  1697  0493  3432               	retlw	50
  1698  0494  3400               	retlw	0
  1699  0495  3420               	retlw	32
  1700  0496  3400               	retlw	0
  1701  0497  3445               	retlw	69
  1702  0498  3400               	retlw	0
  1703  0499  346D               	retlw	109
  1704  049A  3400               	retlw	0
  1705  049B  3475               	retlw	117
  1706  049C  3400               	retlw	0
  1707  049D  346C               	retlw	108
  1708  049E  3400               	retlw	0
  1709  049F  3461               	retlw	97
  1710  04A0  3400               	retlw	0
  1711  04A1  3474               	retlw	116
  1712  04A2  3400               	retlw	0
  1713  04A3  3469               	retlw	105
  1714  04A4  3400               	retlw	0
  1715  04A5  346F               	retlw	111
  1716  04A6  3400               	retlw	0
  1717  04A7  346E               	retlw	110
  1718  04A8  3400               	retlw	0
  1719  04A9  3420               	retlw	32
  1720  04AA  3400               	retlw	0
  1721  04AB  3444               	retlw	68
  1722  04AC  3400               	retlw	0
  1723  04AD  3465               	retlw	101
  1724  04AE  3400               	retlw	0
  1725  04AF  346D               	retlw	109
  1726  04B0  3400               	retlw	0
  1727  04B1  346F               	retlw	111
  1728  04B2  3400               	retlw	0
  1729  04B3                     __end_of_sd002:	
  1730  04B3                     _device_dsc:	
  1731  04B3  3412               	retlw	18
  1732  04B4  3401               	retlw	1
  1733  04B5  3400               	retlw	0
  1734  04B6  3402               	retlw	2
  1735  04B7  3402               	retlw	2
  1736  04B8  3400               	retlw	0
  1737  04B9  3400               	retlw	0
  1738  04BA  3408               	retlw	8
  1739  04BB  34D8               	retlw	216
  1740  04BC  3404               	retlw	4
  1741  04BD  340A               	retlw	10
  1742  04BE  3400               	retlw	0
  1743  04BF  3400               	retlw	0
  1744  04C0  3401               	retlw	1
  1745  04C1  3401               	retlw	1
  1746  04C2  3402               	retlw	2
  1747  04C3  3400               	retlw	0
  1748  04C4  3401               	retlw	1
  1749  04C5                     __end_of_device_dsc:	
  1750  04C5                     _sd000:	
  1751  04C5  3404               	retlw	4
  1752  04C6  3403               	retlw	3
  1753  04C7  3409               	retlw	9
  1754  04C8  3404               	retlw	4
  1755  04C9                     __end_of_sd000:	
  1756  000B                     _INTCONbits	set	11
  1757  0012                     _PIR2bits	set	18
  1758  000C                     _PORTAbits	set	12
  1759  009D                     _ADCON0	set	157
  1760  009D                     _ADCON0bits	set	157
  1761  009E                     _ADCON1	set	158
  1762  009F                     _ADCON2	set	159
  1763  009C                     _ADRESH	set	156
  1764  009B                     _ADRESL	set	155
  1765  0092                     _PIE2bits	set	146
  1766  008D                     _TRISBbits	set	141
  1767  008E                     _TRISCbits	set	142
  1768  010E                     _LATCbits	set	270
  1769  018D                     _ANSELBbits	set	397
  1770  0E96                     _UADDR	set	3734
  1771  0E91                     _UCFG	set	3729
  1772  0E8E                     _UCON	set	3726
  1773  0E8E                     _UCONbits	set	3726
  1774  0E97                     _UEIE	set	3735
  1775  0E93                     _UEIR	set	3731
  1776  0E98                     _UEP0bits	set	3736
  1777  0E92                     _UIE	set	3730
  1778  0E92                     _UIEbits	set	3730
  1779  0E90                     _UIR	set	3728
  1780  0E90                     _UIRbits	set	3728
  1781  0E8F                     _USTAT	set	3727
  1782  0E98                     _UEP0	set	3736
  1783  0E99                     _UEP1	set	3737
  1784                           
  1785                           ; #config settings
  1786  0000                     
  1787                           	psect	cinit
  1788  0012                     start_initialization:	
  1789  0012                     __initialization:	
  1790                           
  1791                           ; Clear objects allocated to BANK1
  1792  0012  30E8               	movlw	low __pbssBANK1
  1793  0013  0084               	movwf	4
  1794  0014  3000               	movlw	high __pbssBANK1
  1795  0015  0085               	movwf	5
  1796  0016  3007               	movlw	7
  1797  0017  3183  23F8  3180   	fcall	clear_ram0
  1798                           
  1799                           ; Clear objects allocated to BANK3
  1800  001A  30A0               	movlw	low __pbssBANK3
  1801  001B  0084               	movwf	4
  1802  001C  3001               	movlw	high __pbssBANK3
  1803  001D  0085               	movwf	5
  1804  001E  304B               	movlw	75
  1805  001F  3183  23F8  3180   	fcall	clear_ram0
  1806                           
  1807                           ; Clear objects allocated to BANK4
  1808  0022  3032               	movlw	low __pbssBANK4
  1809  0023  0084               	movwf	4
  1810  0024  3002               	movlw	high __pbssBANK4
  1811  0025  0085               	movwf	5
  1812  0026  300A               	movlw	10
  1813  0027  3183  23F8  3180   	fcall	clear_ram0
  1814                           
  1815                           ; Clear objects allocated to BANK5
  1816  002A  30A0               	movlw	low __pbssBANK5
  1817  002B  0084               	movwf	4
  1818  002C  3002               	movlw	high __pbssBANK5
  1819  002D  0085               	movwf	5
  1820  002E  3040               	movlw	64
  1821  002F  3183  23F8  3180   	fcall	clear_ram0
  1822                           
  1823                           ; Clear objects allocated to BANK6
  1824  0032  3020               	movlw	low __pbssBANK6
  1825  0033  0084               	movwf	4
  1826  0034  3003               	movlw	high __pbssBANK6
  1827  0035  0085               	movwf	5
  1828  0036  3040               	movlw	64
  1829  0037  3183  23F8  3180   	fcall	clear_ram0
  1830                           
  1831                           ; Initialize objects allocated to BANK4
  1832  003A  30E1               	movlw	low __pidataBANK4
  1833  003B  0084               	movwf	4
  1834  003C  3088               	movlw	(high __pidataBANK4)| (0+128)
  1835  003D  0085               	movwf	5
  1836  003E  3020               	movlw	low __pdataBANK4
  1837  003F  0086               	movwf	6
  1838  0040  3002               	movlw	high __pdataBANK4
  1839  0041  0087               	movwf	7
  1840  0042  3012               	movlw	18
  1841  0043  3188  20D0         	fcall	init_ram
  1842  0045                     end_of_initialization:	
  1843                           ;End of C runtime variable initialization code
  1844                           
  1845  0045                     __end_of__initialization:	
  1846  0045  0020               	movlb	0
  1847  0046  3189  2906         	ljmp	_main	;jump to C main() function
  1848                           
  1849                           	psect	bssBANK1
  1850  00E8                     __pbssBANK1:	
  1851  00E8                     _pBDTEntryEP0OutCurrent:	
  1852  00E8                     	ds	1
  1853  00E9                     _pBDTEntryEP0OutNext:	
  1854  00E9                     	ds	1
  1855  00EA                     _inPipes:	
  1856  00EA                     	ds	5
  1857                           
  1858                           	psect	bssBANK3
  1859  01A0                     __pbssBANK3:	
  1860  01A0                     _outPipes:	
  1861  01A0                     	ds	7
  1862  01A7                     _BaudRateGen:	
  1863  01A7                     	ds	4
  1864  01AB                     _USB1msTickCount:	
  1865  01AB                     	ds	4
  1866  01AF                     _ep_data_in:	
  1867  01AF                     	ds	3
  1868  01B2                     _ep_data_out:	
  1869  01B2                     	ds	3
  1870  01B5                     _pBDTEntryIn:	
  1871  01B5                     	ds	3
  1872  01B8                     _pBDTEntryOut:	
  1873  01B8                     	ds	3
  1874  01BB                     APP_LEDUpdateUSBStatus@ledCount:	
  1875  01BB                     	ds	2
  1876  01BD                     _pCDCDst:	
  1877  01BD                     	ds	2
  1878  01BF                     _pCDCSrc:	
  1879  01BF                     	ds	2
  1880  01C1                     _BothEP0OutUOWNsSet:	
  1881  01C1                     	ds	1
  1882  01C2                     _CDCDataInHandle:	
  1883  01C2                     	ds	1
  1884  01C3                     _CDCDataOutHandle:	
  1885  01C3                     	ds	1
  1886  01C4                     _RemoteWakeup:	
  1887  01C4                     	ds	1
  1888  01C5                     _USBBusIsSuspended:	
  1889  01C5                     	ds	1
  1890  01C6                     _USBDeferINDataStagePackets:	
  1891  01C6                     	ds	1
  1892  01C7                     _USBDeferOUTDataStagePackets:	
  1893  01C7                     	ds	1
  1894  01C8                     _USBDeferStatusStagePacket:	
  1895  01C8                     	ds	1
  1896  01C9                     _USBDeviceState:	
  1897  01C9                     	ds	1
  1898  01CA                     _USBStatusStageEnabledFlag1:	
  1899  01CA                     	ds	1
  1900  01CB                     _USBStatusStageEnabledFlag2:	
  1901  01CB                     	ds	1
  1902  01CC                     _USBStatusStageTimeoutCounter:	
  1903  01CC                     	ds	1
  1904  01CD                     _USBTicksSinceSuspendEnd:	
  1905  01CD                     	ds	1
  1906  01CE                     _buttonPressed:	
  1907  01CE                     	ds	1
  1908  01CF                     _cdc_mem_type:	
  1909  01CF                     	ds	1
  1910  01D0                     _cdc_rx_len:	
  1911  01D0                     	ds	1
  1912  01D1                     _cdc_trf_state:	
  1913  01D1                     	ds	1
  1914  01D2                     _cdc_tx_len:	
  1915  01D2                     	ds	1
  1916  01D3                     _controlTransferState:	
  1917  01D3                     	ds	1
  1918  01D4                     _control_signal_bitmap:	
  1919  01D4                     	ds	1
  1920  01D5                     _endpoint_number:	
  1921  01D5                     	ds	1
  1922  01D6                     _pDst:	
  1923  01D6                     	ds	1
  1924  01D7                     _shortPacketStatus:	
  1925  01D7                     	ds	1
  1926  01D8                     _dummy_encapsulated_cmd_response:	
  1927  01D8                     	ds	8
  1928  01E0                     _line_coding:	
  1929  01E0                     	ds	7
  1930  01E7                     _USBAlternateInterface:	
  1931  01E7                     	ds	2
  1932  01E9                     _USBActiveConfiguration:	
  1933  01E9                     	ds	1
  1934  01EA                     _USTATcopy:	
  1935  01EA                     	ds	1
  1936                           
  1937                           	psect	bssBANK4
  1938  0232                     __pbssBANK4:	
  1939  0232                     _cdc_notice:	
  1940  0232                     	ds	10
  1941                           
  1942                           	psect	dataBANK4
  1943  0220                     __pdataBANK4:	
  1944  0220                     _buttonMessage:	
  1945  0220                     	ds	18
  1946                           
  1947                           	psect	bssBANK5
  1948  02A0                     __pbssBANK5:	
  1949  02A0                     _readBuffer:	
  1950  02A0                     	ds	64
  1951                           
  1952                           	psect	bssBANK6
  1953  0320                     __pbssBANK6:	
  1954  0320                     _writeBuffer:	
  1955  0320                     	ds	64
  1956                           
  1957                           	psect	clrtext
  1958  03F8                     clear_ram0:	
  1959                           ;	Called with FSR0 containing the base address, and
  1960                           ;	WREG with the size to clear
  1961                           
  1962  03F8  0064               	clrwdt	;clear the watchdog before getting into this loop
  1963  03F9                     clrloop0:	
  1964  03F9  0180               	clrf	0	;clear RAM location pointed to by FSR
  1965  03FA  3101               	addfsr 0,1
  1966  03FB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1967  03FC  2BF9               	goto	clrloop0	;have we reached the end yet?
  1968  03FD  3400               	retlw	0	;all done for this memory range, return
  1969                           
  1970                           	psect	inittext
  1971  08D0                     init_ram:	
  1972  08D0  00FE               	movwf	126
  1973  08D1                     initloop:	
  1974  08D1  0012               	moviw fsr0++
  1975  08D2  001E               	movwi fsr1++
  1976  08D3  0BFE               	decfsz	126,f
  1977  08D4  28D1               	goto	initloop
  1978  08D5  3400               	retlw	0
  1979                           
  1980                           	psect	cstackBANK3
  1981  01EB                     __pcstackBANK3:	
  1982  01EB                     APP_DeviceCDCBasicDemoTasks@numBytesRead:	
  1983                           
  1984                           ; 1 bytes @ 0x0
  1985  01EB                     	ds	1
  1986  01EC                     APP_DeviceCDCBasicDemoTasks@i:	
  1987                           
  1988                           ; 1 bytes @ 0x1
  1989  01EC                     	ds	1
  1990                           
  1991                           	psect	cstackBANK2
  1992  0160                     __pcstackBANK2:	
  1993  0160                     ??_LED_Enable:	
  1994  0160                     ??_BUTTON_Enable:	
  1995                           ; 0 bytes @ 0x0
  1996                           
  1997  0160                     ??_BUTTON_IsPressed:	
  1998                           ; 0 bytes @ 0x0
  1999                           
  2000  0160                     ??_putrsUSBUSART:	
  2001                           ; 0 bytes @ 0x0
  2002                           
  2003  0160                     ?_putUSBUSART:	
  2004                           ; 0 bytes @ 0x0
  2005                           
  2006  0160                     ??_USBDeviceInit:	
  2007                           ; 0 bytes @ 0x0
  2008                           
  2009  0160                     ??_USBDeviceAttach:	
  2010                           ; 0 bytes @ 0x0
  2011                           
  2012  0160                     ?_USBTransferOnePacket:	
  2013                           ; 0 bytes @ 0x0
  2014                           
  2015  0160                     BUTTON_IsPressed@button:	
  2016                           ; 1 bytes @ 0x0
  2017                           
  2018  0160                     BUTTON_Enable@button:	
  2019                           ; 1 bytes @ 0x0
  2020                           
  2021  0160                     LED_Enable@led:	
  2022                           ; 1 bytes @ 0x0
  2023                           
  2024  0160                     USBTransferOnePacket@dir:	
  2025                           ; 1 bytes @ 0x0
  2026                           
  2027  0160                     putUSBUSART@length:	
  2028                           ; 1 bytes @ 0x0
  2029                           
  2030                           
  2031                           ; 1 bytes @ 0x0
  2032  0160                     	ds	1
  2033  0161                     ??_putUSBUSART:	
  2034  0161                     ??_SYSTEM_Initialize:	
  2035                           ; 0 bytes @ 0x1
  2036                           
  2037  0161                     SYSTEM_Initialize@state:	
  2038                           ; 0 bytes @ 0x1
  2039                           
  2040  0161                     putrsUSBUSART@pData:	
  2041                           ; 1 bytes @ 0x1
  2042                           
  2043  0161                     USBDeviceInit@p:	
  2044                           ; 1 bytes @ 0x1
  2045                           
  2046  0161                     USBTransferOnePacket@data:	
  2047                           ; 2 bytes @ 0x1
  2048                           
  2049                           
  2050                           ; 2 bytes @ 0x1
  2051  0161                     	ds	1
  2052  0162                     putUSBUSART@data:	
  2053  0162                     putrsUSBUSART@data:	
  2054                           ; 1 bytes @ 0x2
  2055                           
  2056                           
  2057                           ; 1 bytes @ 0x2
  2058  0162                     	ds	1
  2059  0163                     USBDeviceInit@i_1199:	
  2060  0163                     USBTransferOnePacket@len:	
  2061                           ; 1 bytes @ 0x3
  2062                           
  2063  0163                     putrsUSBUSART@len:	
  2064                           ; 1 bytes @ 0x3
  2065                           
  2066                           
  2067                           ; 1 bytes @ 0x3
  2068  0163                     	ds	1
  2069  0164                     ??_USBTransferOnePacket:	
  2070  0164                     USBDeviceInit@i:	
  2071                           ; 0 bytes @ 0x4
  2072                           
  2073                           
  2074                           ; 1 bytes @ 0x4
  2075  0164                     	ds	2
  2076  0166                     USBTransferOnePacket@ep:	
  2077                           
  2078                           ; 1 bytes @ 0x6
  2079  0166                     	ds	1
  2080  0167                     USBTransferOnePacket@handle:	
  2081                           
  2082                           ; 1 bytes @ 0x7
  2083  0167                     	ds	1
  2084  0168                     ??_CDCTxService:	
  2085  0168                     ?_getsUSBUSART:	
  2086                           ; 0 bytes @ 0x8
  2087                           
  2088  0168                     getsUSBUSART@len:	
  2089                           ; 1 bytes @ 0x8
  2090                           
  2091                           
  2092                           ; 1 bytes @ 0x8
  2093  0168                     	ds	1
  2094  0169                     ??_getsUSBUSART:	
  2095                           
  2096                           ; 0 bytes @ 0x9
  2097  0169                     	ds	1
  2098  016A                     _CDCTxService$2155:	
  2099                           
  2100                           ; 2 bytes @ 0xA
  2101  016A                     	ds	1
  2102  016B                     getsUSBUSART@buffer:	
  2103                           
  2104                           ; 1 bytes @ 0xB
  2105  016B                     	ds	1
  2106  016C                     CDCTxService@i:	
  2107  016C                     _getsUSBUSART$2107:	
  2108                           ; 1 bytes @ 0xC
  2109                           
  2110                           
  2111                           ; 2 bytes @ 0xC
  2112  016C                     	ds	1
  2113  016D                     CDCTxService@byte_to_send:	
  2114                           
  2115                           ; 1 bytes @ 0xD
  2116  016D                     	ds	1
  2117  016E                     ??_APP_DeviceCDCBasicDemoTasks:	
  2118                           
  2119                           ; 0 bytes @ 0xE
  2120  016E                     	ds	2
  2121  0170                     ??_main:	
  2122                           
  2123                           	psect	cstackBANK1
  2124  00E0                     __pcstackBANK1:	
  2125                           ; 0 bytes @ 0x10
  2126                           
  2127  00E0                     ??_USBCtrlEPService:	
  2128                           
  2129                           ; 0 bytes @ 0x0
  2130  00E0                     	ds	3
  2131  00E3                     USBCtrlEPService@setup_cnt:	
  2132                           
  2133                           ; 1 bytes @ 0x3
  2134  00E3                     	ds	1
  2135  00E4                     ??_USBDeviceTasks:	
  2136                           
  2137                           ; 0 bytes @ 0x4
  2138  00E4                     	ds	2
  2139  00E6                     USBDeviceTasks@i:	
  2140                           
  2141                           ; 1 bytes @ 0x6
  2142  00E6                     	ds	1
  2143  00E7                     ??_SYS_InterruptHigh:	
  2144                           
  2145                           ; 0 bytes @ 0x7
  2146  00E7                     	ds	1
  2147                           
  2148                           	psect	cstackCOMMON
  2149  0070                     __pcstackCOMMON:	
  2150  0070                     ?_LED_Enable:	
  2151  0070                     ?_BUTTON_Enable:	
  2152                           ; 0 bytes @ 0x0
  2153                           
  2154  0070                     ?_USBDeviceTasks:	
  2155                           ; 0 bytes @ 0x0
  2156                           
  2157  0070                     ?_CDCInitEP:	
  2158                           ; 0 bytes @ 0x0
  2159                           
  2160  0070                     ?_putrsUSBUSART:	
  2161                           ; 0 bytes @ 0x0
  2162                           
  2163  0070                     ?_CDCTxService:	
  2164                           ; 0 bytes @ 0x0
  2165                           
  2166  0070                     ?_LED_Off:	
  2167                           ; 0 bytes @ 0x0
  2168                           
  2169  0070                     ??_LED_Off:	
  2170                           ; 0 bytes @ 0x0
  2171                           
  2172  0070                     ?_LED_On:	
  2173                           ; 0 bytes @ 0x0
  2174                           
  2175  0070                     ??_LED_On:	
  2176                           ; 0 bytes @ 0x0
  2177                           
  2178  0070                     ?_USBDeviceInit:	
  2179                           ; 0 bytes @ 0x0
  2180                           
  2181  0070                     ?_USBDeviceAttach:	
  2182                           ; 0 bytes @ 0x0
  2183                           
  2184  0070                     ?_USBCheckCDCRequest:	
  2185                           ; 0 bytes @ 0x0
  2186                           
  2187  0070                     ??_USBCheckCDCRequest:	
  2188                           ; 0 bytes @ 0x0
  2189                           
  2190  0070                     ?_USBWakeFromSuspend:	
  2191                           ; 0 bytes @ 0x0
  2192                           
  2193  0070                     ?_USBSuspend:	
  2194                           ; 0 bytes @ 0x0
  2195                           
  2196  0070                     ?_USBIncrement1msInternalTimers:	
  2197                           ; 0 bytes @ 0x0
  2198                           
  2199  0070                     ??_USBIncrement1msInternalTimers:	
  2200                           ; 0 bytes @ 0x0
  2201                           
  2202  0070                     ?_USBCtrlEPAllowStatusStage:	
  2203                           ; 0 bytes @ 0x0
  2204                           
  2205  0070                     ??_USBCtrlEPAllowStatusStage:	
  2206                           ; 0 bytes @ 0x0
  2207                           
  2208  0070                     ?_USBStallHandler:	
  2209                           ; 0 bytes @ 0x0
  2210                           
  2211  0070                     ??_USBStallHandler:	
  2212                           ; 0 bytes @ 0x0
  2213                           
  2214  0070                     ?_USBCtrlEPService:	
  2215                           ; 0 bytes @ 0x0
  2216                           
  2217  0070                     ?_USBConfigureEndpoint:	
  2218                           ; 0 bytes @ 0x0
  2219                           
  2220  0070                     ?_USBCtrlTrfTxService:	
  2221                           ; 0 bytes @ 0x0
  2222                           
  2223  0070                     ??_USBCtrlTrfTxService:	
  2224                           ; 0 bytes @ 0x0
  2225                           
  2226  0070                     ?_USBCtrlTrfSetupHandler:	
  2227                           ; 0 bytes @ 0x0
  2228                           
  2229  0070                     ?_USBCtrlTrfOutHandler:	
  2230                           ; 0 bytes @ 0x0
  2231                           
  2232  0070                     ?_USBCtrlTrfInHandler:	
  2233                           ; 0 bytes @ 0x0
  2234                           
  2235  0070                     ?_USBCheckStdRequest:	
  2236                           ; 0 bytes @ 0x0
  2237                           
  2238  0070                     ?_USBStdFeatureReqHandler:	
  2239                           ; 0 bytes @ 0x0
  2240                           
  2241  0070                     ?_SYSTEM_Initialize:	
  2242                           ; 0 bytes @ 0x0
  2243                           
  2244  0070                     ?_SYS_InterruptHigh:	
  2245                           ; 0 bytes @ 0x0
  2246                           
  2247  0070                     ?_APP_DeviceCDCBasicDemoInitialize:	
  2248                           ; 0 bytes @ 0x0
  2249                           
  2250  0070                     ?_APP_DeviceCDCBasicDemoTasks:	
  2251                           ; 0 bytes @ 0x0
  2252                           
  2253  0070                     ?_APP_LEDUpdateUSBStatus:	
  2254                           ; 0 bytes @ 0x0
  2255                           
  2256  0070                     ?_main:	
  2257                           ; 0 bytes @ 0x0
  2258                           
  2259  0070                     ?_USBCtrlEPAllowDataStage:	
  2260                           ; 0 bytes @ 0x0
  2261                           
  2262  0070                     ?_USBCtrlEPServiceComplete:	
  2263                           ; 0 bytes @ 0x0
  2264                           
  2265  0070                     ?_USBCtrlTrfRxService:	
  2266                           ; 0 bytes @ 0x0
  2267                           
  2268  0070                     ?_USBStdSetCfgHandler:	
  2269                           ; 0 bytes @ 0x0
  2270                           
  2271  0070                     ?_USBStdGetDscHandler:	
  2272                           ; 0 bytes @ 0x0
  2273                           
  2274  0070                     ??_USBStdGetDscHandler:	
  2275                           ; 0 bytes @ 0x0
  2276                           
  2277  0070                     ?_USBStdGetStatusHandler:	
  2278                           ; 0 bytes @ 0x0
  2279                           
  2280  0070                     ??_USBStdGetStatusHandler:	
  2281                           ; 0 bytes @ 0x0
  2282                           
  2283  0070                     ?i1_USBDeviceInit:	
  2284                           ; 0 bytes @ 0x0
  2285                           
  2286  0070                     ??i1_USBDeviceInit:	
  2287                           ; 0 bytes @ 0x0
  2288                           
  2289  0070                     ?_BUTTON_IsPressed:	
  2290                           ; 0 bytes @ 0x0
  2291                           
  2292  0070                     ?i1_USBTransferOnePacket:	
  2293                           ; 1 bytes @ 0x0
  2294                           
  2295  0070                     ?_memset:	
  2296                           ; 1 bytes @ 0x0
  2297                           
  2298  0070                     LED_On@led:	
  2299                           ; 2 bytes @ 0x0
  2300                           
  2301  0070                     LED_Off@led:	
  2302                           ; 1 bytes @ 0x0
  2303                           
  2304  0070                     USBConfigureEndpoint@direction:	
  2305                           ; 1 bytes @ 0x0
  2306                           
  2307  0070                     i1USBTransferOnePacket@dir:	
  2308                           ; 1 bytes @ 0x0
  2309                           
  2310  0070                     memset@p1:	
  2311                           ; 1 bytes @ 0x0
  2312                           
  2313                           
  2314                           ; 2 bytes @ 0x0
  2315  0070                     	ds	1
  2316  0071                     ??_USBConfigureEndpoint:	
  2317  0071                     ??_APP_LEDUpdateUSBStatus:	
  2318                           ; 0 bytes @ 0x1
  2319                           
  2320  0071                     USBStdGetStatusHandler@p:	
  2321                           ; 0 bytes @ 0x1
  2322                           
  2323  0071                     i1USBDeviceInit@p:	
  2324                           ; 1 bytes @ 0x1
  2325                           
  2326  0071                     i1USBTransferOnePacket@data:	
  2327                           ; 2 bytes @ 0x1
  2328                           
  2329                           
  2330                           ; 2 bytes @ 0x1
  2331  0071                     	ds	1
  2332  0072                     ??_USBCtrlTrfRxService:	
  2333  0072                     USBCtrlTrfTxService@byteToSend:	
  2334                           ; 0 bytes @ 0x2
  2335                           
  2336  0072                     memset@c:	
  2337                           ; 1 bytes @ 0x2
  2338                           
  2339                           
  2340                           ; 2 bytes @ 0x2
  2341  0072                     	ds	1
  2342  0073                     ??_USBCtrlTrfInHandler:	
  2343  0073                     ??_USBCtrlEPAllowDataStage:	
  2344                           ; 0 bytes @ 0x3
  2345                           
  2346  0073                     i1USBDeviceInit@i_1199:	
  2347                           ; 0 bytes @ 0x3
  2348                           
  2349  0073                     i1USBTransferOnePacket@len:	
  2350                           ; 1 bytes @ 0x3
  2351                           
  2352                           
  2353                           ; 1 bytes @ 0x3
  2354  0073                     	ds	1
  2355  0074                     ??i1_USBTransferOnePacket:	
  2356  0074                     USBCtrlTrfRxService@i:	
  2357                           ; 0 bytes @ 0x4
  2358                           
  2359  0074                     i1USBDeviceInit@i:	
  2360                           ; 1 bytes @ 0x4
  2361                           
  2362  0074                     memset@n:	
  2363                           ; 1 bytes @ 0x4
  2364                           
  2365                           
  2366                           ; 2 bytes @ 0x4
  2367  0074                     	ds	1
  2368  0075                     ??_USBCtrlEPServiceComplete:	
  2369  0075                     USBConfigureEndpoint@EPNum:	
  2370                           ; 0 bytes @ 0x5
  2371                           
  2372  0075                     USBCtrlTrfRxService@byteToRead:	
  2373                           ; 1 bytes @ 0x5
  2374                           
  2375  0075                     USBCtrlTrfInHandler@lastDTS:	
  2376                           ; 1 bytes @ 0x5
  2377                           
  2378                           
  2379                           ; 1 bytes @ 0x5
  2380  0075                     	ds	1
  2381  0076                     ??_memset:	
  2382  0076                     ??_USBCtrlTrfOutHandler:	
  2383                           ; 0 bytes @ 0x6
  2384                           
  2385  0076                     USBConfigureEndpoint@handle:	
  2386                           ; 0 bytes @ 0x6
  2387                           
  2388  0076                     i1USBTransferOnePacket@ep:	
  2389                           ; 1 bytes @ 0x6
  2390                           
  2391  0076                     memset@p:	
  2392                           ; 1 bytes @ 0x6
  2393                           
  2394                           
  2395                           ; 2 bytes @ 0x6
  2396  0076                     	ds	1
  2397  0077                     ?_USBEnableEndpoint:	
  2398  0077                     USBEnableEndpoint@options:	
  2399                           ; 0 bytes @ 0x7
  2400                           
  2401  0077                     i1USBTransferOnePacket@handle:	
  2402                           ; 1 bytes @ 0x7
  2403                           
  2404                           
  2405                           ; 1 bytes @ 0x7
  2406  0077                     	ds	1
  2407  0078                     ??_USBEnableEndpoint:	
  2408                           
  2409                           ; 0 bytes @ 0x8
  2410  0078                     	ds	2
  2411  007A                     USBEnableEndpoint@p:	
  2412                           
  2413                           ; 2 bytes @ 0xA
  2414  007A                     	ds	2
  2415  007C                     USBEnableEndpoint@ep:	
  2416                           
  2417                           ; 1 bytes @ 0xC
  2418  007C                     	ds	1
  2419  007D                     ??_APP_DeviceCDCBasicDemoInitialize:	
  2420                           
  2421                           ; 0 bytes @ 0xD
  2422  007D                     	ds	1
  2423  007E                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  2424                           
  2425                           	psect	cstackBANK0
  2426  0060                     __pcstackBANK0:	
  2427                           ; 0 bytes @ 0xE
  2428                           
  2429  0060                     ??_CDCInitEP:	
  2430                           
  2431                           ; 0 bytes @ 0x0
  2432  0060                     	ds	2
  2433  0062                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  2434  0062                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  2435                           ; 1 bytes @ 0x2
  2436                           
  2437                           
  2438                           ; 2 bytes @ 0x2
  2439  0062                     	ds	2
  2440  0064                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2441                           
  2442                           ; 2 bytes @ 0x4
  2443  0064                     	ds	2
  2444  0066                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2445                           
  2446                           ; 2 bytes @ 0x6
  2447  0066                     	ds	2
  2448  0068                     ??_USBWakeFromSuspend:	
  2449  0068                     ??_USBSuspend:	
  2450                           ; 0 bytes @ 0x8
  2451                           
  2452  0068                     ??_USBStdFeatureReqHandler:	
  2453                           ; 0 bytes @ 0x8
  2454                           
  2455  0068                     ??_USBStdSetCfgHandler:	
  2456                           ; 0 bytes @ 0x8
  2457                           
  2458                           
  2459                           ; 0 bytes @ 0x8
  2460  0068                     	ds	1
  2461  0069                     USBStdSetCfgHandler@p:	
  2462                           
  2463                           ; 2 bytes @ 0x9
  2464  0069                     	ds	1
  2465  006A                     USBStdFeatureReqHandler@pUEP:	
  2466                           
  2467                           ; 2 bytes @ 0xA
  2468  006A                     	ds	1
  2469  006B                     USBStdSetCfgHandler@i_1543:	
  2470                           
  2471                           ; 1 bytes @ 0xB
  2472  006B                     	ds	1
  2473  006C                     USBStdSetCfgHandler@i:	
  2474  006C                     USBStdFeatureReqHandler@current_ep_data:	
  2475                           ; 1 bytes @ 0xC
  2476                           
  2477                           
  2478                           ; 1 bytes @ 0xC
  2479  006C                     	ds	1
  2480  006D                     USBStdFeatureReqHandler@p:	
  2481                           
  2482                           ; 1 bytes @ 0xD
  2483  006D                     	ds	1
  2484  006E                     ??_USBCheckStdRequest:	
  2485                           
  2486                           ; 0 bytes @ 0xE
  2487  006E                     	ds	1
  2488  006F                     ??_USBCtrlTrfSetupHandler:	
  2489                           
  2490                           ; 0 bytes @ 0xF
  2491  006F                     	ds	1
  2492                           
  2493                           	psect	maintext
  2494  0906                     __pmaintext:	
  2495 ;;
  2496 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2497 ;;
  2498 ;; *************** function _main *****************
  2499 ;; Defined at:
  2500 ;;		line 49 in file "../src/main.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;		None
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;		None
  2505 ;; Return value:  Size  Location     Type
  2506 ;;		None               void
  2507 ;; Registers used:
  2508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : B1F/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2518 ;;Total ram usage:        0 bytes
  2519 ;; Hardware stack levels required when called:   14
  2520 ;; This function calls:
  2521 ;;		_APP_DeviceCDCBasicDemoTasks
  2522 ;;		_SYSTEM_Initialize
  2523 ;;		_USBDeviceAttach
  2524 ;;		_USBDeviceInit
  2525 ;; This function is called by:
  2526 ;;		Startup code after reset
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530                           
  2531                           ;psect for function _main
  2532  0906                     _main:	
  2533                           
  2534                           ;main.c: 51: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  2535                           
  2536                           ;incstack = 0
  2537                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2538  0906  3000               	movlw	0
  2539  0907  3189  2163  3189   	fcall	_SYSTEM_Initialize
  2540                           
  2541                           ;main.c: 53: USBDeviceInit();
  2542  090A  3184  24C9  3189   	fcall	_USBDeviceInit
  2543                           
  2544                           ;main.c: 54: USBDeviceAttach();
  2545  090D  3189  21E3  3189   	fcall	_USBDeviceAttach
  2546  0910                     l5667:	
  2547                           ;main.c: 56: while(1)
  2548                           
  2549                           ;main.c: 91: {
  2550                           ;main.c: 93: continue;
  2551                           
  2552                           ;main.c: 81: {
  2553                           ;main.c: 83: continue;
  2554                           
  2555                           
  2556                           ;main.c: 57: {
  2557                           ;main.c: 58: ;
  2558                           ;main.c: 80: if( USBDeviceState < CONFIGURED_STATE )
  2559  0910  3020               	movlw	32
  2560  0911  0023               	movlb	3	; select bank3
  2561  0912  0249               	subwf	_USBDeviceState^(0+384),w	;volatile
  2562  0913  1C03               	btfss	3,0
  2563  0914  2910               	goto	l5667
  2564                           
  2565                           ;main.c: 84: }
  2566                           ;main.c: 90: if( UCONbits.SUSPND== 1 )
  2567  0915  003D               	movlb	29	; select bank29
  2568  0916  188E               	btfsc	14,1	;volatile
  2569  0917  2910               	goto	l5667
  2570                           
  2571                           ;main.c: 94: }
  2572                           ;main.c: 97: APP_DeviceCDCBasicDemoTasks();
  2573  0918  318F  2724  3189   	fcall	_APP_DeviceCDCBasicDemoTasks
  2574  091B  2910               	goto	l5667
  2575  091C                     __end_of_main:	
  2576                           
  2577                           	psect	text1
  2578  04C9                     __ptext1:	
  2579 ;; *************** function _USBDeviceInit *****************
  2580 ;; Defined at:
  2581 ;;		line 300 in file "../../../../../../framework/usb/src/usb_device.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;		None
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;  p               2    1[BANK2 ] PTR unsigned char 
  2586 ;;		 -> UEP1(1), 
  2587 ;;  i               1    3[BANK2 ] unsigned char 
  2588 ;;  i               1    4[BANK2 ] unsigned char 
  2589 ;; Return value:  Size  Location     Type
  2590 ;;		None               void
  2591 ;; Registers used:
  2592 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2599 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  2600 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2601 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  2602 ;;Total ram usage:        5 bytes
  2603 ;; Hardware stack levels used:    1
  2604 ;; Hardware stack levels required when called:   11
  2605 ;; This function calls:
  2606 ;;		Nothing
  2607 ;; This function is called by:
  2608 ;;		_main
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           
  2613                           ;psect for function _USBDeviceInit
  2614  04C9                     _USBDeviceInit:	
  2615                           
  2616                           ;usb_device.c: 302: uint8_t i;
  2617                           ;usb_device.c: 304: {PIE2bits.USBIE = 0;};
  2618                           
  2619                           ;incstack = 0
  2620                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  2621  04C9  0021               	movlb	1	; select bank1
  2622  04CA  1112               	bcf	18,2	;volatile
  2623                           
  2624                           ;usb_device.c: 307: {UEIR = 0;};
  2625  04CB  003D               	movlb	29	; select bank29
  2626  04CC  0193               	clrf	19	;volatile
  2627                           
  2628                           ;usb_device.c: 310: {UIR = 0;};
  2629  04CD  0190               	clrf	16	;volatile
  2630                           
  2631                           ;usb_device.c: 313: UEP0 = 0;
  2632  04CE  0198               	clrf	24	;volatile
  2633                           
  2634                           ;usb_device.c: 315: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  2635  04CF  300E               	movlw	14
  2636  04D0  0022               	movlb	2	; select bank2
  2637  04D1  00E2               	movwf	(USBDeviceInit@p+1)^(0+256)
  2638  04D2  3099               	movlw	153
  2639  04D3  00E1               	movwf	USBDeviceInit@p^(0+256)
  2640  04D4  01E3               	clrf	USBDeviceInit@i_1199^(0+256)
  2641  04D5  3002               	movlw	2
  2642  04D6  0263               	subwf	USBDeviceInit@i_1199^(0+256),w
  2643  04D7  1803               	btfsc	3,0
  2644  04D8  2CEA               	goto	l5581
  2645  04D9                     l5573:	
  2646  04D9  0861               	movf	USBDeviceInit@p^(0+256),w
  2647  04DA  0086               	movwf	6
  2648  04DB  0862               	movf	(USBDeviceInit@p+1)^(0+256),w
  2649  04DC  0087               	movwf	7
  2650  04DD  0181               	clrf	1
  2651  04DE  3001               	movlw	1
  2652  04DF  07E1               	addwf	USBDeviceInit@p^(0+256),f
  2653  04E0  3000               	movlw	0
  2654  04E1  3DE2               	addwfc	(USBDeviceInit@p+1)^(0+256),f
  2655  04E2  3001               	movlw	1
  2656  04E3  00E0               	movwf	??_USBDeviceInit^(0+256)
  2657  04E4  0860               	movf	??_USBDeviceInit^(0+256),w
  2658  04E5  07E3               	addwf	USBDeviceInit@i_1199^(0+256),f
  2659  04E6  3002               	movlw	2
  2660  04E7  0263               	subwf	USBDeviceInit@i_1199^(0+256),w
  2661  04E8  1C03               	skipc
  2662  04E9  2CD9               	goto	l5573
  2663  04EA                     l5581:	
  2664                           
  2665                           ;usb_device.c: 317: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  2666  04EA  3016               	movlw	22
  2667  04EB  003D               	movlb	29	; select bank29
  2668  04EC  0091               	movwf	17	;volatile
  2669  04ED  309F               	movlw	159
  2670  04EE  0097               	movwf	23	;volatile
  2671  04EF  307B               	movlw	123
  2672  04F0  0092               	movwf	18	;volatile
  2673                           
  2674                           ;usb_device.c: 320: ;
  2675                           ;usb_device.c: 323: ;
  2676                           ;usb_device.c: 326: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  2677  04F1  0022               	movlb	2	; select bank2
  2678  04F2  01E4               	clrf	USBDeviceInit@i^(0+256)
  2679  04F3  300C               	movlw	12
  2680  04F4  0264               	subwf	USBDeviceInit@i^(0+256),w
  2681  04F5  1803               	btfsc	3,0
  2682  04F6  2D10               	goto	l397
  2683  04F7                     l5589:	
  2684                           
  2685                           ;usb_device.c: 327: {
  2686                           ;usb_device.c: 328: BDT[i].Val = 0x00;
  2687  04F7  0864               	movf	USBDeviceInit@i^(0+256),w
  2688  04F8  00E0               	movwf	??_USBDeviceInit^(0+256)
  2689  04F9  3001               	movlw	1
  2690  04FA                     u5255:	
  2691  04FA  35E0               	lslf	??_USBDeviceInit^(0+256),f
  2692  04FB  3EFF               	addlw	-1
  2693  04FC  1D03               	skipz
  2694  04FD  2CFA               	goto	u5255
  2695  04FE  3560               	lslf	??_USBDeviceInit^(0+256),w
  2696  04FF  3E20               	addlw	32
  2697  0500  0086               	movwf	6
  2698  0501  0187               	clrf	7
  2699  0502  3000               	movlw	0
  2700  0503  3FC0               	movwi [0]fsr1
  2701  0504  3000               	movlw	0
  2702  0505  3FC1               	movwi [1]fsr1
  2703  0506  3FC2               	movwi [2]fsr1
  2704  0507  3FC3               	movwi [3]fsr1
  2705  0508  3001               	movlw	1
  2706  0509  00E0               	movwf	??_USBDeviceInit^(0+256)
  2707  050A  0860               	movf	??_USBDeviceInit^(0+256),w
  2708  050B  07E4               	addwf	USBDeviceInit@i^(0+256),f
  2709  050C  300C               	movlw	12
  2710  050D  0264               	subwf	USBDeviceInit@i^(0+256),w
  2711  050E  1C03               	skipc
  2712  050F  2CF7               	goto	l5589
  2713  0510                     l397:	
  2714                           
  2715                           ;usb_device.c: 329: }
  2716                           ;usb_device.c: 332: UCONbits.PPBRST = 1;
  2717  0510  003D               	movlb	29	; select bank29
  2718  0511  170E               	bsf	14,6	;volatile
  2719                           
  2720                           ;usb_device.c: 335: UADDR = 0x00;
  2721  0512  0196               	clrf	22	;volatile
  2722                           
  2723                           ;usb_device.c: 338: UCONbits.PKTDIS = 0;
  2724  0513  120E               	bcf	14,4	;volatile
  2725                           
  2726                           ;usb_device.c: 341: UCONbits.PPBRST = 0;
  2727  0514  130E               	bcf	14,6	;volatile
  2728  0515                     l5601:	
  2729                           ;usb_device.c: 344: do
  2730                           
  2731                           
  2732                           ;usb_device.c: 345: {
  2733                           ;usb_device.c: 346: (UIR &= 0xF7);
  2734  0515  30F7               	movlw	247
  2735  0516  0022               	movlb	2	; select bank2
  2736  0517  00E0               	movwf	??_USBDeviceInit^(0+256)
  2737  0518  0860               	movf	??_USBDeviceInit^(0+256),w
  2738  0519  003D               	movlb	29	; select bank29
  2739  051A  0590               	andwf	16,f	;volatile
  2740                           
  2741                           ;usb_device.c: 348: inPipes[0].info.Val = 0;
  2742  051B  0021               	movlb	1	; select bank1
  2743  051C  01EC               	clrf	(_inPipes^(0+128)+2)	;volatile
  2744                           
  2745                           ;usb_device.c: 349: outPipes[0].info.Val = 0;
  2746  051D  0023               	movlb	3	; select bank3
  2747  051E  01A2               	clrf	(_outPipes^(0+384)+2)	;volatile
  2748                           
  2749                           ;usb_device.c: 350: outPipes[0].wCount.Val = 0;
  2750  051F  01A3               	clrf	(_outPipes^(0+384)+3)	;volatile
  2751  0520  01A4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  2752                           
  2753                           ;usb_device.c: 351: }while(UIRbits.TRNIF == 1);
  2754  0521  003D               	movlb	29	; select bank29
  2755  0522  1990               	btfsc	16,3	;volatile
  2756  0523  2D15               	goto	l5601
  2757                           
  2758                           ;usb_device.c: 355: USBStatusStageEnabledFlag1 = 1;
  2759  0524  3001               	movlw	1
  2760  0525  0022               	movlb	2	; select bank2
  2761  0526  00E0               	movwf	??_USBDeviceInit^(0+256)
  2762  0527  0860               	movf	??_USBDeviceInit^(0+256),w
  2763  0528  0023               	movlb	3	; select bank3
  2764  0529  00CA               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  2765                           
  2766                           ;usb_device.c: 356: USBStatusStageEnabledFlag2 = 1;
  2767  052A  3001               	movlw	1
  2768  052B  0022               	movlb	2	; select bank2
  2769  052C  00E0               	movwf	??_USBDeviceInit^(0+256)
  2770  052D  0860               	movf	??_USBDeviceInit^(0+256),w
  2771  052E  0023               	movlb	3	; select bank3
  2772  052F  00CB               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  2773                           
  2774                           ;usb_device.c: 358: USBDeferINDataStagePackets = 0;
  2775  0530  01C6               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  2776                           
  2777                           ;usb_device.c: 359: USBDeferOUTDataStagePackets = 0;
  2778  0531  01C7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  2779                           
  2780                           ;usb_device.c: 360: USBBusIsSuspended = 0;
  2781  0532  01C5               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  2782                           
  2783                           ;usb_device.c: 364: for(i = 0; i < (uint8_t)(2+1u); i++)
  2784  0533  0022               	movlb	2	; select bank2
  2785  0534  01E4               	clrf	USBDeviceInit@i^(0+256)
  2786  0535  3003               	movlw	3
  2787  0536  0264               	subwf	USBDeviceInit@i^(0+256),w
  2788  0537  1803               	btfsc	3,0
  2789  0538  2D59               	goto	l5629
  2790  0539                     l5623:	
  2791                           
  2792                           ;usb_device.c: 365: {
  2793                           ;usb_device.c: 366: pBDTEntryIn[i] = 0u;
  2794  0539  0864               	movf	USBDeviceInit@i^(0+256),w
  2795  053A  3EB5               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  2796  053B  0086               	movwf	6
  2797  053C  3001               	movlw	1	; select bank3/4
  2798  053D  0087               	movwf	7
  2799  053E  0181               	clrf	1
  2800                           
  2801                           ;usb_device.c: 367: pBDTEntryOut[i] = 0u;
  2802  053F  0864               	movf	USBDeviceInit@i^(0+256),w
  2803  0540  3EB8               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  2804  0541  0086               	movwf	6
  2805  0542  3001               	movlw	1	; select bank3/4
  2806  0543  0087               	movwf	7
  2807  0544  0181               	clrf	1
  2808                           
  2809                           ;usb_device.c: 368: ep_data_in[i].Val = 0u;
  2810  0545  0864               	movf	USBDeviceInit@i^(0+256),w
  2811  0546  3EAF               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  2812  0547  0086               	movwf	6
  2813  0548  3001               	movlw	1	; select bank3/4
  2814  0549  0087               	movwf	7
  2815  054A  0181               	clrf	1
  2816                           
  2817                           ;usb_device.c: 369: ep_data_out[i].Val = 0u;
  2818  054B  0864               	movf	USBDeviceInit@i^(0+256),w
  2819  054C  3EB2               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  2820  054D  0086               	movwf	6
  2821  054E  3001               	movlw	1	; select bank3/4
  2822  054F  0087               	movwf	7
  2823  0550  0181               	clrf	1
  2824  0551  3001               	movlw	1
  2825  0552  00E0               	movwf	??_USBDeviceInit^(0+256)
  2826  0553  0860               	movf	??_USBDeviceInit^(0+256),w
  2827  0554  07E4               	addwf	USBDeviceInit@i^(0+256),f
  2828  0555  3003               	movlw	3
  2829  0556  0264               	subwf	USBDeviceInit@i^(0+256),w
  2830  0557  1C03               	skipc
  2831  0558  2D39               	goto	l5623
  2832  0559                     l5629:	
  2833                           
  2834                           ;usb_device.c: 370: }
  2835                           ;usb_device.c: 373: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  2836  0559  3028               	movlw	40
  2837  055A  00E0               	movwf	??_USBDeviceInit^(0+256)
  2838  055B  0860               	movf	??_USBDeviceInit^(0+256),w
  2839  055C  0023               	movlb	3	; select bank3
  2840  055D  00B5               	movwf	_pBDTEntryIn^(0+384)
  2841                           
  2842                           ;usb_device.c: 375: UEP0 = 0x06|0x10;
  2843  055E  3016               	movlw	22
  2844  055F  003D               	movlb	29	; select bank29
  2845  0560  0098               	movwf	24	;volatile
  2846                           
  2847                           ;usb_device.c: 377: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  2848  0561  3000               	movlw	0
  2849  0562  0020               	movlb	0	; select bank0
  2850  0563  00A3               	movwf	35	;volatile
  2851  0564  3050               	movlw	80
  2852  0565  00A2               	movwf	34	;volatile
  2853                           
  2854                           ;usb_device.c: 378: BDT[0].CNT = 8;
  2855  0566  3008               	movlw	8
  2856  0567  00A1               	movwf	33	;volatile
  2857                           
  2858                           ;usb_device.c: 379: BDT[0].STAT.Val = 0x00|0x04;
  2859  0568  3004               	movlw	4
  2860  0569  0022               	movlb	2	; select bank2
  2861  056A  00E0               	movwf	??_USBDeviceInit^(0+256)
  2862  056B  0860               	movf	??_USBDeviceInit^(0+256),w
  2863  056C  0020               	movlb	0	; select bank0
  2864  056D  00A0               	movwf	32	;volatile
  2865                           
  2866                           ;usb_device.c: 380: BDT[0].STAT.Val |= 0x80;
  2867  056E  17A0               	bsf	32,7	;volatile
  2868                           
  2869                           ;usb_device.c: 383: USBActiveConfiguration = 0;
  2870  056F  0023               	movlb	3	; select bank3
  2871  0570  01E9               	clrf	_USBActiveConfiguration^(0+384)	;volatile
  2872                           
  2873                           ;usb_device.c: 385: USB1msTickCount = 0;
  2874  0571  3000               	movlw	0
  2875  0572  00AE               	movwf	(_USB1msTickCount+3)^(0+384)	;volatile
  2876  0573  3000               	movlw	0
  2877  0574  00AD               	movwf	(_USB1msTickCount+2)^(0+384)	;volatile
  2878  0575  3000               	movlw	0
  2879  0576  00AC               	movwf	(_USB1msTickCount+1)^(0+384)	;volatile
  2880  0577  3000               	movlw	0
  2881  0578  00AB               	movwf	_USB1msTickCount^(0+384)	;volatile
  2882                           
  2883                           ;usb_device.c: 386: USBTicksSinceSuspendEnd = 0;
  2884  0579  01CD               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  2885                           
  2886                           ;usb_device.c: 389: USBDeviceState = DETACHED_STATE;
  2887  057A  01C9               	clrf	_USBDeviceState^(0+384)	;volatile
  2888  057B  0008               	return
  2889  057C                     __end_of_USBDeviceInit:	
  2890                           
  2891                           	psect	text2
  2892  09E3                     __ptext2:	
  2893 ;; *************** function _USBDeviceAttach *****************
  2894 ;; Defined at:
  2895 ;;		line 1371 in file "../../../../../../framework/usb/src/usb_device.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;		None
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;		None
  2900 ;; Return value:  Size  Location     Type
  2901 ;;		None               void
  2902 ;; Registers used:
  2903 ;;		wreg, status,2, status,0
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2911 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2912 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2913 ;;Total ram usage:        1 bytes
  2914 ;; Hardware stack levels used:    1
  2915 ;; Hardware stack levels required when called:   11
  2916 ;; This function calls:
  2917 ;;		Nothing
  2918 ;; This function is called by:
  2919 ;;		_main
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           
  2924                           ;psect for function _USBDeviceAttach
  2925  09E3                     _USBDeviceAttach:	
  2926                           
  2927                           ;usb_device.c: 1375: {
  2928                           ;usb_device.c: 1376: if(1 == 1)
  2929                           
  2930                           ;incstack = 0
  2931                           ; Regs used in _USBDeviceAttach: [wreg+status,2+status,0]
  2932  09E3  0023               	movlb	3	; select bank3
  2933  09E4  0849               	movf	_USBDeviceState^(0+384),w	;volatile
  2934  09E5  1D03               	btfss	3,2
  2935  09E6  0008               	return
  2936                           
  2937                           ;usb_device.c: 1377: {
  2938                           ;usb_device.c: 1379: UCON = 0;
  2939  09E7  003D               	movlb	29	; select bank29
  2940  09E8  018E               	clrf	14	;volatile
  2941                           
  2942                           ;usb_device.c: 1382: UIE = 0;
  2943  09E9  0192               	clrf	18	;volatile
  2944                           
  2945                           ;usb_device.c: 1386: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  2946  09EA  3016               	movlw	22
  2947  09EB  0091               	movwf	17	;volatile
  2948  09EC  309F               	movlw	159
  2949  09ED  0097               	movwf	23	;volatile
  2950  09EE  307B               	movlw	123
  2951  09EF  0092               	movwf	18	;volatile
  2952                           
  2953                           ;usb_device.c: 1388: {PIE2bits.USBIE = 1;INTCONbits.PEIE = 1; INTCONbits.GIE = 1;};
  2954  09F0  0021               	movlb	1	; select bank1
  2955  09F1  1512               	bsf	18,2	;volatile
  2956  09F2  170B               	bsf	11,6	;volatile
  2957  09F3  178B               	bsf	11,7	;volatile
  2958  09F4                     l457:	
  2959                           ;usb_device.c: 1391: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  2960                           
  2961  09F4  003D               	movlb	29	; select bank29
  2962  09F5  198E               	btfsc	14,3	;volatile
  2963  09F6  29F9               	goto	l5657
  2964  09F7  158E               	bsf	14,3	;volatile
  2965  09F8  29F4               	goto	l457
  2966  09F9                     l5657:	
  2967                           
  2968                           ;usb_device.c: 1394: USBDeviceState = ATTACHED_STATE;
  2969  09F9  3001               	movlw	1
  2970  09FA  0022               	movlb	2	; select bank2
  2971  09FB  00E0               	movwf	??_USBDeviceAttach^(0+256)
  2972  09FC  0860               	movf	??_USBDeviceAttach^(0+256),w
  2973  09FD  0023               	movlb	3	; select bank3
  2974  09FE  00C9               	movwf	_USBDeviceState^(0+384)	;volatile
  2975  09FF  0008               	return
  2976  0A00                     __end_of_USBDeviceAttach:	
  2977                           
  2978                           	psect	text3
  2979  0963                     __ptext3:	
  2980 ;; *************** function _SYSTEM_Initialize *****************
  2981 ;; Defined at:
  2982 ;;		line 86 in file "../src/system_config/low_pin_count_usb_development_kit/pic16f1459/system.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  state           1    wreg     enum E2642
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;  state           1    1[BANK2 ] enum E2642
  2987 ;; Return value:  Size  Location     Type
  2988 ;;		None               void
  2989 ;; Registers used:
  2990 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2997 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2999 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3000 ;;Total ram usage:        1 bytes
  3001 ;; Hardware stack levels used:    1
  3002 ;; Hardware stack levels required when called:   12
  3003 ;; This function calls:
  3004 ;;		_BUTTON_Enable
  3005 ;;		_LED_Enable
  3006 ;; This function is called by:
  3007 ;;		_main
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           
  3012                           ;psect for function _SYSTEM_Initialize
  3013  0963                     _SYSTEM_Initialize:	
  3014                           
  3015                           ;incstack = 0
  3016                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3017                           ;SYSTEM_Initialize@state stored from wreg
  3018  0963  0022               	movlb	2	; select bank2
  3019  0964  00E1               	movwf	SYSTEM_Initialize@state^(0+256)
  3020                           
  3021                           ;system.c: 88: switch(state)
  3022  0965  296E               	goto	l5423
  3023  0966                     l5419:	
  3024                           ;system.c: 89: {
  3025                           ;system.c: 90: case SYSTEM_STATE_USB_START:
  3026                           
  3027                           
  3028                           ;system.c: 97: LED_Enable(LED_D1);
  3029  0966  3001               	movlw	1
  3030  0967  3189  21C8  3189   	fcall	_LED_Enable
  3031                           
  3032                           ;system.c: 98: BUTTON_Enable(BUTTON_S1);
  3033  096A  3001               	movlw	1
  3034  096B  3188  20D6         	fcall	_BUTTON_Enable
  3035                           
  3036                           ;system.c: 106: }
  3037                           
  3038                           ;system.c: 105: break;
  3039                           
  3040                           ;system.c: 104: case SYSTEM_STATE_USB_RESUME:
  3041                           
  3042                           ;system.c: 102: break;
  3043                           
  3044                           ;system.c: 101: case SYSTEM_STATE_USB_SUSPEND:
  3045                           
  3046                           ;system.c: 99: break;
  3047  096D  0008               	return
  3048  096E                     l5423:	
  3049  096E  0022               	movlb	2	; select bank2
  3050  096F  0861               	movf	SYSTEM_Initialize@state^(0+256),w
  3051                           
  3052                           ; Switch size 1, requested type "space"
  3053                           ; Number of cases is 3, Range of values is 0 to 2
  3054                           ; switch strategies available:
  3055                           ; Name         Instructions Cycles
  3056                           ; simple_byte           10     6 (average)
  3057                           ; direct_byte           12     6 (fixed)
  3058                           ; jumptable            260     6 (fixed)
  3059                           ;	Chosen strategy is simple_byte
  3060  0970  3A00               	xorlw	0	; case 0
  3061  0971  1903               	skipnz
  3062  0972  2966               	goto	l5419
  3063  0973  3A01               	xorlw	1	; case 1
  3064  0974  1903               	skipnz
  3065  0975  297A               	goto	l14
  3066  0976  3A03               	xorlw	3	; case 2
  3067  0977  1903               	skipnz
  3068  0978  297A               	goto	l14
  3069  0979  297A               	goto	l14
  3070  097A                     l14:	
  3071  097A  0008               	return
  3072  097B                     __end_of_SYSTEM_Initialize:	
  3073                           
  3074                           	psect	text4
  3075  09C8                     __ptext4:	
  3076 ;; *************** function _LED_Enable *****************
  3077 ;; Defined at:
  3078 ;;		line 220 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/leds.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;  led             1    wreg     enum E2
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;  led             1    0[BANK2 ] enum E2
  3083 ;; Return value:  Size  Location     Type
  3084 ;;		None               void
  3085 ;; Registers used:
  3086 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3093 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3095 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3096 ;;Total ram usage:        1 bytes
  3097 ;; Hardware stack levels used:    1
  3098 ;; Hardware stack levels required when called:   11
  3099 ;; This function calls:
  3100 ;;		Nothing
  3101 ;; This function is called by:
  3102 ;;		_SYSTEM_Initialize
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106                           
  3107                           ;psect for function _LED_Enable
  3108  09C8                     _LED_Enable:	
  3109                           
  3110                           ;incstack = 0
  3111                           ; Regs used in _LED_Enable: [wreg-fsr0h+status,2+status,0]
  3112                           ;LED_Enable@led stored from wreg
  3113  09C8  0022               	movlb	2	; select bank2
  3114  09C9  00E0               	movwf	LED_Enable@led^(0+256)
  3115                           
  3116                           ;leds.c: 222: switch(led)
  3117  09CA  29D7               	goto	l5179
  3118  09CB                     l255:	
  3119                           ;leds.c: 223: {
  3120                           ;leds.c: 224: case LED_D1:
  3121                           
  3122                           
  3123                           ;leds.c: 225: TRISCbits.TRISC0 = 0;
  3124  09CB  0021               	movlb	1	; select bank1
  3125  09CC  100E               	bcf	14,0	;volatile
  3126                           
  3127                           ;leds.c: 226: break;
  3128  09CD  0008               	return
  3129  09CE                     l257:	
  3130                           ;leds.c: 228: case LED_D2:
  3131                           
  3132                           
  3133                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
  3134  09CE  0021               	movlb	1	; select bank1
  3135  09CF  108E               	bcf	14,1	;volatile
  3136                           
  3137                           ;leds.c: 230: break;
  3138  09D0  0008               	return
  3139  09D1                     l258:	
  3140                           ;leds.c: 232: case LED_D3:
  3141                           
  3142                           
  3143                           ;leds.c: 233: TRISCbits.TRISC2 = 0;
  3144  09D1  0021               	movlb	1	; select bank1
  3145  09D2  110E               	bcf	14,2	;volatile
  3146                           
  3147                           ;leds.c: 234: break;
  3148  09D3  0008               	return
  3149  09D4                     l259:	
  3150                           ;leds.c: 236: case LED_D4:
  3151                           
  3152                           
  3153                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
  3154  09D4  0021               	movlb	1	; select bank1
  3155  09D5  118E               	bcf	14,3	;volatile
  3156                           
  3157                           ;leds.c: 242: }
  3158                           
  3159                           ;leds.c: 241: break;
  3160                           
  3161                           ;leds.c: 240: case LED_NONE:
  3162                           
  3163                           ;leds.c: 238: break;
  3164  09D6  0008               	return
  3165  09D7                     l5179:	
  3166  09D7  0022               	movlb	2	; select bank2
  3167  09D8  0860               	movf	LED_Enable@led^(0+256),w
  3168                           
  3169                           ; Switch size 1, requested type "space"
  3170                           ; Number of cases is 5, Range of values is 0 to 4
  3171                           ; switch strategies available:
  3172                           ; Name         Instructions Cycles
  3173                           ; direct_byte           16     6 (fixed)
  3174                           ; simple_byte           16     9 (average)
  3175                           ; jumptable            260     6 (fixed)
  3176                           ;	Chosen strategy is direct_byte
  3177  09D9  0084               	movwf	4
  3178  09DA  3005               	movlw	5
  3179  09DB  0204               	subwf	4,w
  3180  09DC  1803               	skipnc
  3181  09DD  0008               	return
  3182  09DE  3188               	movlp	high S5823
  3183  09DF  3504               	lslf	4,w
  3184  09E0  3E1A               	addlw	low S5823
  3185  09E1  0082               	movwf	2
  3186  09E2                     l261:	
  3187  09E2  0008               	return
  3188  09E3                     __end_of_LED_Enable:	
  3189                           
  3190                           	psect	swtext1
  3191  081A                     __pswtext1:	
  3192  081A                     S5823:	
  3193  081A  3189  29E2         	ljmp	l261
  3194  081C  3189  29CB         	ljmp	l255
  3195  081E  3189  29CE         	ljmp	l257
  3196  0820  3189  29D1         	ljmp	l258
  3197  0822  3189  29D4         	ljmp	l259
  3198                           
  3199                           	psect	text5
  3200  08D6                     __ptext5:	
  3201 ;; *************** function _BUTTON_Enable *****************
  3202 ;; Defined at:
  3203 ;;		line 85 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/buttons.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;  button          1    wreg     enum E2611
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;  button          1    0[BANK2 ] enum E2611
  3208 ;; Return value:  Size  Location     Type
  3209 ;;		None               void
  3210 ;; Registers used:
  3211 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3218 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3220 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3221 ;;Total ram usage:        1 bytes
  3222 ;; Hardware stack levels used:    1
  3223 ;; Hardware stack levels required when called:   11
  3224 ;; This function calls:
  3225 ;;		Nothing
  3226 ;; This function is called by:
  3227 ;;		_SYSTEM_Initialize
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           
  3232                           ;psect for function _BUTTON_Enable
  3233  08D6                     _BUTTON_Enable:	
  3234                           
  3235                           ;incstack = 0
  3236                           ; Regs used in _BUTTON_Enable: [wreg-fsr0h+status,2+status,0]
  3237                           ;BUTTON_Enable@button stored from wreg
  3238  08D6  0022               	movlb	2	; select bank2
  3239  08D7  00E0               	movwf	BUTTON_Enable@button^(0+256)
  3240                           
  3241                           ;buttons.c: 94: }
  3242                           
  3243                           ;buttons.c: 93: break;
  3244                           
  3245                           ;buttons.c: 92: case BUTTON_NONE:
  3246                           
  3247                           ;buttons.c: 90: break;
  3248                           
  3249                           ;buttons.c: 88: {
  3250                           ;buttons.c: 89: case BUTTON_S1:
  3251                           
  3252                           ;buttons.c: 87: switch(button)
  3253  08D8  0860               	movf	BUTTON_Enable@button^(0+256),w
  3254                           
  3255                           ; Switch size 1, requested type "space"
  3256                           ; Number of cases is 2, Range of values is 0 to 1
  3257                           ; switch strategies available:
  3258                           ; Name         Instructions Cycles
  3259                           ; simple_byte            7     4 (average)
  3260                           ; direct_byte           10     6 (fixed)
  3261                           ; jumptable            260     6 (fixed)
  3262                           ;	Chosen strategy is simple_byte
  3263  08D9  3A00               	xorlw	0	; case 0
  3264  08DA  1903               	skipnz
  3265  08DB  28E0               	goto	l207
  3266  08DC  3A01               	xorlw	1	; case 1
  3267  08DD  1903               	skipnz
  3268  08DE  28E0               	goto	l207
  3269  08DF  28E0               	goto	l207
  3270  08E0                     l207:	
  3271  08E0  0008               	return
  3272  08E1                     __end_of_BUTTON_Enable:	
  3273                           
  3274                           	psect	text6
  3275  0F24                     __ptext6:	
  3276 ;; *************** function _APP_DeviceCDCBasicDemoTasks *****************
  3277 ;; Defined at:
  3278 ;;		line 82 in file "../src/app_device_cdc_basic.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;		None
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;  i               1    1[BANK3 ] unsigned char 
  3283 ;;  numBytesRead    1    0[BANK3 ] unsigned char 
  3284 ;; Return value:  Size  Location     Type
  3285 ;;		None               void
  3286 ;; Registers used:
  3287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3288 ;; Tracked objects:
  3289 ;;		On entry : 0/0
  3290 ;;		On exit  : 0/0
  3291 ;;		Unchanged: 0/0
  3292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3294 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  3295 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3296 ;;      Totals:         0       0       0       2       2       0       0       0       0       0       0       0       
      +0       0
  3297 ;;Total ram usage:        4 bytes
  3298 ;; Hardware stack levels used:    1
  3299 ;; Hardware stack levels required when called:   13
  3300 ;; This function calls:
  3301 ;;		_BUTTON_IsPressed
  3302 ;;		_CDCTxService
  3303 ;;		_getsUSBUSART
  3304 ;;		_putUSBUSART
  3305 ;;		_putrsUSBUSART
  3306 ;; This function is called by:
  3307 ;;		_main
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           
  3312                           ;psect for function _APP_DeviceCDCBasicDemoTasks
  3313  0F24                     _APP_DeviceCDCBasicDemoTasks:	
  3314                           
  3315                           ;app_device_cdc_basic.c: 87: if(BUTTON_IsPressed(BUTTON_S1) == 1)
  3316                           
  3317                           ;incstack = 0
  3318                           ; Regs used in _APP_DeviceCDCBasicDemoTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  3319  0F24  3001               	movlw	1
  3320  0F25  3189  211C  318F   	fcall	_BUTTON_IsPressed
  3321  0F28  3A01               	xorlw	1
  3322  0F29  1D03               	skipz
  3323  0F2A  2F3A               	goto	l5537
  3324                           
  3325                           ;app_device_cdc_basic.c: 88: {
  3326                           ;app_device_cdc_basic.c: 92: if(buttonPressed == 0)
  3327  0F2B  0023               	movlb	3	; select bank3
  3328  0F2C  084E               	movf	_buttonPressed^(0+384),w
  3329  0F2D  1D03               	btfss	3,2
  3330  0F2E  2F3C               	goto	l5539
  3331                           
  3332                           ;app_device_cdc_basic.c: 93: {
  3333                           ;app_device_cdc_basic.c: 96: if((cdc_trf_state == 0) == 1)
  3334  0F2F  0851               	movf	_cdc_trf_state^(0+384),w
  3335  0F30  1D03               	btfss	3,2
  3336  0F31  2F3C               	goto	l5539
  3337                           
  3338                           ;app_device_cdc_basic.c: 97: {
  3339                           ;app_device_cdc_basic.c: 98: putrsUSBUSART(buttonMessage);
  3340  0F32  3020               	movlw	(low (_buttonMessage| (0+512)))& (0+255)
  3341  0F33  3187  27CE  318F   	fcall	_putrsUSBUSART
  3342                           
  3343                           ;app_device_cdc_basic.c: 99: buttonPressed = 1;
  3344  0F36  0023               	movlb	3	; select bank3
  3345  0F37  01CE               	clrf	_buttonPressed^(0+384)
  3346  0F38  0ACE               	incf	_buttonPressed^(0+384),f
  3347                           
  3348                           ;app_device_cdc_basic.c: 100: }
  3349                           ;app_device_cdc_basic.c: 101: }
  3350                           ;app_device_cdc_basic.c: 102: }
  3351  0F39  2F3C               	goto	l5539
  3352  0F3A                     l5537:	
  3353                           
  3354                           ;app_device_cdc_basic.c: 103: else
  3355                           ;app_device_cdc_basic.c: 104: {
  3356                           ;app_device_cdc_basic.c: 108: buttonPressed = 0;
  3357  0F3A  0023               	movlb	3	; select bank3
  3358  0F3B  01CE               	clrf	_buttonPressed^(0+384)
  3359  0F3C                     l5539:	
  3360                           
  3361                           ;app_device_cdc_basic.c: 109: }
  3362                           ;app_device_cdc_basic.c: 114: if( (cdc_trf_state == 0) == 1)
  3363  0F3C  0851               	movf	_cdc_trf_state^(0+384),w
  3364  0F3D  1D03               	btfss	3,2
  3365  0F3E  2F8E               	goto	l5561
  3366                           
  3367                           ;app_device_cdc_basic.c: 115: {
  3368                           ;app_device_cdc_basic.c: 116: uint8_t i;
  3369                           ;app_device_cdc_basic.c: 117: uint8_t numBytesRead;
  3370                           ;app_device_cdc_basic.c: 119: numBytesRead = getsUSBUSART(readBuffer, sizeof(readBuffer)
      +                          );
  3371  0F3F  3040               	movlw	64
  3372  0F40  0022               	movlb	2	; select bank2
  3373  0F41  00EE               	movwf	??_APP_DeviceCDCBasicDemoTasks^(0+256)
  3374  0F42  086E               	movf	??_APP_DeviceCDCBasicDemoTasks^(0+256),w
  3375  0F43  00E8               	movwf	getsUSBUSART@len^(0+256)
  3376  0F44  30A0               	movlw	(low (_readBuffer| (0+512)))& (0+255)
  3377  0F45  318D  25F7  318F   	fcall	_getsUSBUSART
  3378  0F48  0022               	movlb	2	; select bank2
  3379  0F49  00EF               	movwf	(??_APP_DeviceCDCBasicDemoTasks+1)^(0+256)
  3380  0F4A  086F               	movf	(??_APP_DeviceCDCBasicDemoTasks+1)^(0+256),w
  3381  0F4B  0023               	movlb	3	; select bank3
  3382  0F4C  00EB               	movwf	APP_DeviceCDCBasicDemoTasks@numBytesRead^(0+384)
  3383                           
  3384                           ;app_device_cdc_basic.c: 122: for(i=0; i<numBytesRead; i++)
  3385  0F4D  01EC               	clrf	APP_DeviceCDCBasicDemoTasks@i^(0+384)
  3386  0F4E  2F6F               	goto	l5555
  3387  0F4F                     l5545:	
  3388                           ;app_device_cdc_basic.c: 125: {
  3389                           ;app_device_cdc_basic.c: 129: case 0x0A:
  3390                           
  3391                           ;app_device_cdc_basic.c: 123: {
  3392                           ;app_device_cdc_basic.c: 124: switch(readBuffer[i])
  3393                           
  3394                           
  3395                           ;app_device_cdc_basic.c: 130: case 0x0D:
  3396                           ;app_device_cdc_basic.c: 131: writeBuffer[i] = readBuffer[i];
  3397  0F4F  086C               	movf	APP_DeviceCDCBasicDemoTasks@i^(0+384),w
  3398  0F50  3EA0               	addlw	(low (_readBuffer| (0+512)))& (0+255)
  3399  0F51  0086               	movwf	6
  3400  0F52  3002               	movlw	2	; select bank5/6
  3401  0F53  0087               	movwf	7
  3402  0F54  0801               	movf	1,w
  3403  0F55  2F5E               	goto	L1
  3404  0F56                     l5547:	
  3405                           ;app_device_cdc_basic.c: 139: default:
  3406                           
  3407                           ;app_device_cdc_basic.c: 132: break;
  3408                           
  3409                           
  3410                           ;app_device_cdc_basic.c: 140: writeBuffer[i] = readBuffer[i] + 1;
  3411  0F56  0023               	movlb	3	; select bank3
  3412  0F57  086C               	movf	APP_DeviceCDCBasicDemoTasks@i^(0+384),w
  3413  0F58  3EA0               	addlw	(low (_readBuffer| (0+512)))& (0+255)
  3414  0F59  0086               	movwf	6
  3415  0F5A  3002               	movlw	2	; select bank5/6
  3416  0F5B  0087               	movwf	7
  3417  0F5C  0801               	movf	1,w
  3418  0F5D  3E01               	addlw	1
  3419  0F5E                     L1:	
  3420  0F5E  0022               	movlb	2	; select bank2
  3421  0F5F  00EE               	movwf	??_APP_DeviceCDCBasicDemoTasks^(0+256)
  3422  0F60  0023               	movlb	3	; select bank3
  3423  0F61  086C               	movf	APP_DeviceCDCBasicDemoTasks@i^(0+384),w
  3424  0F62  3E20               	addlw	(low (_writeBuffer| (0+768)))& (0+255)
  3425  0F63  0086               	movwf	6
  3426  0F64  3003               	movlw	3	; select bank6/7
  3427  0F65  0087               	movwf	7
  3428  0F66  0022               	movlb	2	; select bank2
  3429  0F67  086E               	movf	??_APP_DeviceCDCBasicDemoTasks^(0+256),w
  3430  0F68  0081               	movwf	1
  3431  0F69                     l5553:	
  3432                           ;app_device_cdc_basic.c: 142: }
  3433                           
  3434                           ;app_device_cdc_basic.c: 141: break;
  3435                           
  3436  0F69  3001               	movlw	1
  3437  0F6A  0022               	movlb	2	; select bank2
  3438  0F6B  00EE               	movwf	??_APP_DeviceCDCBasicDemoTasks^(0+256)
  3439  0F6C  086E               	movf	??_APP_DeviceCDCBasicDemoTasks^(0+256),w
  3440  0F6D  0023               	movlb	3	; select bank3
  3441  0F6E  07EC               	addwf	APP_DeviceCDCBasicDemoTasks@i^(0+384),f
  3442  0F6F                     l5555:	
  3443  0F6F  086B               	movf	APP_DeviceCDCBasicDemoTasks@numBytesRead^(0+384),w
  3444  0F70  026C               	subwf	APP_DeviceCDCBasicDemoTasks@i^(0+384),w
  3445  0F71  1803               	btfsc	3,0
  3446  0F72  2F82               	goto	l5557
  3447  0F73  0023               	movlb	3	; select bank3
  3448  0F74  086C               	movf	APP_DeviceCDCBasicDemoTasks@i^(0+384),w
  3449  0F75  3EA0               	addlw	(low (_readBuffer| (0+512)))& (0+255)
  3450  0F76  0086               	movwf	6
  3451  0F77  3002               	movlw	2	; select bank5/6
  3452  0F78  0087               	movwf	7
  3453  0F79  0801               	movf	1,w
  3454                           
  3455                           ; Switch size 1, requested type "space"
  3456                           ; Number of cases is 2, Range of values is 10 to 13
  3457                           ; switch strategies available:
  3458                           ; Name         Instructions Cycles
  3459                           ; simple_byte            7     4 (average)
  3460                           ; direct_byte           17     9 (fixed)
  3461                           ; jumptable            263     9 (fixed)
  3462                           ;	Chosen strategy is simple_byte
  3463  0F7A  3A0A               	xorlw	10	; case 10
  3464  0F7B  1903               	skipnz
  3465  0F7C  2F4F               	goto	l5545
  3466  0F7D  3A07               	xorlw	7	; case 13
  3467  0F7E  1903               	skipnz
  3468  0F7F  2F4F               	goto	l5545
  3469  0F80  2F56               	goto	l5547
  3470  0F81  2F69               	goto	l5553
  3471  0F82                     l5557:	
  3472                           
  3473                           ;app_device_cdc_basic.c: 143: }
  3474                           ;app_device_cdc_basic.c: 145: if(numBytesRead > 0)
  3475  0F82  086B               	movf	APP_DeviceCDCBasicDemoTasks@numBytesRead^(0+384),w
  3476  0F83  1903               	btfsc	3,2
  3477  0F84  2F8E               	goto	l5561
  3478                           
  3479                           ;app_device_cdc_basic.c: 146: {
  3480                           ;app_device_cdc_basic.c: 150: putUSBUSART(writeBuffer,numBytesRead);
  3481  0F85  086B               	movf	APP_DeviceCDCBasicDemoTasks@numBytesRead^(0+384),w
  3482  0F86  0022               	movlb	2	; select bank2
  3483  0F87  00EE               	movwf	??_APP_DeviceCDCBasicDemoTasks^(0+256)
  3484  0F88  086E               	movf	??_APP_DeviceCDCBasicDemoTasks^(0+256),w
  3485  0F89  00E0               	movwf	putUSBUSART@length^(0+256)
  3486  0F8A  3020               	movlw	(low (_writeBuffer| (0+768)))& (0+255)
  3487  0F8B  3189  21AD  318F   	fcall	_putUSBUSART
  3488  0F8E                     l5561:	
  3489                           
  3490                           ;app_device_cdc_basic.c: 151: }
  3491                           ;app_device_cdc_basic.c: 152: }
  3492                           ;app_device_cdc_basic.c: 154: CDCTxService();
  3493  0F8E  3182  2234         	fcall	_CDCTxService
  3494  0F90  0008               	return
  3495  0F91                     __end_of_APP_DeviceCDCBasicDemoTasks:	
  3496                           
  3497                           	psect	text7
  3498  07CE                     __ptext7:	
  3499 ;; *************** function _putrsUSBUSART *****************
  3500 ;; Defined at:
  3501 ;;		line 783 in file "../../../../../../framework/usb/src/usb_device_cdc.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;  data            1    wreg     PTR const unsigned char 
  3504 ;;		 -> buttonMessage(18), 
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;  data            1    2[BANK2 ] PTR const unsigned char 
  3507 ;;		 -> buttonMessage(18), 
  3508 ;;  len             1    3[BANK2 ] unsigned char 
  3509 ;;  pData           1    1[BANK2 ] PTR const unsigned char 
  3510 ;;		 -> buttonMessage(18), 
  3511 ;; Return value:  Size  Location     Type
  3512 ;;		None               void
  3513 ;; Registers used:
  3514 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3521 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3522 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3523 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  3524 ;;Total ram usage:        4 bytes
  3525 ;; Hardware stack levels used:    1
  3526 ;; Hardware stack levels required when called:   11
  3527 ;; This function calls:
  3528 ;;		Nothing
  3529 ;; This function is called by:
  3530 ;;		_APP_DeviceCDCBasicDemoTasks
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           
  3535                           ;psect for function _putrsUSBUSART
  3536  07CE                     _putrsUSBUSART:	
  3537                           
  3538                           ;incstack = 0
  3539                           ; Regs used in _putrsUSBUSART: [wreg+fsr1l+fsr1h+status,2+status,0]
  3540                           ;putrsUSBUSART@data stored from wreg
  3541  07CE  0022               	movlb	2	; select bank2
  3542  07CF  00E2               	movwf	putrsUSBUSART@data^(0+256)
  3543                           
  3544                           ;usb_device_cdc.c: 785: uint8_t len;
  3545                           ;usb_device_cdc.c: 786: const const char *pData;
  3546                           ;usb_device_cdc.c: 811: {PIE2bits.USBIE = 0;};
  3547  07D0  0021               	movlb	1	; select bank1
  3548  07D1  1112               	bcf	18,2	;volatile
  3549                           
  3550                           ;usb_device_cdc.c: 812: if(cdc_trf_state != 0)
  3551  07D2  0023               	movlb	3	; select bank3
  3552  07D3  0851               	movf	_cdc_trf_state^(0+384),w
  3553  07D4  1903               	btfsc	3,2
  3554  07D5  2FD9               	goto	l5217
  3555                           
  3556                           ;usb_device_cdc.c: 813: {
  3557                           ;usb_device_cdc.c: 814: {PIE2bits.USBIE = 1;};
  3558  07D6  0021               	movlb	1	; select bank1
  3559  07D7  1512               	bsf	18,2	;volatile
  3560                           
  3561                           ;usb_device_cdc.c: 815: return;
  3562  07D8  0008               	return
  3563  07D9                     l5217:	
  3564                           
  3565                           ;usb_device_cdc.c: 816: }
  3566                           ;usb_device_cdc.c: 822: len = 0;
  3567  07D9  0022               	movlb	2	; select bank2
  3568  07DA  01E3               	clrf	putrsUSBUSART@len^(0+256)
  3569                           
  3570                           ;usb_device_cdc.c: 823: pData = data;
  3571  07DB  0862               	movf	putrsUSBUSART@data^(0+256),w
  3572  07DC  00E0               	movwf	??_putrsUSBUSART^(0+256)
  3573  07DD  0860               	movf	??_putrsUSBUSART^(0+256),w
  3574  07DE  00E1               	movwf	putrsUSBUSART@pData^(0+256)
  3575  07DF                     l5221:	
  3576                           ;usb_device_cdc.c: 824: do
  3577                           
  3578                           
  3579                           ;usb_device_cdc.c: 825: {
  3580                           ;usb_device_cdc.c: 826: len++;
  3581  07DF  3001               	movlw	1
  3582  07E0  00E0               	movwf	??_putrsUSBUSART^(0+256)
  3583  07E1  0860               	movf	??_putrsUSBUSART^(0+256),w
  3584  07E2  07E3               	addwf	putrsUSBUSART@len^(0+256),f
  3585                           
  3586                           ;usb_device_cdc.c: 827: if(len == 255) break;
  3587  07E3  0A63               	incf	putrsUSBUSART@len^(0+256),w
  3588  07E4  1903               	btfsc	3,2
  3589  07E5  2FEE               	goto	l5229
  3590                           
  3591                           ;usb_device_cdc.c: 828: }while(*pData++);
  3592  07E6  0861               	movf	putrsUSBUSART@pData^(0+256),w
  3593  07E7  0086               	movwf	6
  3594  07E8  3002               	movlw	2	; select bank4/5
  3595  07E9  0087               	movwf	7
  3596  07EA  0AE1               	incf	putrsUSBUSART@pData^(0+256),f
  3597  07EB  0801               	movf	1,w
  3598  07EC  1D03               	btfss	3,2
  3599  07ED  2FDF               	goto	l5221
  3600  07EE                     l5229:	
  3601                           
  3602                           ;usb_device_cdc.c: 837: { pCDCSrc.bRom = (const uint8_t*)data; cdc_tx_len = len; cdc_mem
      +                          _type = 0x00; cdc_trf_state = 1; };
  3603  07EE  0862               	movf	putrsUSBUSART@data^(0+256),w
  3604  07EF  0023               	movlb	3	; select bank3
  3605  07F0  00BF               	movwf	_pCDCSrc^(0+384)
  3606  07F1  3002               	movlw	2
  3607  07F2  00C0               	movwf	(_pCDCSrc+1)^(0+384)
  3608  07F3  0022               	movlb	2	; select bank2
  3609  07F4  0863               	movf	putrsUSBUSART@len^(0+256),w
  3610  07F5  00E0               	movwf	??_putrsUSBUSART^(0+256)
  3611  07F6  0860               	movf	??_putrsUSBUSART^(0+256),w
  3612  07F7  0023               	movlb	3	; select bank3
  3613  07F8  00D2               	movwf	_cdc_tx_len^(0+384)
  3614  07F9  01CF               	clrf	_cdc_mem_type^(0+384)
  3615  07FA  01D1               	clrf	_cdc_trf_state^(0+384)
  3616  07FB  0AD1               	incf	_cdc_trf_state^(0+384),f
  3617                           
  3618                           ;usb_device_cdc.c: 838: {PIE2bits.USBIE = 1;};
  3619  07FC  0021               	movlb	1	; select bank1
  3620  07FD  1512               	bsf	18,2	;volatile
  3621  07FE  0008               	return
  3622  07FF                     __end_of_putrsUSBUSART:	
  3623                           
  3624                           	psect	text8
  3625  09AD                     __ptext8:	
  3626 ;; *************** function _putUSBUSART *****************
  3627 ;; Defined at:
  3628 ;;		line 613 in file "../../../../../../framework/usb/src/usb_device_cdc.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;  data            1    wreg     PTR unsigned char 
  3631 ;;		 -> writeBuffer(64), 
  3632 ;;  length          1    0[BANK2 ] unsigned char 
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;  data            1    2[BANK2 ] PTR unsigned char 
  3635 ;;		 -> writeBuffer(64), 
  3636 ;; Return value:  Size  Location     Type
  3637 ;;		None               void
  3638 ;; Registers used:
  3639 ;;		wreg, status,2, status,0
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3645 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3646 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3647 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3648 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3649 ;;Total ram usage:        3 bytes
  3650 ;; Hardware stack levels used:    1
  3651 ;; Hardware stack levels required when called:   11
  3652 ;; This function calls:
  3653 ;;		Nothing
  3654 ;; This function is called by:
  3655 ;;		_APP_DeviceCDCBasicDemoTasks
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           
  3660                           ;psect for function _putUSBUSART
  3661  09AD                     _putUSBUSART:	
  3662                           
  3663                           ;incstack = 0
  3664                           ; Regs used in _putUSBUSART: [wreg+status,2+status,0]
  3665                           ;putUSBUSART@data stored from wreg
  3666  09AD  0022               	movlb	2	; select bank2
  3667  09AE  00E2               	movwf	putUSBUSART@data^(0+256)
  3668                           
  3669                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
  3670  09AF  0021               	movlb	1	; select bank1
  3671  09B0  1112               	bcf	18,2	;volatile
  3672                           
  3673                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
  3674  09B1  0023               	movlb	3	; select bank3
  3675  09B2  0851               	movf	_cdc_trf_state^(0+384),w
  3676  09B3  1D03               	btfss	3,2
  3677  09B4  29C5               	goto	l5279
  3678                           
  3679                           ;usb_device_cdc.c: 640: {
  3680                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  3681  09B5  0022               	movlb	2	; select bank2
  3682  09B6  0862               	movf	putUSBUSART@data^(0+256),w
  3683  09B7  0023               	movlb	3	; select bank3
  3684  09B8  00BF               	movwf	_pCDCSrc^(0+384)
  3685  09B9  3003               	movlw	3
  3686  09BA  00C0               	movwf	(_pCDCSrc+1)^(0+384)
  3687  09BB  0022               	movlb	2	; select bank2
  3688  09BC  0860               	movf	putUSBUSART@length^(0+256),w
  3689  09BD  00E1               	movwf	??_putUSBUSART^(0+256)
  3690  09BE  0861               	movf	??_putUSBUSART^(0+256),w
  3691  09BF  0023               	movlb	3	; select bank3
  3692  09C0  00D2               	movwf	_cdc_tx_len^(0+384)
  3693  09C1  01CF               	clrf	_cdc_mem_type^(0+384)
  3694  09C2  0ACF               	incf	_cdc_mem_type^(0+384),f
  3695  09C3  01D1               	clrf	_cdc_trf_state^(0+384)
  3696  09C4  0AD1               	incf	_cdc_trf_state^(0+384),f
  3697  09C5                     l5279:	
  3698                           
  3699                           ;usb_device_cdc.c: 642: }
  3700                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
  3701  09C5  0021               	movlb	1	; select bank1
  3702  09C6  1512               	bsf	18,2	;volatile
  3703  09C7  0008               	return
  3704  09C8                     __end_of_putUSBUSART:	
  3705                           
  3706                           	psect	text9
  3707  0DF7                     __ptext9:	
  3708 ;; *************** function _getsUSBUSART *****************
  3709 ;; Defined at:
  3710 ;;		line 542 in file "../../../../../../framework/usb/src/usb_device_cdc.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;  buffer          1    wreg     PTR unsigned char 
  3713 ;;		 -> readBuffer(64), 
  3714 ;;  len             1    8[BANK2 ] unsigned char 
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;  buffer          1   11[BANK2 ] PTR unsigned char 
  3717 ;;		 -> readBuffer(64), 
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  1    wreg      unsigned char 
  3720 ;; Registers used:
  3721 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3727 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3728 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3729 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3730 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  3731 ;;Total ram usage:        6 bytes
  3732 ;; Hardware stack levels used:    1
  3733 ;; Hardware stack levels required when called:   12
  3734 ;; This function calls:
  3735 ;;		_USBTransferOnePacket
  3736 ;; This function is called by:
  3737 ;;		_APP_DeviceCDCBasicDemoTasks
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           
  3742                           ;psect for function _getsUSBUSART
  3743  0DF7                     _getsUSBUSART:	
  3744                           
  3745                           ;incstack = 0
  3746                           ; Regs used in _getsUSBUSART: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3747                           ;getsUSBUSART@buffer stored from wreg
  3748  0DF7  0022               	movlb	2	; select bank2
  3749  0DF8  00EB               	movwf	getsUSBUSART@buffer^(0+256)
  3750                           
  3751                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
  3752  0DF9  0023               	movlb	3	; select bank3
  3753  0DFA  01D0               	clrf	_cdc_rx_len^(0+384)
  3754                           
  3755                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
  3756  0DFB  0843               	movf	_CDCDataOutHandle^(0+384),w
  3757  0DFC  1903               	btfsc	3,2
  3758  0DFD  2E0C               	goto	l5245
  3759  0DFE  0843               	movf	_CDCDataOutHandle^(0+384),w
  3760  0DFF  0086               	movwf	6
  3761  0E00  0187               	clrf	7
  3762  0E01  0D01               	rlf	1,w
  3763  0E02  0D01               	rlf	1,w
  3764  0E03  3901               	andlw	1
  3765  0E04  0022               	movlb	2	; select bank2
  3766  0E05  00E9               	movwf	??_getsUSBUSART^(0+256)
  3767  0E06  01EA               	clrf	(??_getsUSBUSART^(0+256)+1)
  3768  0E07  0869               	movf	??_getsUSBUSART^(0+256),w
  3769  0E08  00EC               	movwf	_getsUSBUSART$2107^(0+256)
  3770  0E09  086A               	movf	(??_getsUSBUSART+1)^(0+256),w
  3771  0E0A  00ED               	movwf	(_getsUSBUSART$2107+1)^(0+256)
  3772  0E0B  2E0F               	goto	l5247
  3773  0E0C                     l5245:	
  3774  0E0C  0022               	movlb	2	; select bank2
  3775  0E0D  01EC               	clrf	_getsUSBUSART$2107^(0+256)
  3776  0E0E  01ED               	clrf	(_getsUSBUSART$2107+1)^(0+256)
  3777  0E0F                     l5247:	
  3778  0E0F  086C               	movf	_getsUSBUSART$2107^(0+256),w
  3779  0E10  046D               	iorwf	(_getsUSBUSART$2107+1)^(0+256),w
  3780  0E11  1D03               	btfss	3,2
  3781  0E12  2E56               	goto	l5263
  3782                           
  3783                           ;usb_device_cdc.c: 547: {
  3784                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  3785  0E13  0023               	movlb	3	; select bank3
  3786  0E14  0A43               	incf	_CDCDataOutHandle^(0+384),w
  3787  0E15  0086               	movwf	6
  3788  0E16  0187               	clrf	7
  3789  0E17  0022               	movlb	2	; select bank2
  3790  0E18  0868               	movf	getsUSBUSART@len^(0+256),w
  3791  0E19  0201               	subwf	1,w
  3792  0E1A  1803               	skipnc
  3793  0E1B  2E23               	goto	l5253
  3794                           
  3795                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  3796  0E1C  0023               	movlb	3	; select bank3
  3797  0E1D  0843               	movf	_CDCDataOutHandle^(0+384),w
  3798  0E1E  0086               	movwf	6
  3799  0E1F  0187               	clrf	7
  3800  0E20  3F41               	moviw [1]fsr1
  3801  0E21  0022               	movlb	2	; select bank2
  3802  0E22  00E8               	movwf	getsUSBUSART@len^(0+256)
  3803  0E23                     l5253:	
  3804                           
  3805                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  3806  0E23  0023               	movlb	3	; select bank3
  3807  0E24  01D0               	clrf	_cdc_rx_len^(0+384)
  3808  0E25                     l5259:	
  3809  0E25  0022               	movlb	2	; select bank2
  3810  0E26  0868               	movf	getsUSBUSART@len^(0+256),w
  3811  0E27  0023               	movlb	3	; select bank3
  3812  0E28  0250               	subwf	_cdc_rx_len^(0+384),w
  3813  0E29  1803               	btfsc	3,0
  3814  0E2A  2E44               	goto	l5261
  3815                           
  3816                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  3817  0E2B  0850               	movf	_cdc_rx_len^(0+384),w
  3818  0E2C  3E20               	addlw	32
  3819  0E2D  0086               	movwf	6
  3820  0E2E  3001               	movlw	1	; select bank2/3
  3821  0E2F  0087               	movwf	7
  3822  0E30  0801               	movf	1,w
  3823  0E31  0022               	movlb	2	; select bank2
  3824  0E32  00E9               	movwf	??_getsUSBUSART^(0+256)
  3825  0E33  0023               	movlb	3	; select bank3
  3826  0E34  0850               	movf	_cdc_rx_len^(0+384),w
  3827  0E35  0022               	movlb	2	; select bank2
  3828  0E36  076B               	addwf	getsUSBUSART@buffer^(0+256),w
  3829  0E37  00EA               	movwf	(??_getsUSBUSART+1)^(0+256)
  3830  0E38  086A               	movf	(??_getsUSBUSART+1)^(0+256),w
  3831  0E39  0086               	movwf	6
  3832  0E3A  3002               	movlw	2	; select bank4/5
  3833  0E3B  0087               	movwf	7
  3834  0E3C  0869               	movf	??_getsUSBUSART^(0+256),w
  3835  0E3D  0081               	movwf	1
  3836  0E3E  3001               	movlw	1
  3837  0E3F  00E9               	movwf	??_getsUSBUSART^(0+256)
  3838  0E40  0869               	movf	??_getsUSBUSART^(0+256),w
  3839  0E41  0023               	movlb	3	; select bank3
  3840  0E42  07D0               	addwf	_cdc_rx_len^(0+384),f
  3841  0E43  2E25               	goto	l5259
  3842  0E44                     l5261:	
  3843                           
  3844                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  3845  0E44  0022               	movlb	2	; select bank2
  3846  0E45  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  3847  0E46  3020               	movlw	32
  3848  0E47  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  3849  0E48  3001               	movlw	1
  3850  0E49  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  3851  0E4A  3040               	movlw	64
  3852  0E4B  00E9               	movwf	??_getsUSBUSART^(0+256)
  3853  0E4C  0869               	movf	??_getsUSBUSART^(0+256),w
  3854  0E4D  00E3               	movwf	USBTransferOnePacket@len^(0+256)
  3855  0E4E  3002               	movlw	2
  3856  0E4F  318C  2493         	fcall	_USBTransferOnePacket
  3857  0E51  0022               	movlb	2	; select bank2
  3858  0E52  00EA               	movwf	(??_getsUSBUSART+1)^(0+256)
  3859  0E53  086A               	movf	(??_getsUSBUSART+1)^(0+256),w
  3860  0E54  0023               	movlb	3	; select bank3
  3861  0E55  00C3               	movwf	_CDCDataOutHandle^(0+384)
  3862  0E56                     l5263:	
  3863                           
  3864                           ;usb_device_cdc.c: 567: }
  3865                           ;usb_device_cdc.c: 569: return cdc_rx_len;
  3866  0E56  0023               	movlb	3	; select bank3
  3867  0E57  0850               	movf	_cdc_rx_len^(0+384),w
  3868  0E58  0008               	return
  3869  0E59                     __end_of_getsUSBUSART:	
  3870                           
  3871                           	psect	text10
  3872  0234                     __ptext10:	
  3873 ;; *************** function _CDCTxService *****************
  3874 ;; Defined at:
  3875 ;;		line 893 in file "../../../../../../framework/usb/src/usb_device_cdc.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;		None
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;  byte_to_send    1   13[BANK2 ] unsigned char 
  3880 ;;  i               1   12[BANK2 ] unsigned char 
  3881 ;; Return value:  Size  Location     Type
  3882 ;;		None               void
  3883 ;; Registers used:
  3884 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3891 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  3892 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3893 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  3894 ;;Total ram usage:        6 bytes
  3895 ;; Hardware stack levels used:    1
  3896 ;; Hardware stack levels required when called:   12
  3897 ;; This function calls:
  3898 ;;		_USBTransferOnePacket
  3899 ;; This function is called by:
  3900 ;;		_APP_DeviceCDCBasicDemoTasks
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           
  3905                           ;psect for function _CDCTxService
  3906  0234                     _CDCTxService:	
  3907                           
  3908                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
  3909                           ;usb_device_cdc.c: 896: uint8_t i;
  3910                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
  3911                           
  3912                           ;incstack = 0
  3913                           ; Regs used in _CDCTxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3914  0234  0021               	movlb	1	; select bank1
  3915  0235  1112               	bcf	18,2	;volatile
  3916                           
  3917                           ;usb_device_cdc.c: 900: {};
  3918                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
  3919  0236  0023               	movlb	3	; select bank3
  3920  0237  0842               	movf	_CDCDataInHandle^(0+384),w
  3921  0238  1903               	btfsc	3,2
  3922  0239  2A48               	goto	l5287
  3923  023A  0842               	movf	_CDCDataInHandle^(0+384),w
  3924  023B  0086               	movwf	6
  3925  023C  0187               	clrf	7
  3926  023D  0D01               	rlf	1,w
  3927  023E  0D01               	rlf	1,w
  3928  023F  3901               	andlw	1
  3929  0240  0022               	movlb	2	; select bank2
  3930  0241  00E8               	movwf	??_CDCTxService^(0+256)
  3931  0242  01E9               	clrf	(??_CDCTxService^(0+256)+1)
  3932  0243  0868               	movf	??_CDCTxService^(0+256),w
  3933  0244  00EA               	movwf	_CDCTxService$2155^(0+256)
  3934  0245  0869               	movf	(??_CDCTxService+1)^(0+256),w
  3935  0246  00EB               	movwf	(_CDCTxService$2155+1)^(0+256)
  3936  0247  2A4B               	goto	l5289
  3937  0248                     l5287:	
  3938  0248  0022               	movlb	2	; select bank2
  3939  0249  01EA               	clrf	_CDCTxService$2155^(0+256)
  3940  024A  01EB               	clrf	(_CDCTxService$2155+1)^(0+256)
  3941  024B                     l5289:	
  3942  024B  086A               	movf	_CDCTxService$2155^(0+256),w
  3943  024C  046B               	iorwf	(_CDCTxService$2155+1)^(0+256),w
  3944  024D  1903               	btfsc	3,2
  3945  024E  2A52               	goto	l5293
  3946                           
  3947                           ;usb_device_cdc.c: 903: {
  3948                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
  3949  024F  0021               	movlb	1	; select bank1
  3950  0250  1512               	bsf	18,2	;volatile
  3951                           
  3952                           ;usb_device_cdc.c: 905: return;
  3953  0251  0008               	return
  3954  0252                     l5293:	
  3955                           
  3956                           ;usb_device_cdc.c: 906: }
  3957                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
  3958  0252  3003               	movlw	3
  3959  0253  0023               	movlb	3	; select bank3
  3960  0254  0651               	xorwf	_cdc_trf_state^(0+384),w
  3961  0255  1903               	btfsc	3,2
  3962                           
  3963                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
  3964  0256  01D1               	clrf	_cdc_trf_state^(0+384)
  3965                           
  3966                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
  3967  0257  0851               	movf	_cdc_trf_state^(0+384),w
  3968  0258  1D03               	btfss	3,2
  3969  0259  2A5D               	goto	l5301
  3970                           
  3971                           ;usb_device_cdc.c: 920: {
  3972                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
  3973  025A  0021               	movlb	1	; select bank1
  3974  025B  1512               	bsf	18,2	;volatile
  3975                           
  3976                           ;usb_device_cdc.c: 922: return;
  3977  025C  0008               	return
  3978  025D                     l5301:	
  3979                           
  3980                           ;usb_device_cdc.c: 923: }
  3981                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
  3982  025D  3002               	movlw	2
  3983  025E  0023               	movlb	3	; select bank3
  3984  025F  0651               	xorwf	_cdc_trf_state^(0+384),w
  3985  0260  1D03               	btfss	3,2
  3986  0261  2A7A               	goto	l5307
  3987                           
  3988                           ;usb_device_cdc.c: 929: {
  3989                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  3990  0262  0022               	movlb	2	; select bank2
  3991  0263  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  3992  0264  0AE0               	incf	USBTransferOnePacket@dir^(0+256),f
  3993  0265  3000               	movlw	0
  3994  0266  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  3995  0267  3000               	movlw	0
  3996  0268  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  3997  0269  01E3               	clrf	USBTransferOnePacket@len^(0+256)
  3998  026A  3002               	movlw	2
  3999  026B  318C  2493  3182   	fcall	_USBTransferOnePacket
  4000  026E  0022               	movlb	2	; select bank2
  4001  026F  00E8               	movwf	??_CDCTxService^(0+256)
  4002  0270  0868               	movf	??_CDCTxService^(0+256),w
  4003  0271  0023               	movlb	3	; select bank3
  4004  0272  00C2               	movwf	_CDCDataInHandle^(0+384)
  4005                           
  4006                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
  4007  0273  3003               	movlw	3
  4008  0274  0022               	movlb	2	; select bank2
  4009  0275  00E8               	movwf	??_CDCTxService^(0+256)
  4010  0276  0868               	movf	??_CDCTxService^(0+256),w
  4011  0277  0023               	movlb	3	; select bank3
  4012  0278  00D1               	movwf	_cdc_trf_state^(0+384)
  4013                           
  4014                           ;usb_device_cdc.c: 933: }
  4015  0279  2B05               	goto	l5355
  4016  027A                     l5307:	
  4017                           
  4018                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
  4019  027A  0351               	decf	_cdc_trf_state^(0+384),w
  4020  027B  1D03               	btfss	3,2
  4021  027C  2B05               	goto	l5355
  4022                           
  4023                           ;usb_device_cdc.c: 935: {
  4024                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
  4025  027D  3041               	movlw	65
  4026  027E  0252               	subwf	_cdc_tx_len^(0+384),w
  4027  027F  1C03               	skipc
  4028  0280  2A83               	goto	l5313
  4029                           
  4030                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
  4031  0281  3040               	movlw	64
  4032  0282  2A85               	goto	L2
  4033  0283                     l5313:	
  4034                           
  4035                           ;usb_device_cdc.c: 941: else
  4036                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
  4037  0283  0023               	movlb	3	; select bank3
  4038  0284  0852               	movf	_cdc_tx_len^(0+384),w
  4039  0285                     L2:	
  4040  0285  0022               	movlb	2	; select bank2
  4041  0286  00E8               	movwf	??_CDCTxService^(0+256)
  4042  0287  0868               	movf	??_CDCTxService^(0+256),w
  4043  0288  00ED               	movwf	CDCTxService@byte_to_send^(0+256)
  4044                           
  4045                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
  4046  0289  036D               	decf	CDCTxService@byte_to_send^(0+256),w
  4047  028A  3AFF               	xorlw	255
  4048  028B  0023               	movlb	3	; select bank3
  4049  028C  0752               	addwf	_cdc_tx_len^(0+384),w
  4050  028D  0022               	movlb	2	; select bank2
  4051  028E  00E8               	movwf	??_CDCTxService^(0+256)
  4052  028F  0868               	movf	??_CDCTxService^(0+256),w
  4053  0290  0023               	movlb	3	; select bank3
  4054  0291  00D2               	movwf	_cdc_tx_len^(0+384)
  4055                           
  4056                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  4057  0292  30A0               	movlw	160
  4058  0293  0022               	movlb	2	; select bank2
  4059  0294  00E8               	movwf	??_CDCTxService^(0+256)
  4060  0295  0868               	movf	??_CDCTxService^(0+256),w
  4061  0296  0023               	movlb	3	; select bank3
  4062  0297  00BD               	movwf	_pCDCDst^(0+384)
  4063                           
  4064                           ;usb_device_cdc.c: 951: i = byte_to_send;
  4065  0298  0022               	movlb	2	; select bank2
  4066  0299  086D               	movf	CDCTxService@byte_to_send^(0+256),w
  4067  029A  00E8               	movwf	??_CDCTxService^(0+256)
  4068  029B  0868               	movf	??_CDCTxService^(0+256),w
  4069  029C  00EC               	movwf	CDCTxService@i^(0+256)
  4070                           
  4071                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
  4072  029D  0023               	movlb	3	; select bank3
  4073  029E  084F               	movf	_cdc_mem_type^(0+384),w
  4074  029F  1903               	btfsc	3,2
  4075  02A0  2ABD               	goto	l5333
  4076  02A1  2ADD               	goto	l5343
  4077  02A2                     l5325:	
  4078                           ;usb_device_cdc.c: 953: {
  4079                           ;usb_device_cdc.c: 954: while(i)
  4080                           
  4081                           
  4082                           ;usb_device_cdc.c: 955: {
  4083                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
  4084  02A2  0023               	movlb	3	; select bank3
  4085  02A3  083F               	movf	_pCDCSrc^(0+384),w
  4086  02A4  0086               	movwf	6
  4087  02A5  0840               	movf	(_pCDCSrc+1)^(0+384),w
  4088  02A6  0087               	movwf	7
  4089  02A7  0801               	movf	1,w
  4090  02A8  0022               	movlb	2	; select bank2
  4091  02A9  00E8               	movwf	??_CDCTxService^(0+256)
  4092  02AA  0023               	movlb	3	; select bank3
  4093  02AB  083D               	movf	_pCDCDst^(0+384),w
  4094  02AC  0086               	movwf	6
  4095  02AD  0187               	clrf	7
  4096  02AE  0022               	movlb	2	; select bank2
  4097  02AF  0868               	movf	??_CDCTxService^(0+256),w
  4098  02B0  0081               	movwf	1
  4099                           
  4100                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
  4101  02B1  3001               	movlw	1
  4102  02B2  00E8               	movwf	??_CDCTxService^(0+256)
  4103  02B3  0868               	movf	??_CDCTxService^(0+256),w
  4104  02B4  0023               	movlb	3	; select bank3
  4105  02B5  07BD               	addwf	_pCDCDst^(0+384),f
  4106                           
  4107                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
  4108  02B6  3001               	movlw	1
  4109  02B7  07BF               	addwf	_pCDCSrc^(0+384),f
  4110  02B8  3000               	movlw	0
  4111  02B9  3DC0               	addwfc	(_pCDCSrc+1)^(0+384),f
  4112                           
  4113                           ;usb_device_cdc.c: 959: i--;
  4114  02BA  3001               	movlw	1
  4115  02BB  0022               	movlb	2	; select bank2
  4116  02BC  02EC               	subwf	CDCTxService@i^(0+256),f
  4117  02BD                     l5333:	
  4118  02BD  0022               	movlb	2	; select bank2
  4119  02BE  086C               	movf	CDCTxService@i^(0+256),w
  4120  02BF  1903               	btfsc	3,2
  4121  02C0  2AE1               	goto	l5345
  4122  02C1  2AA2               	goto	l5325
  4123  02C2                     l5335:	
  4124                           ;usb_device_cdc.c: 962: else
  4125                           ;usb_device_cdc.c: 963: {
  4126                           ;usb_device_cdc.c: 964: while(i)
  4127                           
  4128                           ;usb_device_cdc.c: 960: }
  4129                           ;usb_device_cdc.c: 961: }
  4130                           
  4131                           
  4132                           ;usb_device_cdc.c: 965: {
  4133                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
  4134  02C2  0023               	movlb	3	; select bank3
  4135  02C3  083F               	movf	_pCDCSrc^(0+384),w
  4136  02C4  0086               	movwf	6
  4137  02C5  0840               	movf	(_pCDCSrc+1)^(0+384),w
  4138  02C6  0087               	movwf	7
  4139  02C7  0801               	movf	1,w
  4140  02C8  0022               	movlb	2	; select bank2
  4141  02C9  00E8               	movwf	??_CDCTxService^(0+256)
  4142  02CA  0023               	movlb	3	; select bank3
  4143  02CB  083D               	movf	_pCDCDst^(0+384),w
  4144  02CC  0086               	movwf	6
  4145  02CD  0187               	clrf	7
  4146  02CE  0022               	movlb	2	; select bank2
  4147  02CF  0868               	movf	??_CDCTxService^(0+256),w
  4148  02D0  0081               	movwf	1
  4149                           
  4150                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
  4151  02D1  3001               	movlw	1
  4152  02D2  00E8               	movwf	??_CDCTxService^(0+256)
  4153  02D3  0868               	movf	??_CDCTxService^(0+256),w
  4154  02D4  0023               	movlb	3	; select bank3
  4155  02D5  07BD               	addwf	_pCDCDst^(0+384),f
  4156                           
  4157                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
  4158  02D6  3001               	movlw	1
  4159  02D7  07BF               	addwf	_pCDCSrc^(0+384),f
  4160  02D8  3000               	movlw	0
  4161  02D9  3DC0               	addwfc	(_pCDCSrc+1)^(0+384),f
  4162                           
  4163                           ;usb_device_cdc.c: 969: i--;
  4164  02DA  3001               	movlw	1
  4165  02DB  0022               	movlb	2	; select bank2
  4166  02DC  02EC               	subwf	CDCTxService@i^(0+256),f
  4167  02DD                     l5343:	
  4168  02DD  0022               	movlb	2	; select bank2
  4169  02DE  086C               	movf	CDCTxService@i^(0+256),w
  4170  02DF  1D03               	btfss	3,2
  4171  02E0  2AC2               	goto	l5335
  4172  02E1                     l5345:	
  4173                           
  4174                           ;usb_device_cdc.c: 970: }
  4175                           ;usb_device_cdc.c: 971: }
  4176                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
  4177  02E1  0023               	movlb	3	; select bank3
  4178  02E2  0852               	movf	_cdc_tx_len^(0+384),w
  4179  02E3  1D03               	btfss	3,2
  4180  02E4  2AF2               	goto	l5353
  4181                           
  4182                           ;usb_device_cdc.c: 978: {
  4183                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
  4184  02E5  3040               	movlw	64
  4185  02E6  0022               	movlb	2	; select bank2
  4186  02E7  066D               	xorwf	CDCTxService@byte_to_send^(0+256),w
  4187  02E8  1D03               	btfss	3,2
  4188  02E9  2AEC               	goto	l5351
  4189                           
  4190                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
  4191  02EA  3002               	movlw	2
  4192  02EB  2AEE               	goto	L3
  4193  02EC                     l5351:	
  4194                           
  4195                           ;usb_device_cdc.c: 981: else
  4196                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
  4197  02EC  3003               	movlw	3
  4198  02ED  0022               	movlb	2	; select bank2
  4199  02EE                     L3:	
  4200  02EE  00E8               	movwf	??_CDCTxService^(0+256)
  4201  02EF  0868               	movf	??_CDCTxService^(0+256),w
  4202  02F0  0023               	movlb	3	; select bank3
  4203  02F1  00D1               	movwf	_cdc_trf_state^(0+384)
  4204  02F2                     l5353:	
  4205                           
  4206                           ;usb_device_cdc.c: 983: }
  4207                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  4208  02F2  0022               	movlb	2	; select bank2
  4209  02F3  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  4210  02F4  0AE0               	incf	USBTransferOnePacket@dir^(0+256),f
  4211  02F5  30A0               	movlw	160
  4212  02F6  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  4213  02F7  3000               	movlw	0
  4214  02F8  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  4215  02F9  086D               	movf	CDCTxService@byte_to_send^(0+256),w
  4216  02FA  00E8               	movwf	??_CDCTxService^(0+256)
  4217  02FB  0868               	movf	??_CDCTxService^(0+256),w
  4218  02FC  00E3               	movwf	USBTransferOnePacket@len^(0+256)
  4219  02FD  3002               	movlw	2
  4220  02FE  318C  2493         	fcall	_USBTransferOnePacket
  4221  0300  0022               	movlb	2	; select bank2
  4222  0301  00E9               	movwf	(??_CDCTxService+1)^(0+256)
  4223  0302  0869               	movf	(??_CDCTxService+1)^(0+256),w
  4224  0303  0023               	movlb	3	; select bank3
  4225  0304  00C2               	movwf	_CDCDataInHandle^(0+384)
  4226  0305                     l5355:	
  4227                           
  4228                           ;usb_device_cdc.c: 986: }
  4229                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
  4230  0305  0021               	movlb	1	; select bank1
  4231  0306  1512               	bsf	18,2	;volatile
  4232  0307  0008               	return
  4233  0308                     __end_of_CDCTxService:	
  4234                           
  4235                           	psect	text11
  4236  0C93                     __ptext11:	
  4237 ;; *************** function _USBTransferOnePacket *****************
  4238 ;; Defined at:
  4239 ;;		line 1014 in file "../../../../../../framework/usb/src/usb_device.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;  ep              1    wreg     unsigned char 
  4242 ;;  dir             1    0[BANK2 ] unsigned char 
  4243 ;;  data            2    1[BANK2 ] PTR unsigned char 
  4244 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  4245 ;;  len             1    3[BANK2 ] unsigned char 
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;  ep              1    6[BANK2 ] unsigned char 
  4248 ;;  handle          1    7[BANK2 ] PTR volatile struct __BD
  4249 ;;		 -> NULL(0), BDT(48), 
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  1    wreg      PTR void 
  4252 ;; Registers used:
  4253 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4259 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  4260 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4261 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4262 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  4263 ;;Total ram usage:        8 bytes
  4264 ;; Hardware stack levels used:    1
  4265 ;; Hardware stack levels required when called:   11
  4266 ;; This function calls:
  4267 ;;		Nothing
  4268 ;; This function is called by:
  4269 ;;		_getsUSBUSART
  4270 ;;		_CDCTxService
  4271 ;;		_USBCDCEventHandler
  4272 ;; This function uses a non-reentrant model
  4273 ;;
  4274                           
  4275                           
  4276                           ;psect for function _USBTransferOnePacket
  4277  0C93                     _USBTransferOnePacket:	
  4278                           
  4279                           ;incstack = 0
  4280                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  4281                           ;USBTransferOnePacket@ep stored from wreg
  4282  0C93  0022               	movlb	2	; select bank2
  4283  0C94  00E6               	movwf	USBTransferOnePacket@ep^(0+256)
  4284                           
  4285                           ;usb_device.c: 1016: volatile BDT_ENTRY* handle;
  4286                           ;usb_device.c: 1019: if(dir != 0)
  4287  0C95  0860               	movf	USBTransferOnePacket@dir^(0+256),w
  4288  0C96  1903               	btfsc	3,2
  4289  0C97  2C9B               	goto	l5073
  4290                           
  4291                           ;usb_device.c: 1020: {
  4292                           ;usb_device.c: 1022: handle = pBDTEntryIn[ep];
  4293  0C98  0866               	movf	USBTransferOnePacket@ep^(0+256),w
  4294  0C99  3EB5               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  4295  0C9A  2C9D               	goto	L4
  4296  0C9B                     l5073:	
  4297                           ;usb_device.c: 1023: }
  4298                           
  4299                           
  4300                           ;usb_device.c: 1024: else
  4301                           ;usb_device.c: 1025: {
  4302                           ;usb_device.c: 1027: handle = pBDTEntryOut[ep];
  4303  0C9B  0866               	movf	USBTransferOnePacket@ep^(0+256),w
  4304  0C9C  3EB8               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  4305  0C9D                     L4:	
  4306  0C9D  0086               	movwf	6
  4307  0C9E  3001               	movlw	1	; select bank3/4
  4308  0C9F  0087               	movwf	7
  4309  0CA0  0801               	movf	1,w
  4310  0CA1  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  4311  0CA2  0864               	movf	??_USBTransferOnePacket^(0+256),w
  4312  0CA3  00E7               	movwf	USBTransferOnePacket@handle^(0+256)
  4313                           
  4314                           ;usb_device.c: 1028: }
  4315                           ;usb_device.c: 1032: if(handle == 0)
  4316  0CA4  0867               	movf	USBTransferOnePacket@handle^(0+256),w
  4317  0CA5  1D03               	btfss	3,2
  4318  0CA6  2CA9               	goto	l5081
  4319                           
  4320                           ;usb_device.c: 1033: {
  4321                           ;usb_device.c: 1034: return 0;
  4322  0CA7  3000               	movlw	0
  4323  0CA8  0008               	return
  4324  0CA9                     l5081:	
  4325                           
  4326                           ;usb_device.c: 1035: }
  4327                           ;usb_device.c: 1048: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  4328  0CA9  30FF               	movlw	255
  4329  0CAA  0561               	andwf	USBTransferOnePacket@data^(0+256),w
  4330  0CAB  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  4331  0CAC  307F               	movlw	127
  4332  0CAD  0562               	andwf	(USBTransferOnePacket@data+1)^(0+256),w
  4333  0CAE  00E5               	movwf	(??_USBTransferOnePacket+1)^(0+256)
  4334  0CAF  0867               	movf	USBTransferOnePacket@handle^(0+256),w
  4335  0CB0  3E02               	addlw	2
  4336  0CB1  0086               	movwf	6
  4337  0CB2  0187               	clrf	7
  4338  0CB3  0864               	movf	??_USBTransferOnePacket^(0+256),w
  4339  0CB4  3FC0               	movwi [0]fsr1
  4340  0CB5  0865               	movf	(??_USBTransferOnePacket^(0+256)+1),w
  4341  0CB6  3FC1               	movwi [1]fsr1
  4342                           
  4343                           ;usb_device.c: 1049: handle->CNT = len;
  4344  0CB7  0863               	movf	USBTransferOnePacket@len^(0+256),w
  4345  0CB8  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  4346  0CB9  0A67               	incf	USBTransferOnePacket@handle^(0+256),w
  4347  0CBA  0086               	movwf	6
  4348  0CBB  0187               	clrf	7
  4349  0CBC  0864               	movf	??_USBTransferOnePacket^(0+256),w
  4350  0CBD  0081               	movwf	1
  4351                           
  4352                           ;usb_device.c: 1050: handle->STAT.Val &= 0x40;
  4353  0CBE  3040               	movlw	64
  4354  0CBF  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  4355  0CC0  0867               	movf	USBTransferOnePacket@handle^(0+256),w
  4356  0CC1  0086               	movwf	6
  4357  0CC2  0187               	clrf	7
  4358  0CC3  0864               	movf	??_USBTransferOnePacket^(0+256),w
  4359  0CC4  0581               	andwf	1,f
  4360                           
  4361                           ;usb_device.c: 1051: handle->STAT.Val |= (0x08 & 0x08);
  4362  0CC5  0867               	movf	USBTransferOnePacket@handle^(0+256),w
  4363  0CC6  0086               	movwf	6
  4364  0CC7  0187               	clrf	7
  4365  0CC8  1581               	bsf	1,3
  4366                           
  4367                           ;usb_device.c: 1052: handle->STAT.Val |= 0x80;
  4368  0CC9  0867               	movf	USBTransferOnePacket@handle^(0+256),w
  4369  0CCA  0086               	movwf	6
  4370  0CCB  0187               	clrf	7
  4371  0CCC  1781               	bsf	1,7
  4372                           
  4373                           ;usb_device.c: 1055: if(dir != 0)
  4374  0CCD  0860               	movf	USBTransferOnePacket@dir^(0+256),w
  4375  0CCE  1903               	btfsc	3,2
  4376  0CCF  2CD5               	goto	l5091
  4377                           
  4378                           ;usb_device.c: 1056: {
  4379                           ;usb_device.c: 1058: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
  4380  0CD0  3004               	movlw	4
  4381  0CD1  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  4382  0CD2  0866               	movf	USBTransferOnePacket@ep^(0+256),w
  4383  0CD3  3EB5               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  4384  0CD4  2CD9               	goto	L5
  4385  0CD5                     l5091:	
  4386                           ;usb_device.c: 1059: }
  4387                           
  4388                           
  4389                           ;usb_device.c: 1060: else
  4390                           ;usb_device.c: 1061: {
  4391                           ;usb_device.c: 1063: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
  4392  0CD5  3004               	movlw	4
  4393  0CD6  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  4394  0CD7  0866               	movf	USBTransferOnePacket@ep^(0+256),w
  4395  0CD8  3EB8               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  4396  0CD9                     L5:	
  4397  0CD9  0086               	movwf	6
  4398  0CDA  3001               	movlw	1	; select bank3/4
  4399  0CDB  0087               	movwf	7
  4400  0CDC  0864               	movf	??_USBTransferOnePacket^(0+256),w
  4401  0CDD  0681               	xorwf	1,f
  4402                           
  4403                           ;usb_device.c: 1064: }
  4404                           ;usb_device.c: 1065: return (void*)handle;
  4405  0CDE  0867               	movf	USBTransferOnePacket@handle^(0+256),w
  4406  0CDF  0008               	return
  4407  0CE0                     __end_of_USBTransferOnePacket:	
  4408                           
  4409                           	psect	text12
  4410  091C                     __ptext12:	
  4411 ;; *************** function _BUTTON_IsPressed *****************
  4412 ;; Defined at:
  4413 ;;		line 55 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/buttons.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;  button          1    wreg     enum E2611
  4416 ;; Auto vars:     Size  Location     Type
  4417 ;;  button          1    0[BANK2 ] enum E2611
  4418 ;; Return value:  Size  Location     Type
  4419 ;;                  1    wreg      unsigned char 
  4420 ;; Registers used:
  4421 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4422 ;; Tracked objects:
  4423 ;;		On entry : 0/0
  4424 ;;		On exit  : 0/0
  4425 ;;		Unchanged: 0/0
  4426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4428 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4430 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4431 ;;Total ram usage:        1 bytes
  4432 ;; Hardware stack levels used:    1
  4433 ;; Hardware stack levels required when called:   11
  4434 ;; This function calls:
  4435 ;;		Nothing
  4436 ;; This function is called by:
  4437 ;;		_APP_DeviceCDCBasicDemoTasks
  4438 ;; This function uses a non-reentrant model
  4439 ;;
  4440                           
  4441                           
  4442                           ;psect for function _BUTTON_IsPressed
  4443  091C                     _BUTTON_IsPressed:	
  4444                           
  4445                           ;incstack = 0
  4446                           ; Regs used in _BUTTON_IsPressed: [wreg-fsr0h+status,2+status,0]
  4447                           ;BUTTON_IsPressed@button stored from wreg
  4448  091C  0022               	movlb	2	; select bank2
  4449  091D  00E0               	movwf	BUTTON_IsPressed@button^(0+256)
  4450                           
  4451                           ;buttons.c: 57: switch(button)
  4452  091E  2928               	goto	l5205
  4453  091F                     l5195:	
  4454                           ;buttons.c: 58: {
  4455                           ;buttons.c: 59: case BUTTON_S1:
  4456                           
  4457                           
  4458                           ;buttons.c: 60: return ( (PORTAbits.RA3 == 0) ? 1 : 0);
  4459  091F  1003               	clrc
  4460  0920  0020               	movlb	0	; select bank0
  4461  0921  1D8C               	btfss	12,3	;volatile
  4462  0922  1403               	setc
  4463  0923  3000               	movlw	0
  4464  0924  3D09               	addwfc	9,w
  4465  0925  0008               	return
  4466  0926                     l5199:	
  4467                           ;buttons.c: 62: case BUTTON_NONE:
  4468                           
  4469                           
  4470                           ;buttons.c: 63: return 0;
  4471  0926  3000               	movlw	0
  4472  0927  0008               	return
  4473  0928                     l5205:	
  4474                           ;buttons.c: 64: }
  4475                           
  4476  0928  0022               	movlb	2	; select bank2
  4477  0929  0860               	movf	BUTTON_IsPressed@button^(0+256),w
  4478                           
  4479                           ; Switch size 1, requested type "space"
  4480                           ; Number of cases is 2, Range of values is 0 to 1
  4481                           ; switch strategies available:
  4482                           ; Name         Instructions Cycles
  4483                           ; simple_byte            7     4 (average)
  4484                           ; direct_byte           10     6 (fixed)
  4485                           ; jumptable            260     6 (fixed)
  4486                           ;	Chosen strategy is simple_byte
  4487  092A  3A00               	xorlw	0	; case 0
  4488  092B  1903               	skipnz
  4489  092C  2926               	goto	l5199
  4490  092D  3A01               	xorlw	1	; case 1
  4491  092E  1903               	skipnz
  4492  092F  291F               	goto	l5195
  4493  0930  2931               	goto	l5207
  4494  0931                     l5207:	
  4495                           
  4496                           ;buttons.c: 66: return 0;
  4497  0931  3000               	movlw	0
  4498  0932  0008               	return
  4499  0933                     __end_of_BUTTON_IsPressed:	
  4500                           
  4501                           	psect	intentry
  4502  0004                     __pintentry:	
  4503 ;; *************** function _SYS_InterruptHigh *****************
  4504 ;; Defined at:
  4505 ;;		line 111 in file "../src/system_config/low_pin_count_usb_development_kit/pic16f1459/system.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;		None
  4508 ;; Auto vars:     Size  Location     Type
  4509 ;;		None
  4510 ;; Return value:  Size  Location     Type
  4511 ;;		None               void
  4512 ;; Registers used:
  4513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4514 ;; Tracked objects:
  4515 ;;		On entry : 0/0
  4516 ;;		On exit  : 0/0
  4517 ;;		Unchanged: 0/0
  4518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4521 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4522 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4523 ;;Total ram usage:        1 bytes
  4524 ;; Hardware stack levels used:    1
  4525 ;; Hardware stack levels required when called:   10
  4526 ;; This function calls:
  4527 ;;		_USBDeviceTasks
  4528 ;; This function is called by:
  4529 ;;		Interrupt level 1
  4530 ;; This function uses a non-reentrant model
  4531 ;;
  4532                           
  4533  0004                     _SYS_InterruptHigh:	
  4534                           
  4535                           ;incstack = 0
  4536                           ; Regs used in _SYS_InterruptHigh: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4537  0004  3180               	pagesel	$
  4538  0005  0020               	movlb	0	; select bank0
  4539  0006  087F               	movf	127,w
  4540  0007  0021               	movlb	1	; select bank1
  4541  0008  00E7               	movwf	??_SYS_InterruptHigh^(0+128)
  4542                           
  4543                           ;system.c: 114: USBDeviceTasks();
  4544  0009  3181  2150         	fcall	_USBDeviceTasks
  4545  000B  0021               	movlb	1	; select bank1
  4546  000C  0867               	movf	??_SYS_InterruptHigh^(0+128),w
  4547  000D  0020               	movlb	0	; select bank0
  4548  000E  00FF               	movwf	127
  4549  000F  0009               	retfie
  4550  0010                     __end_of_SYS_InterruptHigh:	
  4551                           
  4552                           	psect	text14
  4553  0150                     __ptext14:	
  4554 ;; *************** function _USBDeviceTasks *****************
  4555 ;; Defined at:
  4556 ;;		line 496 in file "../../../../../../framework/usb/src/usb_device.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;		None
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;  i               1    6[BANK1 ] unsigned char 
  4561 ;; Return value:  Size  Location     Type
  4562 ;;		None               void
  4563 ;; Registers used:
  4564 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4571 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4572 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4573 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4574 ;;Total ram usage:        3 bytes
  4575 ;; Hardware stack levels used:    1
  4576 ;; Hardware stack levels required when called:    9
  4577 ;; This function calls:
  4578 ;;		_USBCtrlEPAllowStatusStage
  4579 ;;		_USBCtrlEPService
  4580 ;;		_USBIncrement1msInternalTimers
  4581 ;;		_USBStallHandler
  4582 ;;		_USBSuspend
  4583 ;;		_USBWakeFromSuspend
  4584 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4585 ;;		i1_USBDeviceInit
  4586 ;; This function is called by:
  4587 ;;		_SYS_InterruptHigh
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           
  4592                           ;psect for function _USBDeviceTasks
  4593  0150                     _USBDeviceTasks:	
  4594                           
  4595                           ;usb_device.c: 498: uint8_t i;
  4596                           ;usb_device.c: 609: if(USBDeviceState == ATTACHED_STATE)
  4597                           
  4598                           ;incstack = 0
  4599                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4600  0150  0023               	movlb	3	; select bank3
  4601  0151  0349               	decf	_USBDeviceState^(0+384),w	;volatile
  4602  0152  1D03               	btfss	3,2
  4603  0153  2960               	goto	i1l5437
  4604                           
  4605                           ;usb_device.c: 610: {
  4606                           ;usb_device.c: 620: if(!UCONbits.SE0)
  4607  0154  003D               	movlb	29	; select bank29
  4608  0155  1A8E               	btfsc	14,5	;volatile
  4609  0156  2960               	goto	i1l5437
  4610                           
  4611                           ;usb_device.c: 621: {
  4612                           ;usb_device.c: 627: {UIR = 0;};
  4613  0157  0190               	clrf	16	;volatile
  4614                           
  4615                           ;usb_device.c: 633: UIEbits.URSTIE = 1;
  4616  0158  1412               	bsf	18,0	;volatile
  4617                           
  4618                           ;usb_device.c: 634: UIEbits.IDLEIE = 1;
  4619  0159  1612               	bsf	18,4	;volatile
  4620                           
  4621                           ;usb_device.c: 635: USBDeviceState = POWERED_STATE;
  4622  015A  3002               	movlw	2
  4623  015B  0021               	movlb	1	; select bank1
  4624  015C  00E4               	movwf	??_USBDeviceTasks^(0+128)
  4625  015D  0864               	movf	??_USBDeviceTasks^(0+128),w
  4626  015E  0023               	movlb	3	; select bank3
  4627  015F  00C9               	movwf	_USBDeviceState^(0+384)	;volatile
  4628  0160                     i1l5437:	
  4629                           
  4630                           ;usb_device.c: 636: }
  4631                           ;usb_device.c: 637: }
  4632                           ;usb_device.c: 653: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  4633  0160  003D               	movlb	29	; select bank29
  4634  0161  1910               	btfsc	16,2	;volatile
  4635  0162  1D12               	btfss	18,2	;volatile
  4636  0163  296D               	goto	i1l5445
  4637                           
  4638                           ;usb_device.c: 654: {
  4639                           ;usb_device.c: 655: (UIR &= 0xFB);
  4640  0164  30FB               	movlw	251
  4641  0165  0021               	movlb	1	; select bank1
  4642  0166  00E4               	movwf	??_USBDeviceTasks^(0+128)
  4643  0167  0864               	movf	??_USBDeviceTasks^(0+128),w
  4644  0168  003D               	movlb	29	; select bank29
  4645  0169  0590               	andwf	16,f	;volatile
  4646                           
  4647                           ;usb_device.c: 659: USBWakeFromSuspend();
  4648  016A  318A  223F  3181   	fcall	_USBWakeFromSuspend
  4649  016D                     i1l5445:	
  4650                           
  4651                           ;usb_device.c: 661: }
  4652                           ;usb_device.c: 666: if(UCONbits.SUSPND==1)
  4653  016D  003D               	movlb	29	; select bank29
  4654  016E  1C8E               	btfss	14,1	;volatile
  4655  016F  2973               	goto	i1l408
  4656                           
  4657                           ;usb_device.c: 667: {
  4658                           ;usb_device.c: 668: PIR2bits.USBIF = 0;;
  4659  0170  0020               	movlb	0	; select bank0
  4660  0171  1112               	bcf	18,2	;volatile
  4661                           
  4662                           ;usb_device.c: 669: return;
  4663  0172  0008               	return
  4664  0173                     i1l408:	
  4665                           
  4666                           ;usb_device.c: 670: }
  4667                           ;usb_device.c: 682: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4668  0173  1810               	btfsc	16,0	;volatile
  4669  0174  1C12               	btfss	18,0	;volatile
  4670  0175  2986               	goto	i1l5459
  4671                           
  4672                           ;usb_device.c: 683: {
  4673                           ;usb_device.c: 684: USBDeviceInit();
  4674  0176  3185  257C  3181   	fcall	i1_USBDeviceInit
  4675                           
  4676                           ;usb_device.c: 688: {PIE2bits.USBIE = 1;};
  4677  0179  0021               	movlb	1	; select bank1
  4678  017A  1512               	bsf	18,2	;volatile
  4679                           
  4680                           ;usb_device.c: 690: USBDeviceState = DEFAULT_STATE;
  4681  017B  3004               	movlw	4
  4682  017C  00E4               	movwf	??_USBDeviceTasks^(0+128)
  4683  017D  0864               	movf	??_USBDeviceTasks^(0+128),w
  4684  017E  0023               	movlb	3	; select bank3
  4685  017F  00C9               	movwf	_USBDeviceState^(0+384)	;volatile
  4686                           
  4687                           ;usb_device.c: 700: (UIR &= 0xFE);
  4688  0180  30FE               	movlw	254
  4689  0181  0021               	movlb	1	; select bank1
  4690  0182  00E4               	movwf	??_USBDeviceTasks^(0+128)
  4691  0183  0864               	movf	??_USBDeviceTasks^(0+128),w
  4692  0184  003D               	movlb	29	; select bank29
  4693  0185  0590               	andwf	16,f	;volatile
  4694  0186                     i1l5459:	
  4695                           
  4696                           ;usb_device.c: 701: }
  4697                           ;usb_device.c: 706: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4698  0186  1A10               	btfsc	16,4	;volatile
  4699  0187  1E12               	btfss	18,4	;volatile
  4700  0188  298C               	goto	i1l5465
  4701                           
  4702                           ;usb_device.c: 707: {
  4703                           ;usb_device.c: 713: USBSuspend();
  4704  0189  318A  2200  3181   	fcall	_USBSuspend
  4705  018C                     i1l5465:	
  4706                           
  4707                           ;usb_device.c: 715: }
  4708                           ;usb_device.c: 727: if(UIRbits.SOFIF)
  4709  018C  003D               	movlb	29	; select bank29
  4710  018D  1F10               	btfss	16,6	;volatile
  4711  018E  29B6               	goto	i1l5481
  4712                           
  4713                           ;usb_device.c: 728: {
  4714                           ;usb_device.c: 730: if(UIEbits.SOFIE)
  4715  018F  1F12               	btfss	18,6	;volatile
  4716  0190  29A1               	goto	i1l5471
  4717                           
  4718                           ;usb_device.c: 731: {
  4719                           ;usb_device.c: 732: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  4720  0191  3073               	movlw	115
  4721  0192  0020               	movlb	0	; select bank0
  4722  0193  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4723  0194  3000               	movlw	0
  4724  0195  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4725  0196  3000               	movlw	0
  4726  0197  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4727  0198  3000               	movlw	0
  4728  0199  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4729  019A  3001               	movlw	1
  4730  019B  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4731  019C  3000               	movlw	0
  4732  019D  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4733  019E  318A  22EE  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4734  01A1                     i1l5471:	
  4735                           
  4736                           ;usb_device.c: 733: }
  4737                           ;usb_device.c: 734: (UIR &= 0xBF);
  4738  01A1  30BF               	movlw	191
  4739  01A2  0021               	movlb	1	; select bank1
  4740  01A3  00E4               	movwf	??_USBDeviceTasks^(0+128)
  4741  01A4  0864               	movf	??_USBDeviceTasks^(0+128),w
  4742  01A5  003D               	movlb	29	; select bank29
  4743  01A6  0590               	andwf	16,f	;volatile
  4744                           
  4745                           ;usb_device.c: 737: USBIncrement1msInternalTimers();
  4746  01A7  3189  214B  3181   	fcall	_USBIncrement1msInternalTimers
  4747                           
  4748                           ;usb_device.c: 754: if(USBStatusStageTimeoutCounter != 0u)
  4749  01AA  0023               	movlb	3	; select bank3
  4750  01AB  084C               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  4751  01AC  1903               	btfsc	3,2
  4752  01AD  29B0               	goto	i1l414
  4753                           
  4754                           ;usb_device.c: 755: {
  4755                           ;usb_device.c: 756: USBStatusStageTimeoutCounter--;
  4756  01AE  3001               	movlw	1
  4757  01AF  02CC               	subwf	_USBStatusStageTimeoutCounter^(0+384),f	;volatile
  4758  01B0                     i1l414:	
  4759                           
  4760                           ;usb_device.c: 757: }
  4761                           ;usb_device.c: 763: if(USBStatusStageTimeoutCounter == 0)
  4762  01B0  084C               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  4763  01B1  1D03               	btfss	3,2
  4764  01B2  29B6               	goto	i1l5481
  4765                           
  4766                           ;usb_device.c: 764: {
  4767                           ;usb_device.c: 765: USBCtrlEPAllowStatusStage();
  4768  01B3  318E  26BD  3181   	fcall	_USBCtrlEPAllowStatusStage
  4769  01B6                     i1l5481:	
  4770                           
  4771                           ;usb_device.c: 766: }
  4772                           ;usb_device.c: 768: }
  4773                           ;usb_device.c: 770: if(UIRbits.STALLIF && UIEbits.STALLIE)
  4774  01B6  003D               	movlb	29	; select bank29
  4775  01B7  1A90               	btfsc	16,5	;volatile
  4776  01B8  1E92               	btfss	18,5	;volatile
  4777  01B9  29BD               	goto	i1l5487
  4778                           
  4779                           ;usb_device.c: 771: {
  4780                           ;usb_device.c: 772: USBStallHandler();
  4781  01BA  318A  225F  3181   	fcall	_USBStallHandler
  4782  01BD                     i1l5487:	
  4783                           
  4784                           ;usb_device.c: 773: }
  4785                           ;usb_device.c: 775: if(UIRbits.UERRIF && UIEbits.UERRIE)
  4786  01BD  003D               	movlb	29	; select bank29
  4787  01BE  1890               	btfsc	16,1	;volatile
  4788  01BF  1C92               	btfss	18,1	;volatile
  4789  01C0  29D3               	goto	i1l5495
  4790                           
  4791                           ;usb_device.c: 776: {
  4792                           ;usb_device.c: 777: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  4793  01C1  30FF               	movlw	255
  4794  01C2  0020               	movlb	0	; select bank0
  4795  01C3  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4796  01C4  307F               	movlw	127
  4797  01C5  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4798  01C6  3000               	movlw	0
  4799  01C7  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4800  01C8  3000               	movlw	0
  4801  01C9  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4802  01CA  3001               	movlw	1
  4803  01CB  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4804  01CC  3000               	movlw	0
  4805  01CD  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4806  01CE  318A  22EE  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4807                           
  4808                           ;usb_device.c: 778: {UEIR = 0;};
  4809  01D1  003D               	movlb	29	; select bank29
  4810  01D2  0193               	clrf	19	;volatile
  4811  01D3                     i1l5495:	
  4812                           
  4813                           ;usb_device.c: 786: }
  4814                           ;usb_device.c: 793: if(USBDeviceState < DEFAULT_STATE)
  4815  01D3  3004               	movlw	4
  4816  01D4  0023               	movlb	3	; select bank3
  4817  01D5  0249               	subwf	_USBDeviceState^(0+384),w	;volatile
  4818  01D6  1803               	skipnc
  4819  01D7  29DB               	goto	i1l418
  4820                           
  4821                           ;usb_device.c: 794: {
  4822                           ;usb_device.c: 795: PIR2bits.USBIF = 0;;
  4823  01D8  0020               	movlb	0	; select bank0
  4824  01D9  1112               	bcf	18,2	;volatile
  4825                           
  4826                           ;usb_device.c: 796: return;
  4827  01DA  0008               	return
  4828  01DB                     i1l418:	
  4829                           
  4830                           ;usb_device.c: 797: }
  4831                           ;usb_device.c: 802: if(UIEbits.TRNIE)
  4832  01DB  003D               	movlb	29	; select bank29
  4833  01DC  1D92               	btfss	18,3	;volatile
  4834  01DD  2A31               	goto	i1l419
  4835                           
  4836                           ;usb_device.c: 803: {
  4837                           ;usb_device.c: 804: for(i = 0; i < 4u; i++)
  4838  01DE  0021               	movlb	1	; select bank1
  4839  01DF  01E6               	clrf	USBDeviceTasks@i^(0+128)
  4840  01E0  2A2A               	goto	L7
  4841  01E1                     i1l5505:	
  4842                           
  4843                           ;usb_device.c: 807: {
  4844                           ;usb_device.c: 809: USTATcopy.Val = USTAT;
  4845  01E1  080F               	movf	15,w	;volatile
  4846  01E2  0021               	movlb	1	; select bank1
  4847  01E3  00E4               	movwf	??_USBDeviceTasks^(0+128)
  4848  01E4  0864               	movf	??_USBDeviceTasks^(0+128),w
  4849  01E5  0023               	movlb	3	; select bank3
  4850  01E6  00EA               	movwf	_USTATcopy^(0+384)	;volatile
  4851                           
  4852                           ;usb_device.c: 810: endpoint_number = USTATcopy.endpoint_number;
  4853  01E7  0C6A               	rrf	_USTATcopy^(0+384),w	;volatile
  4854  01E8  0021               	movlb	1	; select bank1
  4855  01E9  00E4               	movwf	??_USBDeviceTasks^(0+128)
  4856  01EA  0CE4               	rrf	??_USBDeviceTasks^(0+128),f
  4857  01EB  0C64               	rrf	??_USBDeviceTasks^(0+128),w
  4858  01EC  390F               	andlw	15
  4859  01ED  00E5               	movwf	(??_USBDeviceTasks+1)^(0+128)
  4860  01EE  0865               	movf	(??_USBDeviceTasks+1)^(0+128),w
  4861  01EF  0023               	movlb	3	; select bank3
  4862  01F0  00D5               	movwf	_endpoint_number^(0+384)	;volatile
  4863                           
  4864                           ;usb_device.c: 812: (UIR &= 0xF7);
  4865  01F1  30F7               	movlw	247
  4866  01F2  0021               	movlb	1	; select bank1
  4867  01F3  00E4               	movwf	??_USBDeviceTasks^(0+128)
  4868  01F4  0864               	movf	??_USBDeviceTasks^(0+128),w
  4869  01F5  003D               	movlb	29	; select bank29
  4870  01F6  0590               	andwf	16,f	;volatile
  4871                           
  4872                           ;usb_device.c: 817: if(USTATcopy.direction == 0)
  4873  01F7  0023               	movlb	3	; select bank3
  4874  01F8  196A               	btfsc	_USTATcopy^(0+384),2	;volatile
  4875  01F9  29FD               	goto	i1l5515
  4876                           
  4877                           ;usb_device.c: 818: {
  4878                           ;usb_device.c: 819: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  4879  01FA  0855               	movf	_endpoint_number^(0+384),w	;volatile
  4880  01FB  3EB2               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  4881  01FC  2A00               	goto	L6
  4882  01FD                     i1l5515:	
  4883                           ;usb_device.c: 820: }
  4884                           
  4885                           
  4886                           ;usb_device.c: 821: else
  4887                           ;usb_device.c: 822: {
  4888                           ;usb_device.c: 823: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  4889  01FD  0023               	movlb	3	; select bank3
  4890  01FE  0855               	movf	_endpoint_number^(0+384),w	;volatile
  4891  01FF  3EAF               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  4892  0200                     L6:	
  4893  0200  0086               	movwf	6
  4894  0201  3001               	movlw	1	; select bank3/4
  4895  0202  0087               	movwf	7
  4896  0203  0801               	movf	1,w
  4897  0204  3901               	andlw	1
  4898  0205  0021               	movlb	1	; select bank1
  4899  0206  00E4               	movwf	??_USBDeviceTasks^(0+128)
  4900  0207  3001               	movlw	1
  4901  0208  06E4               	xorwf	??_USBDeviceTasks^(0+128),f
  4902  0209  0801               	movf	1,w
  4903  020A  0664               	xorwf	??_USBDeviceTasks^(0+128),w
  4904  020B  39FE               	andlw	-2
  4905  020C  0664               	xorwf	??_USBDeviceTasks^(0+128),w
  4906  020D  0081               	movwf	1
  4907                           
  4908                           ;usb_device.c: 824: }
  4909                           ;usb_device.c: 829: if(endpoint_number == 0)
  4910  020E  0023               	movlb	3	; select bank3
  4911  020F  0855               	movf	_endpoint_number^(0+384),w	;volatile
  4912  0210  1D03               	btfss	3,2
  4913  0211  2A16               	goto	i1l5521
  4914                           
  4915                           ;usb_device.c: 830: {
  4916                           ;usb_device.c: 831: USBCtrlEPService();
  4917  0212  3183  2387  3181   	fcall	_USBCtrlEPService
  4918                           
  4919                           ;usb_device.c: 832: }
  4920  0215  2A25               	goto	i1l5523
  4921  0216                     i1l5521:	
  4922                           
  4923                           ;usb_device.c: 833: else
  4924                           ;usb_device.c: 834: {
  4925                           ;usb_device.c: 835: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  4926  0216  3072               	movlw	114
  4927  0217  0020               	movlb	0	; select bank0
  4928  0218  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4929  0219  3000               	movlw	0
  4930  021A  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4931  021B  30EA               	movlw	low _USTATcopy
  4932  021C  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4933  021D  3001               	movlw	high _USTATcopy
  4934  021E  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4935  021F  3000               	movlw	0
  4936  0220  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4937  0221  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4938  0222  318A  22EE  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4939  0225                     i1l5523:	
  4940                           ;usb_device.c: 838: else
  4941                           ;usb_device.c: 839: {
  4942                           ;usb_device.c: 840: break;
  4943                           
  4944                           ;usb_device.c: 836: }
  4945                           ;usb_device.c: 837: }
  4946                           
  4947  0225  3001               	movlw	1
  4948  0226  0021               	movlb	1	; select bank1
  4949  0227  00E4               	movwf	??_USBDeviceTasks^(0+128)
  4950  0228  0864               	movf	??_USBDeviceTasks^(0+128),w
  4951  0229  07E6               	addwf	USBDeviceTasks@i^(0+128),f
  4952  022A                     L7:	
  4953  022A  3004               	movlw	4
  4954  022B  0266               	subwf	USBDeviceTasks@i^(0+128),w
  4955  022C  1803               	btfsc	3,0
  4956  022D  2A31               	goto	i1l419
  4957                           
  4958                           ;usb_device.c: 805: {
  4959                           ;usb_device.c: 806: if(UIRbits.TRNIF)
  4960  022E  003D               	movlb	29	; select bank29
  4961  022F  1990               	btfsc	16,3	;volatile
  4962  0230  29E1               	goto	i1l5505
  4963  0231                     i1l419:	
  4964                           
  4965                           ;usb_device.c: 841: }
  4966                           ;usb_device.c: 842: }
  4967                           ;usb_device.c: 843: }
  4968                           ;usb_device.c: 845: PIR2bits.USBIF = 0;;
  4969  0231  0020               	movlb	0	; select bank0
  4970  0232  1112               	bcf	18,2	;volatile
  4971  0233  0008               	return
  4972  0234                     __end_of_USBDeviceTasks:	
  4973                           
  4974                           	psect	text15
  4975  057C                     __ptext15:	
  4976 ;; *************** function i1_USBDeviceInit *****************
  4977 ;; Defined at:
  4978 ;;		line 300 in file "../../../../../../framework/usb/src/usb_device.c"
  4979 ;; Parameters:    Size  Location     Type
  4980 ;;		None
  4981 ;; Auto vars:     Size  Location     Type
  4982 ;;  USBDeviceIni    2    1[COMMON] PTR unsigned char 
  4983 ;;		 -> UEP1(1), 
  4984 ;;  USBDeviceIni    1    4[COMMON] unsigned char 
  4985 ;;  USBDeviceIni    1    3[COMMON] unsigned char 
  4986 ;; Return value:  Size  Location     Type
  4987 ;;		None               void
  4988 ;; Registers used:
  4989 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4990 ;; Tracked objects:
  4991 ;;		On entry : 0/0
  4992 ;;		On exit  : 0/0
  4993 ;;		Unchanged: 0/0
  4994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4996 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4997 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4998 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4999 ;;Total ram usage:        5 bytes
  5000 ;; Hardware stack levels used:    1
  5001 ;; This function calls:
  5002 ;;		Nothing
  5003 ;; This function is called by:
  5004 ;;		_USBDeviceTasks
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           
  5009                           ;psect for function i1_USBDeviceInit
  5010  057C                     i1_USBDeviceInit:	
  5011                           
  5012                           ;usb_device.c: 302: uint8_t i;
  5013                           ;usb_device.c: 304: {PIE2bits.USBIE = 0;};
  5014                           
  5015                           ;incstack = 0
  5016                           ; Regs used in i1_USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  5017  057C  0021               	movlb	1	; select bank1
  5018  057D  1112               	bcf	18,2	;volatile
  5019                           
  5020                           ;usb_device.c: 307: {UEIR = 0;};
  5021  057E  003D               	movlb	29	; select bank29
  5022  057F  0193               	clrf	19	;volatile
  5023                           
  5024                           ;usb_device.c: 310: {UIR = 0;};
  5025  0580  0190               	clrf	16	;volatile
  5026                           
  5027                           ;usb_device.c: 313: UEP0 = 0;
  5028  0581  0198               	clrf	24	;volatile
  5029                           
  5030                           ;usb_device.c: 315: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  5031  0582  300E               	movlw	14
  5032  0583  00F2               	movwf	i1USBDeviceInit@p+1
  5033  0584  3099               	movlw	153
  5034  0585  00F1               	movwf	i1USBDeviceInit@p
  5035  0586  01F3               	clrf	i1USBDeviceInit@i_1199
  5036  0587  3002               	movlw	2
  5037  0588  0273               	subwf	i1USBDeviceInit@i_1199,w
  5038  0589  1803               	btfsc	3,0
  5039  058A  2D9C               	goto	i1l3889
  5040  058B                     i1l3881:	
  5041  058B  0871               	movf	i1USBDeviceInit@p,w
  5042  058C  0086               	movwf	6
  5043  058D  0872               	movf	i1USBDeviceInit@p+1,w
  5044  058E  0087               	movwf	7
  5045  058F  0181               	clrf	1
  5046  0590  3001               	movlw	1
  5047  0591  07F1               	addwf	i1USBDeviceInit@p,f
  5048  0592  3000               	movlw	0
  5049  0593  3DF2               	addwfc	i1USBDeviceInit@p+1,f
  5050  0594  3001               	movlw	1
  5051  0595  00F0               	movwf	??i1_USBDeviceInit
  5052  0596  0870               	movf	??i1_USBDeviceInit,w
  5053  0597  07F3               	addwf	i1USBDeviceInit@i_1199,f
  5054  0598  3002               	movlw	2
  5055  0599  0273               	subwf	i1USBDeviceInit@i_1199,w
  5056  059A  1C03               	skipc
  5057  059B  2D8B               	goto	i1l3881
  5058  059C                     i1l3889:	
  5059                           
  5060                           ;usb_device.c: 317: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  5061  059C  3016               	movlw	22
  5062  059D  003D               	movlb	29	; select bank29
  5063  059E  0091               	movwf	17	;volatile
  5064  059F  309F               	movlw	159
  5065  05A0  0097               	movwf	23	;volatile
  5066  05A1  307B               	movlw	123
  5067  05A2  0092               	movwf	18	;volatile
  5068                           
  5069                           ;usb_device.c: 320: ;
  5070                           ;usb_device.c: 323: ;
  5071                           ;usb_device.c: 326: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  5072  05A3  01F4               	clrf	i1USBDeviceInit@i
  5073  05A4  300C               	movlw	12
  5074  05A5  0274               	subwf	i1USBDeviceInit@i,w
  5075  05A6  1803               	btfsc	3,0
  5076  05A7  2DC1               	goto	i1l397
  5077  05A8                     i1l3897:	
  5078                           
  5079                           ;usb_device.c: 327: {
  5080                           ;usb_device.c: 328: BDT[i].Val = 0x00;
  5081  05A8  0874               	movf	i1USBDeviceInit@i,w
  5082  05A9  00F0               	movwf	??i1_USBDeviceInit
  5083  05AA  3001               	movlw	1
  5084  05AB                     u316_25:	
  5085  05AB  35F0               	lslf	??i1_USBDeviceInit,f
  5086  05AC  3EFF               	addlw	-1
  5087  05AD  1D03               	skipz
  5088  05AE  2DAB               	goto	u316_25
  5089  05AF  3570               	lslf	??i1_USBDeviceInit,w
  5090  05B0  3E20               	addlw	32
  5091  05B1  0086               	movwf	6
  5092  05B2  0187               	clrf	7
  5093  05B3  3000               	movlw	0
  5094  05B4  3FC0               	movwi [0]fsr1
  5095  05B5  3000               	movlw	0
  5096  05B6  3FC1               	movwi [1]fsr1
  5097  05B7  3FC2               	movwi [2]fsr1
  5098  05B8  3FC3               	movwi [3]fsr1
  5099  05B9  3001               	movlw	1
  5100  05BA  00F0               	movwf	??i1_USBDeviceInit
  5101  05BB  0870               	movf	??i1_USBDeviceInit,w
  5102  05BC  07F4               	addwf	i1USBDeviceInit@i,f
  5103  05BD  300C               	movlw	12
  5104  05BE  0274               	subwf	i1USBDeviceInit@i,w
  5105  05BF  1C03               	skipc
  5106  05C0  2DA8               	goto	i1l3897
  5107  05C1                     i1l397:	
  5108                           
  5109                           ;usb_device.c: 329: }
  5110                           ;usb_device.c: 332: UCONbits.PPBRST = 1;
  5111  05C1  003D               	movlb	29	; select bank29
  5112  05C2  170E               	bsf	14,6	;volatile
  5113                           
  5114                           ;usb_device.c: 335: UADDR = 0x00;
  5115  05C3  0196               	clrf	22	;volatile
  5116                           
  5117                           ;usb_device.c: 338: UCONbits.PKTDIS = 0;
  5118  05C4  120E               	bcf	14,4	;volatile
  5119                           
  5120                           ;usb_device.c: 341: UCONbits.PPBRST = 0;
  5121  05C5  130E               	bcf	14,6	;volatile
  5122  05C6                     i1l3909:	
  5123                           ;usb_device.c: 344: do
  5124                           
  5125                           
  5126                           ;usb_device.c: 345: {
  5127                           ;usb_device.c: 346: (UIR &= 0xF7);
  5128  05C6  30F7               	movlw	247
  5129  05C7  00F0               	movwf	??i1_USBDeviceInit
  5130  05C8  0870               	movf	??i1_USBDeviceInit,w
  5131  05C9  0590               	andwf	16,f	;volatile
  5132                           
  5133                           ;usb_device.c: 348: inPipes[0].info.Val = 0;
  5134  05CA  0021               	movlb	1	; select bank1
  5135  05CB  01EC               	clrf	(_inPipes^(0+128)+2)	;volatile
  5136                           
  5137                           ;usb_device.c: 349: outPipes[0].info.Val = 0;
  5138  05CC  0023               	movlb	3	; select bank3
  5139  05CD  01A2               	clrf	(_outPipes^(0+384)+2)	;volatile
  5140                           
  5141                           ;usb_device.c: 350: outPipes[0].wCount.Val = 0;
  5142  05CE  01A3               	clrf	(_outPipes^(0+384)+3)	;volatile
  5143  05CF  01A4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  5144                           
  5145                           ;usb_device.c: 351: }while(UIRbits.TRNIF == 1);
  5146  05D0  003D               	movlb	29	; select bank29
  5147  05D1  1990               	btfsc	16,3	;volatile
  5148  05D2  2DC6               	goto	i1l3909
  5149                           
  5150                           ;usb_device.c: 355: USBStatusStageEnabledFlag1 = 1;
  5151  05D3  3001               	movlw	1
  5152  05D4  00F0               	movwf	??i1_USBDeviceInit
  5153  05D5  0870               	movf	??i1_USBDeviceInit,w
  5154  05D6  0023               	movlb	3	; select bank3
  5155  05D7  00CA               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5156                           
  5157                           ;usb_device.c: 356: USBStatusStageEnabledFlag2 = 1;
  5158  05D8  3001               	movlw	1
  5159  05D9  00F0               	movwf	??i1_USBDeviceInit
  5160  05DA  0870               	movf	??i1_USBDeviceInit,w
  5161  05DB  00CB               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5162                           
  5163                           ;usb_device.c: 358: USBDeferINDataStagePackets = 0;
  5164  05DC  01C6               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  5165                           
  5166                           ;usb_device.c: 359: USBDeferOUTDataStagePackets = 0;
  5167  05DD  01C7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  5168                           
  5169                           ;usb_device.c: 360: USBBusIsSuspended = 0;
  5170  05DE  01C5               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  5171                           
  5172                           ;usb_device.c: 364: for(i = 0; i < (uint8_t)(2+1u); i++)
  5173  05DF  01F4               	clrf	i1USBDeviceInit@i
  5174  05E0  3003               	movlw	3
  5175  05E1  0274               	subwf	i1USBDeviceInit@i,w
  5176  05E2  1803               	btfsc	3,0
  5177  05E3  2E04               	goto	i1l3937
  5178  05E4                     i1l3931:	
  5179                           
  5180                           ;usb_device.c: 365: {
  5181                           ;usb_device.c: 366: pBDTEntryIn[i] = 0u;
  5182  05E4  0874               	movf	i1USBDeviceInit@i,w
  5183  05E5  3EB5               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  5184  05E6  0086               	movwf	6
  5185  05E7  3001               	movlw	1	; select bank3/4
  5186  05E8  0087               	movwf	7
  5187  05E9  0181               	clrf	1
  5188                           
  5189                           ;usb_device.c: 367: pBDTEntryOut[i] = 0u;
  5190  05EA  0874               	movf	i1USBDeviceInit@i,w
  5191  05EB  3EB8               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  5192  05EC  0086               	movwf	6
  5193  05ED  3001               	movlw	1	; select bank3/4
  5194  05EE  0087               	movwf	7
  5195  05EF  0181               	clrf	1
  5196                           
  5197                           ;usb_device.c: 368: ep_data_in[i].Val = 0u;
  5198  05F0  0874               	movf	i1USBDeviceInit@i,w
  5199  05F1  3EAF               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5200  05F2  0086               	movwf	6
  5201  05F3  3001               	movlw	1	; select bank3/4
  5202  05F4  0087               	movwf	7
  5203  05F5  0181               	clrf	1
  5204                           
  5205                           ;usb_device.c: 369: ep_data_out[i].Val = 0u;
  5206  05F6  0874               	movf	i1USBDeviceInit@i,w
  5207  05F7  3EB2               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5208  05F8  0086               	movwf	6
  5209  05F9  3001               	movlw	1	; select bank3/4
  5210  05FA  0087               	movwf	7
  5211  05FB  0181               	clrf	1
  5212  05FC  3001               	movlw	1
  5213  05FD  00F0               	movwf	??i1_USBDeviceInit
  5214  05FE  0870               	movf	??i1_USBDeviceInit,w
  5215  05FF  07F4               	addwf	i1USBDeviceInit@i,f
  5216  0600  3003               	movlw	3
  5217  0601  0274               	subwf	i1USBDeviceInit@i,w
  5218  0602  1C03               	skipc
  5219  0603  2DE4               	goto	i1l3931
  5220  0604                     i1l3937:	
  5221                           
  5222                           ;usb_device.c: 370: }
  5223                           ;usb_device.c: 373: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  5224  0604  3028               	movlw	40
  5225  0605  00F0               	movwf	??i1_USBDeviceInit
  5226  0606  0870               	movf	??i1_USBDeviceInit,w
  5227  0607  0023               	movlb	3	; select bank3
  5228  0608  00B5               	movwf	_pBDTEntryIn^(0+384)
  5229                           
  5230                           ;usb_device.c: 375: UEP0 = 0x06|0x10;
  5231  0609  3016               	movlw	22
  5232  060A  003D               	movlb	29	; select bank29
  5233  060B  0098               	movwf	24	;volatile
  5234                           
  5235                           ;usb_device.c: 377: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5236  060C  3000               	movlw	0
  5237  060D  0020               	movlb	0	; select bank0
  5238  060E  00A3               	movwf	35	;volatile
  5239  060F  3050               	movlw	80
  5240  0610  00A2               	movwf	34	;volatile
  5241                           
  5242                           ;usb_device.c: 378: BDT[0].CNT = 8;
  5243  0611  3008               	movlw	8
  5244  0612  00A1               	movwf	33	;volatile
  5245                           
  5246                           ;usb_device.c: 379: BDT[0].STAT.Val = 0x00|0x04;
  5247  0613  3004               	movlw	4
  5248  0614  00F0               	movwf	??i1_USBDeviceInit
  5249  0615  0870               	movf	??i1_USBDeviceInit,w
  5250  0616  00A0               	movwf	32	;volatile
  5251                           
  5252                           ;usb_device.c: 380: BDT[0].STAT.Val |= 0x80;
  5253  0617  17A0               	bsf	32,7	;volatile
  5254                           
  5255                           ;usb_device.c: 383: USBActiveConfiguration = 0;
  5256  0618  0023               	movlb	3	; select bank3
  5257  0619  01E9               	clrf	_USBActiveConfiguration^(0+384)	;volatile
  5258                           
  5259                           ;usb_device.c: 385: USB1msTickCount = 0;
  5260  061A  3000               	movlw	0
  5261  061B  00AE               	movwf	(_USB1msTickCount+3)^(0+384)	;volatile
  5262  061C  3000               	movlw	0
  5263  061D  00AD               	movwf	(_USB1msTickCount+2)^(0+384)	;volatile
  5264  061E  3000               	movlw	0
  5265  061F  00AC               	movwf	(_USB1msTickCount+1)^(0+384)	;volatile
  5266  0620  3000               	movlw	0
  5267  0621  00AB               	movwf	_USB1msTickCount^(0+384)	;volatile
  5268                           
  5269                           ;usb_device.c: 386: USBTicksSinceSuspendEnd = 0;
  5270  0622  01CD               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  5271                           
  5272                           ;usb_device.c: 389: USBDeviceState = DETACHED_STATE;
  5273  0623  01C9               	clrf	_USBDeviceState^(0+384)	;volatile
  5274  0624  0008               	return
  5275  0625                     __end_ofi1_USBDeviceInit:	
  5276                           
  5277                           	psect	text16
  5278  0A3F                     __ptext16:	
  5279 ;; *************** function _USBWakeFromSuspend *****************
  5280 ;; Defined at:
  5281 ;;		line 2322 in file "../../../../../../framework/usb/src/usb_device.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;		None
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;		None
  5286 ;; Return value:  Size  Location     Type
  5287 ;;		None               void
  5288 ;; Registers used:
  5289 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5290 ;; Tracked objects:
  5291 ;;		On entry : 0/0
  5292 ;;		On exit  : 0/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5297 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5298 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5299 ;;Total ram usage:        1 bytes
  5300 ;; Hardware stack levels used:    1
  5301 ;; Hardware stack levels required when called:    5
  5302 ;; This function calls:
  5303 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5304 ;; This function is called by:
  5305 ;;		_USBDeviceTasks
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309                           
  5310                           ;psect for function _USBWakeFromSuspend
  5311  0A3F                     _USBWakeFromSuspend:	
  5312                           
  5313                           ;usb_device.c: 2324: USBBusIsSuspended = 0;
  5314                           
  5315                           ;incstack = 0
  5316                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5317  0A3F  0023               	movlb	3	; select bank3
  5318  0A40  01C5               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  5319                           
  5320                           ;usb_device.c: 2330: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  5321  0A41  3074               	movlw	116
  5322  0A42  0020               	movlb	0	; select bank0
  5323  0A43  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5324  0A44  3000               	movlw	0
  5325  0A45  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5326  0A46  3000               	movlw	0
  5327  0A47  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5328  0A48  3000               	movlw	0
  5329  0A49  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5330  0A4A  3000               	movlw	0
  5331  0A4B  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5332  0A4C  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5333  0A4D  318A  22EE  318A   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5334                           
  5335                           ;usb_device.c: 2337: UCONbits.SUSPND = 0;
  5336  0A50  003D               	movlb	29	; select bank29
  5337  0A51  108E               	bcf	14,1	;volatile
  5338                           
  5339                           ;usb_device.c: 2342: UIEbits.ACTVIE = 0;
  5340  0A52  1112               	bcf	18,2	;volatile
  5341  0A53                     i1l5367:	
  5342                           ;usb_device.c: 2360: while(UIRbits.ACTVIF)
  5343                           
  5344  0A53  1D10               	btfss	16,2	;volatile
  5345  0A54  2A5C               	goto	i1l5369
  5346                           
  5347                           ;usb_device.c: 2362: {
  5348                           ;usb_device.c: 2363: (UIR &= 0xFB);
  5349  0A55  30FB               	movlw	251
  5350  0A56  0020               	movlb	0	; select bank0
  5351  0A57  00E8               	movwf	??_USBWakeFromSuspend
  5352  0A58  0868               	movf	??_USBWakeFromSuspend,w
  5353  0A59  003D               	movlb	29	; select bank29
  5354  0A5A  0590               	andwf	16,f	;volatile
  5355  0A5B  2A53               	goto	i1l5367
  5356  0A5C                     i1l5369:	
  5357                           
  5358                           ;usb_device.c: 2364: }
  5359                           ;usb_device.c: 2366: USBTicksSinceSuspendEnd = 0;
  5360  0A5C  0023               	movlb	3	; select bank3
  5361  0A5D  01CD               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  5362  0A5E  0008               	return
  5363  0A5F                     __end_of_USBWakeFromSuspend:	
  5364                           
  5365                           	psect	text17
  5366  0A00                     __ptext17:	
  5367 ;; *************** function _USBSuspend *****************
  5368 ;; Defined at:
  5369 ;;		line 2264 in file "../../../../../../framework/usb/src/usb_device.c"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;		None
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;		None
  5374 ;; Return value:  Size  Location     Type
  5375 ;;		None               void
  5376 ;; Registers used:
  5377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5385 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5386 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5387 ;;Total ram usage:        1 bytes
  5388 ;; Hardware stack levels used:    1
  5389 ;; Hardware stack levels required when called:    5
  5390 ;; This function calls:
  5391 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5392 ;; This function is called by:
  5393 ;;		_USBDeviceTasks
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397                           
  5398                           ;psect for function _USBSuspend
  5399  0A00                     _USBSuspend:	
  5400                           
  5401                           ;usb_device.c: 2289: UIEbits.ACTVIE = 1;
  5402                           
  5403                           ;incstack = 0
  5404                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5405  0A00  003D               	movlb	29	; select bank29
  5406  0A01  1512               	bsf	18,2	;volatile
  5407                           
  5408                           ;usb_device.c: 2290: (UIR &= 0xEF);
  5409  0A02  30EF               	movlw	239
  5410  0A03  0020               	movlb	0	; select bank0
  5411  0A04  00E8               	movwf	??_USBSuspend
  5412  0A05  0868               	movf	??_USBSuspend,w
  5413  0A06  003D               	movlb	29	; select bank29
  5414  0A07  0590               	andwf	16,f	;volatile
  5415                           
  5416                           ;usb_device.c: 2293: UCONbits.SUSPND = 1;
  5417  0A08  148E               	bsf	14,1	;volatile
  5418                           
  5419                           ;usb_device.c: 2296: USBBusIsSuspended = 1;
  5420  0A09  3001               	movlw	1
  5421  0A0A  0020               	movlb	0	; select bank0
  5422  0A0B  00E8               	movwf	??_USBSuspend
  5423  0A0C  0868               	movf	??_USBSuspend,w
  5424  0A0D  0023               	movlb	3	; select bank3
  5425  0A0E  00C5               	movwf	_USBBusIsSuspended^(0+384)	;volatile
  5426                           
  5427                           ;usb_device.c: 2297: USBTicksSinceSuspendEnd = 0;
  5428  0A0F  01CD               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  5429                           
  5430                           ;usb_device.c: 2304: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  5431  0A10  3075               	movlw	117
  5432  0A11  0020               	movlb	0	; select bank0
  5433  0A12  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5434  0A13  3000               	movlw	0
  5435  0A14  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5436  0A15  3000               	movlw	0
  5437  0A16  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5438  0A17  3000               	movlw	0
  5439  0A18  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5440  0A19  3000               	movlw	0
  5441  0A1A  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5442  0A1B  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5443  0A1C  318A  22EE         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5444  0A1E  0008               	return
  5445  0A1F                     __end_of_USBSuspend:	
  5446                           
  5447                           	psect	text18
  5448  0A5F                     __ptext18:	
  5449 ;; *************** function _USBStallHandler *****************
  5450 ;; Defined at:
  5451 ;;		line 2221 in file "../../../../../../framework/usb/src/usb_device.c"
  5452 ;; Parameters:    Size  Location     Type
  5453 ;;		None
  5454 ;; Auto vars:     Size  Location     Type
  5455 ;;		None
  5456 ;; Return value:  Size  Location     Type
  5457 ;;		None               void
  5458 ;; Registers used:
  5459 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5460 ;; Tracked objects:
  5461 ;;		On entry : 0/0
  5462 ;;		On exit  : 0/0
  5463 ;;		Unchanged: 0/0
  5464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5467 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5468 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5469 ;;Total ram usage:        1 bytes
  5470 ;; Hardware stack levels used:    1
  5471 ;; This function calls:
  5472 ;;		Nothing
  5473 ;; This function is called by:
  5474 ;;		_USBDeviceTasks
  5475 ;; This function uses a non-reentrant model
  5476 ;;
  5477                           
  5478                           
  5479                           ;psect for function _USBStallHandler
  5480  0A5F                     _USBStallHandler:	
  5481                           
  5482                           ;usb_device.c: 2233: if(UEP0bits.EPSTALL == 1)
  5483                           
  5484                           ;incstack = 0
  5485                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  5486  0A5F  003D               	movlb	29	; select bank29
  5487  0A60  1C18               	btfss	24,0	;volatile
  5488  0A61  2A80               	goto	i1l3835
  5489                           
  5490                           ;usb_device.c: 2234: {
  5491                           ;usb_device.c: 2236: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  5492  0A62  0021               	movlb	1	; select bank1
  5493  0A63  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5494  0A64  0086               	movwf	6
  5495  0A65  0187               	clrf	7
  5496  0A66  3080               	movlw	128
  5497  0A67  0601               	xorwf	1,w
  5498  0A68  1D03               	btfss	3,2
  5499  0A69  2A7E               	goto	i1l3833
  5500  0A6A  0023               	movlb	3	; select bank3
  5501  0A6B  0835               	movf	_pBDTEntryIn^(0+384),w
  5502  0A6C  0086               	movwf	6
  5503  0A6D  0187               	clrf	7
  5504  0A6E  3084               	movlw	132
  5505  0A6F  0601               	xorwf	1,w
  5506  0A70  1D03               	btfss	3,2
  5507  0A71  2A7E               	goto	i1l3833
  5508                           
  5509                           ;usb_device.c: 2237: {
  5510                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5511  0A72  300C               	movlw	12
  5512  0A73  00F0               	movwf	??_USBStallHandler
  5513  0A74  0021               	movlb	1	; select bank1
  5514  0A75  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5515  0A76  0086               	movwf	6
  5516  0A77  0187               	clrf	7
  5517  0A78  0870               	movf	??_USBStallHandler,w
  5518  0A79  0081               	movwf	1
  5519                           
  5520                           ;usb_device.c: 2240: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  5521  0A7A  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5522  0A7B  0086               	movwf	6
  5523  0A7C  0187               	clrf	7
  5524  0A7D  1781               	bsf	1,7
  5525  0A7E                     i1l3833:	
  5526                           
  5527                           ;usb_device.c: 2241: }
  5528                           ;usb_device.c: 2242: UEP0bits.EPSTALL = 0;
  5529  0A7E  003D               	movlb	29	; select bank29
  5530  0A7F  1018               	bcf	24,0	;volatile
  5531  0A80                     i1l3835:	
  5532                           
  5533                           ;usb_device.c: 2243: }
  5534                           ;usb_device.c: 2245: (UIR &= 0xDF);
  5535  0A80  30DF               	movlw	223
  5536  0A81  00F0               	movwf	??_USBStallHandler
  5537  0A82  0870               	movf	??_USBStallHandler,w
  5538  0A83  0590               	andwf	16,f	;volatile
  5539  0A84  0008               	return
  5540  0A85                     __end_of_USBStallHandler:	
  5541                           
  5542                           	psect	text19
  5543  094B                     __ptext19:	
  5544 ;; *************** function _USBIncrement1msInternalTimers *****************
  5545 ;; Defined at:
  5546 ;;		line 3050 in file "../../../../../../framework/usb/src/usb_device.c"
  5547 ;; Parameters:    Size  Location     Type
  5548 ;;		None
  5549 ;; Auto vars:     Size  Location     Type
  5550 ;;		None
  5551 ;; Return value:  Size  Location     Type
  5552 ;;		None               void
  5553 ;; Registers used:
  5554 ;;		wreg, status,2, status,0
  5555 ;; Tracked objects:
  5556 ;;		On entry : 0/0
  5557 ;;		On exit  : 0/0
  5558 ;;		Unchanged: 0/0
  5559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5562 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5563 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5564 ;;Total ram usage:        1 bytes
  5565 ;; Hardware stack levels used:    1
  5566 ;; This function calls:
  5567 ;;		Nothing
  5568 ;; This function is called by:
  5569 ;;		_USBDeviceTasks
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           
  5574                           ;psect for function _USBIncrement1msInternalTimers
  5575  094B                     _USBIncrement1msInternalTimers:	
  5576                           
  5577                           ;usb_device.c: 3058: USB1msTickCount++;
  5578                           
  5579                           ;incstack = 0
  5580                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  5581  094B  3001               	movlw	1
  5582  094C  0023               	movlb	3	; select bank3
  5583  094D  07AB               	addwf	_USB1msTickCount^(0+384),f	;volatile
  5584  094E  3000               	movlw	0
  5585  094F  3DAC               	addwfc	(_USB1msTickCount+1)^(0+384),f	;volatile
  5586  0950  3000               	movlw	0
  5587  0951  3DAD               	addwfc	(_USB1msTickCount+2)^(0+384),f	;volatile
  5588  0952  3000               	movlw	0
  5589  0953  3DAE               	addwfc	(_USB1msTickCount+3)^(0+384),f	;volatile
  5590                           
  5591                           ;usb_device.c: 3059: if(USBBusIsSuspended == 0)
  5592  0954  0845               	movf	_USBBusIsSuspended^(0+384),w	;volatile
  5593  0955  1D03               	btfss	3,2
  5594  0956  0008               	return
  5595                           
  5596                           ;usb_device.c: 3060: {
  5597                           ;usb_device.c: 3061: USBTicksSinceSuspendEnd++;
  5598  0957  3001               	movlw	1
  5599  0958  00F0               	movwf	??_USBIncrement1msInternalTimers
  5600  0959  0870               	movf	??_USBIncrement1msInternalTimers,w
  5601  095A  07CD               	addwf	_USBTicksSinceSuspendEnd^(0+384),f	;volatile
  5602                           
  5603                           ;usb_device.c: 3063: if(USBTicksSinceSuspendEnd == 0)
  5604  095B  084D               	movf	_USBTicksSinceSuspendEnd^(0+384),w	;volatile
  5605  095C  1D03               	btfss	3,2
  5606  095D  0008               	return
  5607                           
  5608                           ;usb_device.c: 3064: {
  5609                           ;usb_device.c: 3065: USBTicksSinceSuspendEnd = 255;
  5610  095E  30FF               	movlw	255
  5611  095F  00F0               	movwf	??_USBIncrement1msInternalTimers
  5612  0960  0870               	movf	??_USBIncrement1msInternalTimers,w
  5613  0961  00CD               	movwf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  5614  0962  0008               	return
  5615  0963                     __end_of_USBIncrement1msInternalTimers:	
  5616                           
  5617                           	psect	text20
  5618  0387                     __ptext20:	
  5619 ;; *************** function _USBCtrlEPService *****************
  5620 ;; Defined at:
  5621 ;;		line 2391 in file "../../../../../../framework/usb/src/usb_device.c"
  5622 ;; Parameters:    Size  Location     Type
  5623 ;;		None
  5624 ;; Auto vars:     Size  Location     Type
  5625 ;;  setup_cnt       1    3[BANK1 ] unsigned char 
  5626 ;; Return value:  Size  Location     Type
  5627 ;;		None               void
  5628 ;; Registers used:
  5629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5630 ;; Tracked objects:
  5631 ;;		On entry : 0/0
  5632 ;;		On exit  : 0/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5636 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5637 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5638 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5639 ;;Total ram usage:        4 bytes
  5640 ;; Hardware stack levels used:    1
  5641 ;; Hardware stack levels required when called:    8
  5642 ;; This function calls:
  5643 ;;		_USBCtrlTrfInHandler
  5644 ;;		_USBCtrlTrfOutHandler
  5645 ;;		_USBCtrlTrfSetupHandler
  5646 ;; This function is called by:
  5647 ;;		_USBDeviceTasks
  5648 ;; This function uses a non-reentrant model
  5649 ;;
  5650                           
  5651                           
  5652                           ;psect for function _USBCtrlEPService
  5653  0387                     _USBCtrlEPService:	
  5654                           
  5655                           ;usb_device.c: 2397: USBStatusStageTimeoutCounter = (uint8_t)45;
  5656                           
  5657                           ;incstack = 0
  5658                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5659  0387  302D               	movlw	45
  5660  0388  0021               	movlb	1	; select bank1
  5661  0389  00E0               	movwf	??_USBCtrlEPService^(0+128)
  5662  038A  0860               	movf	??_USBCtrlEPService^(0+128),w
  5663  038B  0023               	movlb	3	; select bank3
  5664  038C  00CC               	movwf	_USBStatusStageTimeoutCounter^(0+384)	;volatile
  5665                           
  5666                           ;usb_device.c: 2401: if((USTATcopy.Val & ~0x02) == 0x00)
  5667  038D  086A               	movf	_USTATcopy^(0+384),w	;volatile
  5668  038E  39FD               	andlw	253
  5669  038F  1D03               	btfss	3,2
  5670  0390  2BEC               	goto	i1l5413
  5671                           
  5672                           ;usb_device.c: 2402: {
  5673                           ;usb_device.c: 2405: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  5674  0391  366A               	lsrf	_USTATcopy^(0+384),w	;volatile
  5675  0392  393F               	andlw	63
  5676  0393  0021               	movlb	1	; select bank1
  5677  0394  00E0               	movwf	??_USBCtrlEPService^(0+128)
  5678  0395  3001               	movlw	1
  5679  0396                     u487_25:	
  5680  0396  35E0               	lslf	??_USBCtrlEPService^(0+128),f
  5681  0397  3EFF               	addlw	-1
  5682  0398  1D03               	skipz
  5683  0399  2B96               	goto	u487_25
  5684  039A  3560               	lslf	??_USBCtrlEPService^(0+128),w
  5685  039B  3E20               	addlw	32
  5686  039C  00E1               	movwf	(??_USBCtrlEPService+1)^(0+128)
  5687  039D  0861               	movf	(??_USBCtrlEPService+1)^(0+128),w
  5688  039E  00E8               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  5689                           
  5690                           ;usb_device.c: 2413: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5691  039F  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5692  03A0  00E0               	movwf	??_USBCtrlEPService^(0+128)
  5693  03A1  0860               	movf	??_USBCtrlEPService^(0+128),w
  5694  03A2  00E9               	movwf	_pBDTEntryEP0OutNext^(0+128)
  5695                           
  5696                           ;usb_device.c: 2415: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  5697  03A3  3004               	movlw	4
  5698  03A4  00E0               	movwf	??_USBCtrlEPService^(0+128)
  5699  03A5  0860               	movf	??_USBCtrlEPService^(0+128),w
  5700  03A6  06E9               	xorwf	_pBDTEntryEP0OutNext^(0+128),f
  5701                           
  5702                           ;usb_device.c: 2418: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  5703  03A7  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5704  03A8  0086               	movwf	6
  5705  03A9  0187               	clrf	7
  5706  03AA  0C01               	rrf	1,w
  5707  03AB  0C89               	rrf	9,f
  5708  03AC  390F               	andlw	15
  5709  03AD  3A0D               	xorlw	13
  5710  03AE  1D03               	skipz
  5711  03AF  2BE9               	goto	i1l5411
  5712                           
  5713                           ;usb_device.c: 2419: {
  5714                           ;usb_device.c: 2420: unsigned char setup_cnt;
  5715                           ;usb_device.c: 2426: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  5716  03B0  01E3               	clrf	USBCtrlEPService@setup_cnt^(0+128)
  5717  03B1  3008               	movlw	8
  5718  03B2  0263               	subwf	USBCtrlEPService@setup_cnt^(0+128),w
  5719  03B3  1803               	btfsc	3,0
  5720  03B4  2BDA               	goto	i1l5407
  5721  03B5                     i1l5401:	
  5722                           
  5723                           ;usb_device.c: 2427: {
  5724                           ;usb_device.c: 2428: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
  5725  03B5  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5726  03B6  3E02               	addlw	2
  5727  03B7  0086               	movwf	6
  5728  03B8  0187               	clrf	7
  5729  03B9  3F40               	moviw [0]fsr1
  5730  03BA  00E0               	movwf	??_USBCtrlEPService^(0+128)
  5731  03BB  3F41               	moviw [1]fsr1
  5732  03BC  00E1               	movwf	(??_USBCtrlEPService^(0+128)+1)
  5733  03BD  0860               	movf	??_USBCtrlEPService^(0+128),w
  5734  03BE  0086               	movwf	6
  5735  03BF  0861               	movf	(??_USBCtrlEPService+1)^(0+128),w
  5736  03C0  0087               	movwf	7
  5737  03C1  0801               	movf	1,w
  5738  03C2  00E2               	movwf	(??_USBCtrlEPService+2)^(0+128)
  5739  03C3  0863               	movf	USBCtrlEPService@setup_cnt^(0+128),w
  5740  03C4  3E50               	addlw	80
  5741  03C5  0086               	movwf	6
  5742  03C6  0187               	clrf	7
  5743  03C7  0862               	movf	(??_USBCtrlEPService+2)^(0+128),w
  5744  03C8  0081               	movwf	1
  5745                           
  5746                           ;usb_device.c: 2429: pBDTEntryEP0OutCurrent->ADR++;
  5747  03C9  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5748  03CA  3E02               	addlw	2
  5749  03CB  0086               	movwf	6
  5750  03CC  0187               	clrf	7
  5751  03CD  3001               	movlw	1
  5752  03CE  0781               	addwf	1,f
  5753  03CF  3141               	addfsr 1,1
  5754  03D0  1803               	skipnc
  5755  03D1  0A81               	incf	1,f
  5756  03D2  3001               	movlw	1
  5757  03D3  00E0               	movwf	??_USBCtrlEPService^(0+128)
  5758  03D4  0860               	movf	??_USBCtrlEPService^(0+128),w
  5759  03D5  07E3               	addwf	USBCtrlEPService@setup_cnt^(0+128),f
  5760  03D6  3008               	movlw	8
  5761  03D7  0263               	subwf	USBCtrlEPService@setup_cnt^(0+128),w
  5762  03D8  1C03               	skipc
  5763  03D9  2BB5               	goto	i1l5401
  5764  03DA                     i1l5407:	
  5765                           
  5766                           ;usb_device.c: 2430: }
  5767                           ;usb_device.c: 2431: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5768  03DA  3050               	movlw	80
  5769  03DB  00E0               	movwf	??_USBCtrlEPService^(0+128)
  5770  03DC  3000               	movlw	0
  5771  03DD  00E1               	movwf	(??_USBCtrlEPService^(0+128)+1)
  5772  03DE  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5773  03DF  3E02               	addlw	2
  5774  03E0  0086               	movwf	6
  5775  03E1  0187               	clrf	7
  5776  03E2  0860               	movf	??_USBCtrlEPService^(0+128),w
  5777  03E3  3FC0               	movwi [0]fsr1
  5778  03E4  0861               	movf	(??_USBCtrlEPService^(0+128)+1),w
  5779  03E5  3FC1               	movwi [1]fsr1
  5780                           
  5781                           ;usb_device.c: 2434: USBCtrlTrfSetupHandler();
  5782  03E6  318C  2447         	fcall	_USBCtrlTrfSetupHandler
  5783                           
  5784                           ;usb_device.c: 2435: }
  5785  03E8  0008               	return
  5786  03E9                     i1l5411:	
  5787                           
  5788                           ;usb_device.c: 2436: else
  5789                           ;usb_device.c: 2437: {
  5790                           ;usb_device.c: 2439: USBCtrlTrfOutHandler();
  5791  03E9  318A  2285         	fcall	_USBCtrlTrfOutHandler
  5792                           
  5793                           ;usb_device.c: 2440: }
  5794                           ;usb_device.c: 2441: }
  5795  03EB  0008               	return
  5796  03EC                     i1l5413:	
  5797                           
  5798                           ;usb_device.c: 2442: else if((USTATcopy.Val & ~0x02) == 0x04)
  5799  03EC  30FD               	movlw	253
  5800  03ED  0023               	movlb	3	; select bank3
  5801  03EE  056A               	andwf	_USTATcopy^(0+384),w	;volatile
  5802  03EF  0021               	movlb	1	; select bank1
  5803  03F0  00E0               	movwf	??_USBCtrlEPService^(0+128)
  5804  03F1  3004               	movlw	4
  5805  03F2  0660               	xorwf	??_USBCtrlEPService^(0+128),w
  5806  03F3  1D03               	btfss	3,2
  5807  03F4  0008               	return
  5808                           
  5809                           ;usb_device.c: 2443: {
  5810                           ;usb_device.c: 2446: USBCtrlTrfInHandler();
  5811  03F5  318E  2659         	fcall	_USBCtrlTrfInHandler
  5812  03F7  0008               	return
  5813  03F8                     __end_of_USBCtrlEPService:	
  5814                           
  5815                           	psect	text21
  5816  0C47                     __ptext21:	
  5817 ;; *************** function _USBCtrlTrfSetupHandler *****************
  5818 ;; Defined at:
  5819 ;;		line 2491 in file "../../../../../../framework/usb/src/usb_device.c"
  5820 ;; Parameters:    Size  Location     Type
  5821 ;;		None
  5822 ;; Auto vars:     Size  Location     Type
  5823 ;;		None
  5824 ;; Return value:  Size  Location     Type
  5825 ;;		None               void
  5826 ;; Registers used:
  5827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5828 ;; Tracked objects:
  5829 ;;		On entry : 0/0
  5830 ;;		On exit  : 0/0
  5831 ;;		Unchanged: 0/0
  5832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5835 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5836 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5837 ;;Total ram usage:        1 bytes
  5838 ;; Hardware stack levels used:    1
  5839 ;; Hardware stack levels required when called:    7
  5840 ;; This function calls:
  5841 ;;		_USBCheckStdRequest
  5842 ;;		_USBCtrlEPServiceComplete
  5843 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5844 ;; This function is called by:
  5845 ;;		_USBCtrlEPService
  5846 ;; This function uses a non-reentrant model
  5847 ;;
  5848                           
  5849                           
  5850                           ;psect for function _USBCtrlTrfSetupHandler
  5851  0C47                     _USBCtrlTrfSetupHandler:	
  5852                           
  5853                           ;usb_device.c: 2496: shortPacketStatus = 0;
  5854                           
  5855                           ;incstack = 0
  5856                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5857  0C47  0023               	movlb	3	; select bank3
  5858  0C48  01D7               	clrf	_shortPacketStatus^(0+384)	;volatile
  5859                           
  5860                           ;usb_device.c: 2497: USBDeferStatusStagePacket = 0;
  5861  0C49  01C8               	clrf	_USBDeferStatusStagePacket^(0+384)	;volatile
  5862                           
  5863                           ;usb_device.c: 2498: USBDeferINDataStagePackets = 0;
  5864  0C4A  01C6               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  5865                           
  5866                           ;usb_device.c: 2499: USBDeferOUTDataStagePackets = 0;
  5867  0C4B  01C7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  5868                           
  5869                           ;usb_device.c: 2500: BothEP0OutUOWNsSet = 0;
  5870  0C4C  01C1               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  5871                           
  5872                           ;usb_device.c: 2501: controlTransferState = 0;
  5873  0C4D  01D3               	clrf	_controlTransferState^(0+384)	;volatile
  5874                           
  5875                           ;usb_device.c: 2510: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5876  0C4E  307F               	movlw	127
  5877  0C4F  0020               	movlb	0	; select bank0
  5878  0C50  00EF               	movwf	??_USBCtrlTrfSetupHandler
  5879  0C51  0023               	movlb	3	; select bank3
  5880  0C52  0835               	movf	_pBDTEntryIn^(0+384),w
  5881  0C53  0086               	movwf	6
  5882  0C54  0187               	clrf	7
  5883  0C55  0020               	movlb	0	; select bank0
  5884  0C56  086F               	movf	??_USBCtrlTrfSetupHandler,w
  5885  0C57  0581               	andwf	1,f
  5886                           
  5887                           ;usb_device.c: 2511: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  5888  0C58  3004               	movlw	4
  5889  0C59  00EF               	movwf	??_USBCtrlTrfSetupHandler
  5890  0C5A  086F               	movf	??_USBCtrlTrfSetupHandler,w
  5891  0C5B  0023               	movlb	3	; select bank3
  5892  0C5C  06B5               	xorwf	_pBDTEntryIn^(0+384),f
  5893                           
  5894                           ;usb_device.c: 2512: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5895  0C5D  307F               	movlw	127
  5896  0C5E  0020               	movlb	0	; select bank0
  5897  0C5F  00EF               	movwf	??_USBCtrlTrfSetupHandler
  5898  0C60  0023               	movlb	3	; select bank3
  5899  0C61  0835               	movf	_pBDTEntryIn^(0+384),w
  5900  0C62  0086               	movwf	6
  5901  0C63  0187               	clrf	7
  5902  0C64  0020               	movlb	0	; select bank0
  5903  0C65  086F               	movf	??_USBCtrlTrfSetupHandler,w
  5904  0C66  0581               	andwf	1,f
  5905                           
  5906                           ;usb_device.c: 2513: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  5907  0C67  3004               	movlw	4
  5908  0C68  00EF               	movwf	??_USBCtrlTrfSetupHandler
  5909  0C69  086F               	movf	??_USBCtrlTrfSetupHandler,w
  5910  0C6A  0023               	movlb	3	; select bank3
  5911  0C6B  06B5               	xorwf	_pBDTEntryIn^(0+384),f
  5912                           
  5913                           ;usb_device.c: 2514: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  5914  0C6C  307F               	movlw	127
  5915  0C6D  0020               	movlb	0	; select bank0
  5916  0C6E  00EF               	movwf	??_USBCtrlTrfSetupHandler
  5917  0C6F  0021               	movlb	1	; select bank1
  5918  0C70  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5919  0C71  0086               	movwf	6
  5920  0C72  0187               	clrf	7
  5921  0C73  0020               	movlb	0	; select bank0
  5922  0C74  086F               	movf	??_USBCtrlTrfSetupHandler,w
  5923  0C75  0581               	andwf	1,f
  5924                           
  5925                           ;usb_device.c: 2516: inPipes[0].info.Val = 0;
  5926  0C76  0021               	movlb	1	; select bank1
  5927  0C77  01EC               	clrf	(_inPipes^(0+128)+2)	;volatile
  5928                           
  5929                           ;usb_device.c: 2517: inPipes[0].wCount.Val = 0;
  5930  0C78  01ED               	clrf	(_inPipes^(0+128)+3)	;volatile
  5931  0C79  01EE               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  5932                           
  5933                           ;usb_device.c: 2518: outPipes[0].info.Val = 0;
  5934  0C7A  0023               	movlb	3	; select bank3
  5935  0C7B  01A2               	clrf	(_outPipes^(0+384)+2)	;volatile
  5936                           
  5937                           ;usb_device.c: 2519: outPipes[0].wCount.Val = 0;
  5938  0C7C  01A3               	clrf	(_outPipes^(0+384)+3)	;volatile
  5939  0C7D  01A4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  5940                           
  5941                           ;usb_device.c: 2525: USBCheckStdRequest();
  5942  0C7E  318D  2595  318C   	fcall	_USBCheckStdRequest
  5943                           
  5944                           ;usb_device.c: 2526: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  5945  0C81  3000               	movlw	0
  5946  0C82  0020               	movlb	0	; select bank0
  5947  0C83  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5948  0C84  3003               	movlw	3
  5949  0C85  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5950  0C86  3000               	movlw	0
  5951  0C87  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5952  0C88  3000               	movlw	0
  5953  0C89  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5954  0C8A  3000               	movlw	0
  5955  0C8B  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5956  0C8C  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5957  0C8D  318A  22EE  318C   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5958                           
  5959                           ;usb_device.c: 2539: USBCtrlEPServiceComplete();
  5960  0C90  3187  2749         	fcall	_USBCtrlEPServiceComplete
  5961  0C92  0008               	return
  5962  0C93                     __end_of_USBCtrlTrfSetupHandler:	
  5963                           
  5964                           	psect	text22
  5965  0749                     __ptext22:	
  5966 ;; *************** function _USBCtrlEPServiceComplete *****************
  5967 ;; Defined at:
  5968 ;;		line 1635 in file "../../../../../../framework/usb/src/usb_device.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;		None
  5971 ;; Auto vars:     Size  Location     Type
  5972 ;;		None
  5973 ;; Return value:  Size  Location     Type
  5974 ;;		None               void
  5975 ;; Registers used:
  5976 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5977 ;; Tracked objects:
  5978 ;;		On entry : 0/0
  5979 ;;		On exit  : 0/0
  5980 ;;		Unchanged: 0/0
  5981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5984 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5985 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5986 ;;Total ram usage:        2 bytes
  5987 ;; Hardware stack levels used:    1
  5988 ;; Hardware stack levels required when called:    2
  5989 ;; This function calls:
  5990 ;;		_USBCtrlEPAllowDataStage
  5991 ;;		_USBCtrlEPAllowStatusStage
  5992 ;; This function is called by:
  5993 ;;		_USBCtrlTrfSetupHandler
  5994 ;; This function uses a non-reentrant model
  5995 ;;
  5996                           
  5997                           
  5998                           ;psect for function _USBCtrlEPServiceComplete
  5999  0749                     _USBCtrlEPServiceComplete:	
  6000                           
  6001                           ;usb_device.c: 1641: UCONbits.PKTDIS = 0;
  6002                           
  6003                           ;incstack = 0
  6004                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6005  0749  003D               	movlb	29	; select bank29
  6006  074A  120E               	bcf	14,4	;volatile
  6007                           
  6008                           ;usb_device.c: 1647: if(inPipes[0].info.bits.busy == 0)
  6009  074B  0021               	movlb	1	; select bank1
  6010  074C  1BEC               	btfsc	(_inPipes^(0+128)+2),7	;volatile
  6011  074D  2F8A               	goto	i1l482
  6012                           
  6013                           ;usb_device.c: 1648: {
  6014                           ;usb_device.c: 1649: if(outPipes[0].info.bits.busy == 1)
  6015  074E  0023               	movlb	3	; select bank3
  6016  074F  1FA2               	btfss	(_outPipes^(0+384)+2),7	;volatile
  6017  0750  2F5E               	goto	i1l4943
  6018                           
  6019                           ;usb_device.c: 1650: {
  6020                           ;usb_device.c: 1651: controlTransferState = 2;
  6021  0751  3002               	movlw	2
  6022  0752  00F5               	movwf	??_USBCtrlEPServiceComplete
  6023  0753  0875               	movf	??_USBCtrlEPServiceComplete,w
  6024  0754  00D3               	movwf	_controlTransferState^(0+384)	;volatile
  6025                           
  6026                           ;usb_device.c: 1662: if(USBDeferOUTDataStagePackets == 0)
  6027  0755  0847               	movf	_USBDeferOUTDataStagePackets^(0+384),w	;volatile
  6028  0756  1D03               	btfss	3,2
  6029  0757  2F5A               	goto	i1l4939
  6030                           
  6031                           ;usb_device.c: 1663: {
  6032                           ;usb_device.c: 1664: USBCtrlEPAllowDataStage();
  6033  0758  318C  24E0         	fcall	_USBCtrlEPAllowDataStage
  6034  075A                     i1l4939:	
  6035                           
  6036                           ;usb_device.c: 1665: }
  6037                           ;usb_device.c: 1669: USBStatusStageEnabledFlag2 = 0;
  6038  075A  0023               	movlb	3	; select bank3
  6039  075B  01CB               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  6040                           
  6041                           ;usb_device.c: 1670: USBStatusStageEnabledFlag1 = 0;
  6042  075C  01CA               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  6043                           
  6044                           ;usb_device.c: 1671: }
  6045  075D  0008               	return
  6046  075E                     i1l4943:	
  6047                           
  6048                           ;usb_device.c: 1672: else
  6049                           ;usb_device.c: 1673: {
  6050                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->CNT = 8;
  6051  075E  3008               	movlw	8
  6052  075F  00F5               	movwf	??_USBCtrlEPServiceComplete
  6053  0760  0021               	movlb	1	; select bank1
  6054  0761  0A69               	incf	_pBDTEntryEP0OutNext^(0+128),w
  6055  0762  0086               	movwf	6
  6056  0763  0187               	clrf	7
  6057  0764  0875               	movf	??_USBCtrlEPServiceComplete,w
  6058  0765  0081               	movwf	1
  6059                           
  6060                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6061  0766  3050               	movlw	80
  6062  0767  00F5               	movwf	??_USBCtrlEPServiceComplete
  6063  0768  3000               	movlw	0
  6064  0769  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  6065  076A  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6066  076B  3E02               	addlw	2
  6067  076C  0086               	movwf	6
  6068  076D  0187               	clrf	7
  6069  076E  0875               	movf	??_USBCtrlEPServiceComplete,w
  6070  076F  3FC0               	movwi [0]fsr1
  6071  0770  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  6072  0771  3FC1               	movwi [1]fsr1
  6073                           
  6074                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6075  0772  300C               	movlw	12
  6076  0773  00F5               	movwf	??_USBCtrlEPServiceComplete
  6077  0774  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6078  0775  0086               	movwf	6
  6079  0776  0187               	clrf	7
  6080  0777  0875               	movf	??_USBCtrlEPServiceComplete,w
  6081  0778  0081               	movwf	1
  6082                           
  6083                           ;usb_device.c: 1681: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6084  0779  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6085  077A  0086               	movwf	6
  6086  077B  0187               	clrf	7
  6087  077C  1781               	bsf	1,7
  6088                           
  6089                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val = 0x04;
  6090  077D  3004               	movlw	4
  6091  077E  00F5               	movwf	??_USBCtrlEPServiceComplete
  6092  077F  0023               	movlb	3	; select bank3
  6093  0780  0835               	movf	_pBDTEntryIn^(0+384),w
  6094  0781  0086               	movwf	6
  6095  0782  0187               	clrf	7
  6096  0783  0875               	movf	??_USBCtrlEPServiceComplete,w
  6097  0784  0081               	movwf	1
  6098                           
  6099                           ;usb_device.c: 1683: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6100  0785  0835               	movf	_pBDTEntryIn^(0+384),w
  6101  0786  0086               	movwf	6
  6102  0787  0187               	clrf	7
  6103  0788  1781               	bsf	1,7
  6104                           
  6105                           ;usb_device.c: 1684: }
  6106                           ;usb_device.c: 1685: }
  6107  0789  0008               	return
  6108  078A                     i1l482:	
  6109                           
  6110                           ;usb_device.c: 1686: else
  6111                           ;usb_device.c: 1687: {
  6112                           ;usb_device.c: 1688: if(SetupPkt.DataDir == (0x80>>7))
  6113  078A  0020               	movlb	0	; select bank0
  6114  078B  1FD0               	btfss	80,7	;volatile
  6115  078C  2FA1               	goto	i1l4969
  6116                           
  6117                           ;usb_device.c: 1689: {
  6118                           ;usb_device.c: 1690: controlTransferState = 1;
  6119  078D  3001               	movlw	1
  6120  078E  00F5               	movwf	??_USBCtrlEPServiceComplete
  6121  078F  0875               	movf	??_USBCtrlEPServiceComplete,w
  6122  0790  0023               	movlb	3	; select bank3
  6123  0791  00D3               	movwf	_controlTransferState^(0+384)	;volatile
  6124                           
  6125                           ;usb_device.c: 1704: if(USBDeferINDataStagePackets == 0)
  6126  0792  0846               	movf	_USBDeferINDataStagePackets^(0+384),w	;volatile
  6127  0793  1D03               	btfss	3,2
  6128  0794  2F98               	goto	i1l4961
  6129                           
  6130                           ;usb_device.c: 1705: {
  6131                           ;usb_device.c: 1706: USBCtrlEPAllowDataStage();
  6132  0795  318C  24E0  3187   	fcall	_USBCtrlEPAllowDataStage
  6133  0798                     i1l4961:	
  6134                           
  6135                           ;usb_device.c: 1707: }
  6136                           ;usb_device.c: 1729: USBStatusStageEnabledFlag2 = 0;
  6137  0798  0023               	movlb	3	; select bank3
  6138  0799  01CB               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  6139                           
  6140                           ;usb_device.c: 1730: USBStatusStageEnabledFlag1 = 0;
  6141  079A  01CA               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  6142                           
  6143                           ;usb_device.c: 1731: if(USBDeferStatusStagePacket == 0)
  6144  079B  0848               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  6145  079C  1D03               	btfss	3,2
  6146  079D  0008               	return
  6147                           
  6148                           ;usb_device.c: 1732: {
  6149                           ;usb_device.c: 1733: USBCtrlEPAllowStatusStage();
  6150  079E  318E  26BD         	fcall	_USBCtrlEPAllowStatusStage
  6151                           
  6152                           ;usb_device.c: 1734: }
  6153                           ;usb_device.c: 1735: }
  6154  07A0  0008               	return
  6155  07A1                     i1l4969:	
  6156                           
  6157                           ;usb_device.c: 1736: else
  6158                           ;usb_device.c: 1737: {
  6159                           ;usb_device.c: 1748: controlTransferState = 2;
  6160  07A1  3002               	movlw	2
  6161  07A2  00F5               	movwf	??_USBCtrlEPServiceComplete
  6162  07A3  0875               	movf	??_USBCtrlEPServiceComplete,w
  6163  07A4  0023               	movlb	3	; select bank3
  6164  07A5  00D3               	movwf	_controlTransferState^(0+384)	;volatile
  6165                           
  6166                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->CNT = 8;
  6167  07A6  3008               	movlw	8
  6168  07A7  00F5               	movwf	??_USBCtrlEPServiceComplete
  6169  07A8  0021               	movlb	1	; select bank1
  6170  07A9  0A69               	incf	_pBDTEntryEP0OutNext^(0+128),w
  6171  07AA  0086               	movwf	6
  6172  07AB  0187               	clrf	7
  6173  07AC  0875               	movf	??_USBCtrlEPServiceComplete,w
  6174  07AD  0081               	movwf	1
  6175                           
  6176                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6177  07AE  3050               	movlw	80
  6178  07AF  00F5               	movwf	??_USBCtrlEPServiceComplete
  6179  07B0  3000               	movlw	0
  6180  07B1  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  6181  07B2  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6182  07B3  3E02               	addlw	2
  6183  07B4  0086               	movwf	6
  6184  07B5  0187               	clrf	7
  6185  07B6  0875               	movf	??_USBCtrlEPServiceComplete,w
  6186  07B7  3FC0               	movwi [0]fsr1
  6187  07B8  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  6188  07B9  3FC1               	movwi [1]fsr1
  6189                           
  6190                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  6191  07BA  3004               	movlw	4
  6192  07BB  00F5               	movwf	??_USBCtrlEPServiceComplete
  6193  07BC  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6194  07BD  0086               	movwf	6
  6195  07BE  0187               	clrf	7
  6196  07BF  0875               	movf	??_USBCtrlEPServiceComplete,w
  6197  07C0  0081               	movwf	1
  6198                           
  6199                           ;usb_device.c: 1754: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6200  07C1  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6201  07C2  0086               	movwf	6
  6202  07C3  0187               	clrf	7
  6203  07C4  1781               	bsf	1,7
  6204                           
  6205                           ;usb_device.c: 1757: USBStatusStageEnabledFlag2 = 0;
  6206  07C5  0023               	movlb	3	; select bank3
  6207  07C6  01CB               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  6208                           
  6209                           ;usb_device.c: 1758: USBStatusStageEnabledFlag1 = 0;
  6210  07C7  01CA               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  6211                           
  6212                           ;usb_device.c: 1759: if(USBDeferStatusStagePacket == 0)
  6213  07C8  0848               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  6214  07C9  1D03               	btfss	3,2
  6215  07CA  0008               	return
  6216                           
  6217                           ;usb_device.c: 1760: {
  6218                           ;usb_device.c: 1761: USBCtrlEPAllowStatusStage();
  6219  07CB  318E  26BD         	fcall	_USBCtrlEPAllowStatusStage
  6220  07CD  0008               	return
  6221  07CE                     __end_of_USBCtrlEPServiceComplete:	
  6222                           
  6223                           	psect	text23
  6224  0CE0                     __ptext23:	
  6225 ;; *************** function _USBCtrlEPAllowDataStage *****************
  6226 ;; Defined at:
  6227 ;;		line 1507 in file "../../../../../../framework/usb/src/usb_device.c"
  6228 ;; Parameters:    Size  Location     Type
  6229 ;;		None
  6230 ;; Auto vars:     Size  Location     Type
  6231 ;;		None
  6232 ;; Return value:  Size  Location     Type
  6233 ;;		None               void
  6234 ;; Registers used:
  6235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6236 ;; Tracked objects:
  6237 ;;		On entry : 0/0
  6238 ;;		On exit  : 0/0
  6239 ;;		Unchanged: 0/0
  6240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6243 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6244 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6245 ;;Total ram usage:        2 bytes
  6246 ;; Hardware stack levels used:    1
  6247 ;; Hardware stack levels required when called:    1
  6248 ;; This function calls:
  6249 ;;		_USBCtrlTrfTxService
  6250 ;; This function is called by:
  6251 ;;		_USBCtrlEPServiceComplete
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255                           
  6256                           ;psect for function _USBCtrlEPAllowDataStage
  6257  0CE0                     _USBCtrlEPAllowDataStage:	
  6258                           
  6259                           ;usb_device.c: 1509: USBDeferINDataStagePackets = 0;
  6260                           
  6261                           ;incstack = 0
  6262                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6263  0CE0  0023               	movlb	3	; select bank3
  6264  0CE1  01C6               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  6265                           
  6266                           ;usb_device.c: 1510: USBDeferOUTDataStagePackets = 0;
  6267  0CE2  01C7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  6268                           
  6269                           ;usb_device.c: 1512: if(controlTransferState == 2)
  6270  0CE3  3002               	movlw	2
  6271  0CE4  0653               	xorwf	_controlTransferState^(0+384),w	;volatile
  6272  0CE5  1D03               	btfss	3,2
  6273  0CE6  2D07               	goto	i1l4725
  6274                           
  6275                           ;usb_device.c: 1513: {
  6276                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->CNT = 8;
  6277  0CE7  3008               	movlw	8
  6278  0CE8  00F3               	movwf	??_USBCtrlEPAllowDataStage
  6279  0CE9  0021               	movlb	1	; select bank1
  6280  0CEA  0A69               	incf	_pBDTEntryEP0OutNext^(0+128),w
  6281  0CEB  0086               	movwf	6
  6282  0CEC  0187               	clrf	7
  6283  0CED  0873               	movf	??_USBCtrlEPAllowDataStage,w
  6284  0CEE  0081               	movwf	1
  6285                           
  6286                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  6287  0CEF  3058               	movlw	88
  6288  0CF0  00F3               	movwf	??_USBCtrlEPAllowDataStage
  6289  0CF1  3000               	movlw	0
  6290  0CF2  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  6291  0CF3  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6292  0CF4  3E02               	addlw	2
  6293  0CF5  0086               	movwf	6
  6294  0CF6  0187               	clrf	7
  6295  0CF7  0873               	movf	??_USBCtrlEPAllowDataStage,w
  6296  0CF8  3FC0               	movwi [0]fsr1
  6297  0CF9  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  6298  0CFA  3FC1               	movwi [1]fsr1
  6299                           
  6300                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  6301  0CFB  3048               	movlw	72
  6302  0CFC  00F3               	movwf	??_USBCtrlEPAllowDataStage
  6303  0CFD  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6304  0CFE  0086               	movwf	6
  6305  0CFF  0187               	clrf	7
  6306  0D00  0873               	movf	??_USBCtrlEPAllowDataStage,w
  6307  0D01  0081               	movwf	1
  6308                           
  6309                           ;usb_device.c: 1518: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6310  0D02  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6311  0D03  0086               	movwf	6
  6312  0D04  0187               	clrf	7
  6313  0D05  1781               	bsf	1,7
  6314                           
  6315                           ;usb_device.c: 1519: }
  6316  0D06  0008               	return
  6317  0D07                     i1l4725:	
  6318                           
  6319                           ;usb_device.c: 1520: else
  6320                           ;usb_device.c: 1521: {
  6321                           ;usb_device.c: 1524: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  6322  0D07  0021               	movlb	1	; select bank1
  6323  0D08  086E               	movf	((_inPipes+1)^(0+128)+3),w	;volatile
  6324  0D09  0020               	movlb	0	; select bank0
  6325  0D0A  0257               	subwf	87,w	;volatile
  6326  0D0B  1D03               	skipz
  6327  0D0C  2D11               	goto	u409_25
  6328  0D0D  0021               	movlb	1	; select bank1
  6329  0D0E  086D               	movf	(_inPipes^(0+128)+3),w	;volatile
  6330  0D0F  0020               	movlb	0	; select bank0
  6331  0D10  0256               	subwf	86,w	;volatile
  6332  0D11                     u409_25:	
  6333  0D11  1803               	skipnc
  6334  0D12  2D1A               	goto	i1l4729
  6335                           
  6336                           ;usb_device.c: 1525: {
  6337                           ;usb_device.c: 1526: inPipes[0].wCount.Val = SetupPkt.wLength;
  6338  0D13  0857               	movf	87,w	;volatile
  6339  0D14  0021               	movlb	1	; select bank1
  6340  0D15  00EE               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  6341  0D16  0020               	movlb	0	; select bank0
  6342  0D17  0856               	movf	86,w	;volatile
  6343  0D18  0021               	movlb	1	; select bank1
  6344  0D19  00ED               	movwf	(_inPipes^(0+128)+3)	;volatile
  6345  0D1A                     i1l4729:	
  6346                           
  6347                           ;usb_device.c: 1527: }
  6348                           ;usb_device.c: 1528: USBCtrlTrfTxService();
  6349  0D1A  318F  2791         	fcall	_USBCtrlTrfTxService
  6350                           
  6351                           ;usb_device.c: 1533: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  6352  0D1C  3058               	movlw	88
  6353  0D1D  00F3               	movwf	??_USBCtrlEPAllowDataStage
  6354  0D1E  3000               	movlw	0
  6355  0D1F  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  6356  0D20  0023               	movlb	3	; select bank3
  6357  0D21  0835               	movf	_pBDTEntryIn^(0+384),w
  6358  0D22  3E02               	addlw	2
  6359  0D23  0086               	movwf	6
  6360  0D24  0187               	clrf	7
  6361  0D25  0873               	movf	??_USBCtrlEPAllowDataStage,w
  6362  0D26  3FC0               	movwi [0]fsr1
  6363  0D27  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  6364  0D28  3FC1               	movwi [1]fsr1
  6365                           
  6366                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  6367  0D29  3048               	movlw	72
  6368  0D2A  00F3               	movwf	??_USBCtrlEPAllowDataStage
  6369  0D2B  0835               	movf	_pBDTEntryIn^(0+384),w
  6370  0D2C  0086               	movwf	6
  6371  0D2D  0187               	clrf	7
  6372  0D2E  0873               	movf	??_USBCtrlEPAllowDataStage,w
  6373  0D2F  0081               	movwf	1
  6374                           
  6375                           ;usb_device.c: 1535: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6376  0D30  0835               	movf	_pBDTEntryIn^(0+384),w
  6377  0D31  0086               	movwf	6
  6378  0D32  0187               	clrf	7
  6379  0D33  1781               	bsf	1,7
  6380  0D34  0008               	return
  6381  0D35                     __end_of_USBCtrlEPAllowDataStage:	
  6382                           
  6383                           	psect	text24
  6384  0D95                     __ptext24:	
  6385 ;; *************** function _USBCheckStdRequest *****************
  6386 ;; Defined at:
  6387 ;;		line 2711 in file "../../../../../../framework/usb/src/usb_device.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;		None
  6390 ;; Auto vars:     Size  Location     Type
  6391 ;;		None
  6392 ;; Return value:  Size  Location     Type
  6393 ;;		None               void
  6394 ;; Registers used:
  6395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6403 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6404 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6405 ;;Total ram usage:        1 bytes
  6406 ;; Hardware stack levels used:    1
  6407 ;; Hardware stack levels required when called:    6
  6408 ;; This function calls:
  6409 ;;		_USBStdFeatureReqHandler
  6410 ;;		_USBStdGetDscHandler
  6411 ;;		_USBStdGetStatusHandler
  6412 ;;		_USBStdSetCfgHandler
  6413 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6414 ;; This function is called by:
  6415 ;;		_USBCtrlTrfSetupHandler
  6416 ;; This function uses a non-reentrant model
  6417 ;;
  6418                           
  6419                           
  6420                           ;psect for function _USBCheckStdRequest
  6421  0D95                     _USBCheckStdRequest:	
  6422                           
  6423                           ;usb_device.c: 2713: if(SetupPkt.RequestType != (0x00>>5)) return;
  6424                           
  6425                           ;incstack = 0
  6426                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6427  0D95  0020               	movlb	0	; select bank0
  6428  0D96  0E50               	swapf	80,w	;volatile
  6429  0D97  0C89               	rrf	9,f
  6430  0D98  3903               	andlw	3
  6431  0D99  3A00               	xorlw	0
  6432  0D9A  1D03               	btfss	3,2
  6433  0D9B  0008               	return
  6434  0D9C  2DEB               	goto	i1l5063
  6435  0D9D                     i1l611:	
  6436                           ;usb_device.c: 2716: {
  6437                           ;usb_device.c: 2717: case 5:
  6438                           
  6439                           ;usb_device.c: 2715: switch(SetupPkt.bRequest)
  6440                           
  6441                           
  6442                           ;usb_device.c: 2718: inPipes[0].info.bits.busy = 1;
  6443  0D9D  0021               	movlb	1	; select bank1
  6444  0D9E  17EC               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6445                           
  6446                           ;usb_device.c: 2719: USBDeviceState = ADR_PENDING_STATE;
  6447  0D9F  3008               	movlw	8
  6448  0DA0  0020               	movlb	0	; select bank0
  6449  0DA1  00EE               	movwf	??_USBCheckStdRequest
  6450  0DA2  086E               	movf	??_USBCheckStdRequest,w
  6451  0DA3  0023               	movlb	3	; select bank3
  6452  0DA4  00C9               	movwf	_USBDeviceState^(0+384)	;volatile
  6453                           
  6454                           ;usb_device.c: 2721: break;
  6455  0DA5  0008               	return
  6456  0DA6                     i1l5033:	
  6457                           ;usb_device.c: 2722: case 6:
  6458                           
  6459                           
  6460                           ;usb_device.c: 2723: USBStdGetDscHandler();
  6461  0DA6  3183  2308         	fcall	_USBStdGetDscHandler
  6462                           
  6463                           ;usb_device.c: 2724: break;
  6464  0DA8  0008               	return
  6465  0DA9                     i1l5035:	
  6466                           ;usb_device.c: 2725: case 9:
  6467                           
  6468                           
  6469                           ;usb_device.c: 2726: USBStdSetCfgHandler();
  6470  0DA9  3186  26BA         	fcall	_USBStdSetCfgHandler
  6471                           
  6472                           ;usb_device.c: 2727: break;
  6473  0DAB  0008               	return
  6474  0DAC                     i1l5037:	
  6475                           ;usb_device.c: 2728: case 8:
  6476                           
  6477                           
  6478                           ;usb_device.c: 2729: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  6479  0DAC  30E9               	movlw	low _USBActiveConfiguration
  6480  0DAD  0021               	movlb	1	; select bank1
  6481  0DAE  00EA               	movwf	_inPipes^(0+128)	;volatile
  6482  0DAF  3001               	movlw	high _USBActiveConfiguration
  6483  0DB0  00EB               	movwf	(_inPipes+1)^(0+128)	;volatile
  6484                           
  6485                           ;usb_device.c: 2730: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6486  0DB1  146C               	bsf	(_inPipes^(0+128)+2),0	;volatile
  6487                           
  6488                           ;usb_device.c: 2731: inPipes[0].wCount.v[0] = 1;
  6489  0DB2  3001               	movlw	1
  6490  0DB3  0020               	movlb	0	; select bank0
  6491  0DB4  00EE               	movwf	??_USBCheckStdRequest
  6492  0DB5  086E               	movf	??_USBCheckStdRequest,w
  6493  0DB6  0021               	movlb	1	; select bank1
  6494  0DB7  00ED               	movwf	(_inPipes^(0+128)+3)	;volatile
  6495                           
  6496                           ;usb_device.c: 2732: inPipes[0].info.bits.busy = 1;
  6497  0DB8  17EC               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6498                           
  6499                           ;usb_device.c: 2733: break;
  6500  0DB9  0008               	return
  6501  0DBA                     i1l5045:	
  6502                           ;usb_device.c: 2734: case 0:
  6503                           
  6504                           
  6505                           ;usb_device.c: 2735: USBStdGetStatusHandler();
  6506  0DBA  318B  2364         	fcall	_USBStdGetStatusHandler
  6507                           
  6508                           ;usb_device.c: 2736: break;
  6509  0DBC  0008               	return
  6510  0DBD                     i1l5047:	
  6511                           ;usb_device.c: 2737: case 1:
  6512                           
  6513                           
  6514                           ;usb_device.c: 2738: case 3:
  6515                           ;usb_device.c: 2739: USBStdFeatureReqHandler();
  6516  0DBD  3180  2048         	fcall	_USBStdFeatureReqHandler
  6517                           
  6518                           ;usb_device.c: 2740: break;
  6519  0DBF  0008               	return
  6520  0DC0                     i1l5049:	
  6521                           ;usb_device.c: 2741: case 10:
  6522                           
  6523                           
  6524                           ;usb_device.c: 2742: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  6525  0DC0  0020               	movlb	0	; select bank0
  6526  0DC1  0854               	movf	84,w	;volatile
  6527  0DC2  3EE7               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  6528  0DC3  0021               	movlb	1	; select bank1
  6529  0DC4  00EA               	movwf	_inPipes^(0+128)	;volatile
  6530  0DC5  3001               	movlw	1
  6531  0DC6  00EB               	movwf	(_inPipes+1)^(0+128)	;volatile
  6532                           
  6533                           ;usb_device.c: 2743: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6534  0DC7  146C               	bsf	(_inPipes^(0+128)+2),0	;volatile
  6535                           
  6536                           ;usb_device.c: 2744: inPipes[0].wCount.v[0] = 1;
  6537  0DC8  3001               	movlw	1
  6538  0DC9  0020               	movlb	0	; select bank0
  6539  0DCA  00EE               	movwf	??_USBCheckStdRequest
  6540  0DCB  086E               	movf	??_USBCheckStdRequest,w
  6541  0DCC  0021               	movlb	1	; select bank1
  6542  0DCD  00ED               	movwf	(_inPipes^(0+128)+3)	;volatile
  6543                           
  6544                           ;usb_device.c: 2745: inPipes[0].info.bits.busy = 1;
  6545  0DCE  17EC               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6546                           
  6547                           ;usb_device.c: 2746: break;
  6548  0DCF  0008               	return
  6549  0DD0                     i1l620:	
  6550                           ;usb_device.c: 2747: case 11:
  6551                           
  6552                           
  6553                           ;usb_device.c: 2748: inPipes[0].info.bits.busy = 1;
  6554  0DD0  0021               	movlb	1	; select bank1
  6555  0DD1  17EC               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6556                           
  6557                           ;usb_device.c: 2749: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  6558  0DD2  0020               	movlb	0	; select bank0
  6559  0DD3  0852               	movf	82,w	;volatile
  6560  0DD4  00EE               	movwf	??_USBCheckStdRequest
  6561  0DD5  0854               	movf	84,w	;volatile
  6562  0DD6  3EE7               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  6563  0DD7  0086               	movwf	6
  6564  0DD8  3001               	movlw	1	; select bank3/4
  6565  0DD9  0087               	movwf	7
  6566  0DDA  086E               	movf	??_USBCheckStdRequest,w
  6567  0DDB  0081               	movwf	1
  6568                           
  6569                           ;usb_device.c: 2750: break;
  6570  0DDC  0008               	return
  6571  0DDD                     i1l5059:	
  6572                           ;usb_device.c: 2751: case 7:
  6573                           
  6574                           
  6575                           ;usb_device.c: 2752: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  6576  0DDD  3000               	movlw	0
  6577  0DDE  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6578  0DDF  3002               	movlw	2
  6579  0DE0  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6580  0DE1  3000               	movlw	0
  6581  0DE2  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6582  0DE3  3000               	movlw	0
  6583  0DE4  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  6584  0DE5  3000               	movlw	0
  6585  0DE6  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6586  0DE7  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6587  0DE8  318A  22EE         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6588                           
  6589                           ;usb_device.c: 2757: }
  6590                           
  6591                           ;usb_device.c: 2756: break;
  6592                           
  6593                           ;usb_device.c: 2755: default:
  6594                           
  6595                           ;usb_device.c: 2754: case 12:
  6596                           
  6597                           ;usb_device.c: 2753: break;
  6598  0DEA  0008               	return
  6599  0DEB                     i1l5063:	
  6600  0DEB  0020               	movlb	0	; select bank0
  6601  0DEC  0851               	movf	81,w	;volatile
  6602                           
  6603                           ; Switch size 1, requested type "space"
  6604                           ; Number of cases is 11, Range of values is 0 to 12
  6605                           ; switch strategies available:
  6606                           ; Name         Instructions Cycles
  6607                           ; direct_byte           32     6 (fixed)
  6608                           ; simple_byte           34    18 (average)
  6609                           ; jumptable            260     6 (fixed)
  6610                           ;	Chosen strategy is direct_byte
  6611  0DED  0084               	movwf	4
  6612  0DEE  300D               	movlw	13
  6613  0DEF  0204               	subwf	4,w
  6614  0DF0  1803               	skipnc
  6615  0DF1  0008               	return
  6616  0DF2  3188               	movlp	high i1S5825
  6617  0DF3  3504               	lslf	4,w
  6618  0DF4  3E00               	addlw	low i1S5825
  6619  0DF5  0082               	movwf	2
  6620  0DF6                     i1l609:	
  6621  0DF6  0008               	return
  6622  0DF7                     __end_of_USBCheckStdRequest:	
  6623                           
  6624                           	psect	swtext2
  6625  0800                     __pswtext2:	
  6626  0800                     i1S5825:	
  6627  0800  318D  2DBA         	ljmp	i1l5045
  6628  0802  318D  2DBD         	ljmp	i1l5047
  6629  0804  318D  2DF6         	ljmp	i1l609
  6630  0806  318D  2DBD         	ljmp	i1l5047
  6631  0808  318D  2DF6         	ljmp	i1l609
  6632  080A  318D  2D9D         	ljmp	i1l611
  6633  080C  318D  2DA6         	ljmp	i1l5033
  6634  080E  318D  2DDD         	ljmp	i1l5059
  6635  0810  318D  2DAC         	ljmp	i1l5037
  6636  0812  318D  2DA9         	ljmp	i1l5035
  6637  0814  318D  2DC0         	ljmp	i1l5049
  6638  0816  318D  2DD0         	ljmp	i1l620
  6639  0818  318D  2DF6         	ljmp	i1l609
  6640                           
  6641                           	psect	text25
  6642  06BA                     __ptext25:	
  6643 ;; *************** function _USBStdSetCfgHandler *****************
  6644 ;; Defined at:
  6645 ;;		line 1987 in file "../../../../../../framework/usb/src/usb_device.c"
  6646 ;; Parameters:    Size  Location     Type
  6647 ;;		None
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;  p               2    9[BANK0 ] PTR unsigned char 
  6650 ;;		 -> UEP1(1), 
  6651 ;;  i               1   11[BANK0 ] unsigned char 
  6652 ;;  i               1   12[BANK0 ] unsigned char 
  6653 ;; Return value:  Size  Location     Type
  6654 ;;		None               void
  6655 ;; Registers used:
  6656 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6657 ;; Tracked objects:
  6658 ;;		On entry : 0/0
  6659 ;;		On exit  : 0/0
  6660 ;;		Unchanged: 0/0
  6661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6663 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6664 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6665 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6666 ;;Total ram usage:        5 bytes
  6667 ;; Hardware stack levels used:    1
  6668 ;; Hardware stack levels required when called:    5
  6669 ;; This function calls:
  6670 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6671 ;;		_memset
  6672 ;; This function is called by:
  6673 ;;		_USBCheckStdRequest
  6674 ;; This function uses a non-reentrant model
  6675 ;;
  6676                           
  6677                           
  6678                           ;psect for function _USBStdSetCfgHandler
  6679  06BA                     _USBStdSetCfgHandler:	
  6680                           
  6681                           ;usb_device.c: 1989: uint8_t i;
  6682                           ;usb_device.c: 1992: inPipes[0].info.bits.busy = 1;
  6683                           
  6684                           ;incstack = 0
  6685                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6686  06BA  0021               	movlb	1	; select bank1
  6687  06BB  17EC               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6688                           
  6689                           ;usb_device.c: 1995: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
  6690  06BC  300E               	movlw	14
  6691  06BD  0020               	movlb	0	; select bank0
  6692  06BE  00EA               	movwf	USBStdSetCfgHandler@p+1
  6693  06BF  3099               	movlw	153
  6694  06C0  00E9               	movwf	USBStdSetCfgHandler@p
  6695  06C1  01EB               	clrf	USBStdSetCfgHandler@i_1543
  6696  06C2  3002               	movlw	2
  6697  06C3  026B               	subwf	USBStdSetCfgHandler@i_1543,w
  6698  06C4  1803               	btfsc	3,0
  6699  06C5  2ED7               	goto	i1l4753
  6700  06C6                     i1l4745:	
  6701  06C6  0869               	movf	USBStdSetCfgHandler@p,w
  6702  06C7  0086               	movwf	6
  6703  06C8  086A               	movf	USBStdSetCfgHandler@p+1,w
  6704  06C9  0087               	movwf	7
  6705  06CA  0181               	clrf	1
  6706  06CB  3001               	movlw	1
  6707  06CC  07E9               	addwf	USBStdSetCfgHandler@p,f
  6708  06CD  3000               	movlw	0
  6709  06CE  3DEA               	addwfc	USBStdSetCfgHandler@p+1,f
  6710  06CF  3001               	movlw	1
  6711  06D0  00E8               	movwf	??_USBStdSetCfgHandler
  6712  06D1  0868               	movf	??_USBStdSetCfgHandler,w
  6713  06D2  07EB               	addwf	USBStdSetCfgHandler@i_1543,f
  6714  06D3  3002               	movlw	2
  6715  06D4  026B               	subwf	USBStdSetCfgHandler@i_1543,w
  6716  06D5  1C03               	skipc
  6717  06D6  2EC6               	goto	i1l4745
  6718  06D7                     i1l4753:	
  6719                           
  6720                           ;usb_device.c: 1998: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  6721  06D7  3020               	movlw	32
  6722  06D8  00F0               	movwf	memset@p1
  6723  06D9  3000               	movlw	0
  6724  06DA  00F1               	movwf	memset@p1+1
  6725  06DB  3000               	movlw	0
  6726  06DC  00F2               	movwf	memset@c
  6727  06DD  00F3               	movwf	memset@c+1
  6728  06DE  3030               	movlw	48
  6729  06DF  00F4               	movwf	memset@n
  6730  06E0  3000               	movlw	0
  6731  06E1  00F5               	movwf	memset@n+1
  6732  06E2  3189  2133  3186   	fcall	_memset
  6733                           
  6734                           ;usb_device.c: 2001: UCONbits.PPBRST = 1;
  6735  06E5  003D               	movlb	29	; select bank29
  6736  06E6  170E               	bsf	14,6	;volatile
  6737                           
  6738                           ;usb_device.c: 2006: for(i = 0; i < (uint8_t)(2+1u); i++)
  6739  06E7  0020               	movlb	0	; select bank0
  6740  06E8  01EC               	clrf	USBStdSetCfgHandler@i
  6741  06E9  3003               	movlw	3
  6742  06EA  026C               	subwf	USBStdSetCfgHandler@i,w
  6743  06EB  1803               	btfsc	3,0
  6744  06EC  2F01               	goto	i1l4769
  6745  06ED                     i1l4763:	
  6746                           
  6747                           ;usb_device.c: 2007: {
  6748                           ;usb_device.c: 2008: ep_data_in[i].Val = 0u;
  6749  06ED  086C               	movf	USBStdSetCfgHandler@i,w
  6750  06EE  3EAF               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  6751  06EF  0086               	movwf	6
  6752  06F0  3001               	movlw	1	; select bank3/4
  6753  06F1  0087               	movwf	7
  6754  06F2  0181               	clrf	1
  6755                           
  6756                           ;usb_device.c: 2009: ep_data_out[i].Val = 0u;
  6757  06F3  086C               	movf	USBStdSetCfgHandler@i,w
  6758  06F4  3EB2               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  6759  06F5  0086               	movwf	6
  6760  06F6  3001               	movlw	1	; select bank3/4
  6761  06F7  0087               	movwf	7
  6762  06F8  0181               	clrf	1
  6763  06F9  3001               	movlw	1
  6764  06FA  00E8               	movwf	??_USBStdSetCfgHandler
  6765  06FB  0868               	movf	??_USBStdSetCfgHandler,w
  6766  06FC  07EC               	addwf	USBStdSetCfgHandler@i,f
  6767  06FD  3003               	movlw	3
  6768  06FE  026C               	subwf	USBStdSetCfgHandler@i,w
  6769  06FF  1C03               	skipc
  6770  0700  2EED               	goto	i1l4763
  6771  0701                     i1l4769:	
  6772                           
  6773                           ;usb_device.c: 2010: }
  6774                           ;usb_device.c: 2013: memset((void*)&USBAlternateInterface,0x00,2);
  6775  0701  30E7               	movlw	low _USBAlternateInterface
  6776  0702  00F0               	movwf	memset@p1
  6777  0703  3001               	movlw	high _USBAlternateInterface
  6778  0704  00F1               	movwf	memset@p1+1
  6779  0705  3000               	movlw	0
  6780  0706  00F2               	movwf	memset@c
  6781  0707  00F3               	movwf	memset@c+1
  6782  0708  3002               	movlw	2
  6783  0709  00F4               	movwf	memset@n
  6784  070A  3000               	movlw	0
  6785  070B  00F5               	movwf	memset@n+1
  6786  070C  3189  2133  3186   	fcall	_memset
  6787                           
  6788                           ;usb_device.c: 2016: UCONbits.PPBRST = 0;
  6789  070F  003D               	movlb	29	; select bank29
  6790  0710  130E               	bcf	14,6	;volatile
  6791                           
  6792                           ;usb_device.c: 2018: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6793  0711  3028               	movlw	40
  6794  0712  0020               	movlb	0	; select bank0
  6795  0713  00E8               	movwf	??_USBStdSetCfgHandler
  6796  0714  0868               	movf	??_USBStdSetCfgHandler,w
  6797  0715  0023               	movlb	3	; select bank3
  6798  0716  00B5               	movwf	_pBDTEntryIn^(0+384)
  6799                           
  6800                           ;usb_device.c: 2021: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  6801  0717  3020               	movlw	32
  6802  0718  0020               	movlb	0	; select bank0
  6803  0719  00E8               	movwf	??_USBStdSetCfgHandler
  6804  071A  0868               	movf	??_USBStdSetCfgHandler,w
  6805  071B  0021               	movlb	1	; select bank1
  6806  071C  00E8               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  6807                           
  6808                           ;usb_device.c: 2022: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  6809  071D  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6810  071E  0020               	movlb	0	; select bank0
  6811  071F  00E8               	movwf	??_USBStdSetCfgHandler
  6812  0720  0868               	movf	??_USBStdSetCfgHandler,w
  6813  0721  0021               	movlb	1	; select bank1
  6814  0722  00E9               	movwf	_pBDTEntryEP0OutNext^(0+128)
  6815                           
  6816                           ;usb_device.c: 2025: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  6817  0723  0020               	movlb	0	; select bank0
  6818  0724  0852               	movf	82,w	;volatile
  6819  0725  00E8               	movwf	??_USBStdSetCfgHandler
  6820  0726  0868               	movf	??_USBStdSetCfgHandler,w
  6821  0727  0023               	movlb	3	; select bank3
  6822  0728  00E9               	movwf	_USBActiveConfiguration^(0+384)	;volatile
  6823                           
  6824                           ;usb_device.c: 2028: if(USBActiveConfiguration == 0)
  6825  0729  0869               	movf	_USBActiveConfiguration^(0+384),w	;volatile
  6826  072A  1D03               	btfss	3,2
  6827  072B  2F33               	goto	i1l4785
  6828                           
  6829                           ;usb_device.c: 2029: {
  6830                           ;usb_device.c: 2031: USBDeviceState = ADDRESS_STATE;
  6831  072C  3010               	movlw	16
  6832  072D  0020               	movlb	0	; select bank0
  6833  072E  00E8               	movwf	??_USBStdSetCfgHandler
  6834  072F  0868               	movf	??_USBStdSetCfgHandler,w
  6835  0730  0023               	movlb	3	; select bank3
  6836  0731  00C9               	movwf	_USBDeviceState^(0+384)	;volatile
  6837                           
  6838                           ;usb_device.c: 2032: }
  6839  0732  0008               	return
  6840  0733                     i1l4785:	
  6841                           
  6842                           ;usb_device.c: 2033: else
  6843                           ;usb_device.c: 2034: {
  6844                           ;usb_device.c: 2036: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  6845  0733  3000               	movlw	0
  6846  0734  0020               	movlb	0	; select bank0
  6847  0735  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6848  0736  3001               	movlw	1
  6849  0737  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6850  0738  30E9               	movlw	low _USBActiveConfiguration
  6851  0739  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6852  073A  3001               	movlw	high _USBActiveConfiguration
  6853  073B  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  6854  073C  3001               	movlw	1
  6855  073D  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6856  073E  3000               	movlw	0
  6857  073F  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6858  0740  318A  22EE         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6859                           
  6860                           ;usb_device.c: 2041: USBDeviceState = CONFIGURED_STATE;
  6861  0742  3020               	movlw	32
  6862  0743  0020               	movlb	0	; select bank0
  6863  0744  00E8               	movwf	??_USBStdSetCfgHandler
  6864  0745  0868               	movf	??_USBStdSetCfgHandler,w
  6865  0746  0023               	movlb	3	; select bank3
  6866  0747  00C9               	movwf	_USBDeviceState^(0+384)	;volatile
  6867  0748  0008               	return
  6868  0749                     __end_of_USBStdSetCfgHandler:	
  6869                           
  6870                           	psect	text26
  6871  0933                     __ptext26:	
  6872 ;; *************** function _memset *****************
  6873 ;; Defined at:
  6874 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\memset.c"
  6875 ;; Parameters:    Size  Location     Type
  6876 ;;  p1              2    0[COMMON] PTR void 
  6877 ;;		 -> USBAlternateInterface(2), BDT(48), 
  6878 ;;  c               2    2[COMMON] int 
  6879 ;;  n               2    4[COMMON] unsigned int 
  6880 ;; Auto vars:     Size  Location     Type
  6881 ;;  p               2    6[COMMON] PTR unsigned char 
  6882 ;;		 -> USBAlternateInterface(2), BDT(48), 
  6883 ;; Return value:  Size  Location     Type
  6884 ;;                  2    0[COMMON] PTR void 
  6885 ;; Registers used:
  6886 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6887 ;; Tracked objects:
  6888 ;;		On entry : 0/0
  6889 ;;		On exit  : 0/0
  6890 ;;		Unchanged: 0/0
  6891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6892 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6893 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6895 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6896 ;;Total ram usage:        8 bytes
  6897 ;; Hardware stack levels used:    1
  6898 ;; This function calls:
  6899 ;;		Nothing
  6900 ;; This function is called by:
  6901 ;;		_USBStdSetCfgHandler
  6902 ;; This function uses a non-reentrant model
  6903 ;;
  6904                           
  6905                           
  6906                           ;psect for function _memset
  6907  0933                     _memset:	
  6908                           
  6909                           ;incstack = 0
  6910                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  6911  0933  0870               	movf	memset@p1,w
  6912  0934  00F6               	movwf	memset@p
  6913  0935  0871               	movf	memset@p1+1,w
  6914  0936  00F7               	movwf	memset@p+1
  6915  0937                     i1l4675:	
  6916  0937  3001               	movlw	1
  6917  0938  02F4               	subwf	memset@n,f
  6918  0939  3000               	movlw	0
  6919  093A  3BF5               	subwfb	memset@n+1,f
  6920  093B  0A74               	incf	memset@n,w
  6921  093C  1903               	btfsc	3,2
  6922  093D  0A75               	incf	memset@n+1,w
  6923  093E  1903               	btfsc	3,2
  6924  093F  0008               	return
  6925  0940  0876               	movf	memset@p,w
  6926  0941  0086               	movwf	6
  6927  0942  0877               	movf	memset@p+1,w
  6928  0943  0087               	movwf	7
  6929  0944  0872               	movf	memset@c,w
  6930  0945  0081               	movwf	1
  6931  0946  3001               	movlw	1
  6932  0947  07F6               	addwf	memset@p,f
  6933  0948  3000               	movlw	0
  6934  0949  3DF7               	addwfc	memset@p+1,f
  6935  094A  2937               	goto	i1l4675
  6936  094B                     __end_of_memset:	
  6937                           ;	Return value of _memset is never used
  6938                           
  6939                           
  6940                           	psect	text27
  6941  0B64                     __ptext27:	
  6942 ;; *************** function _USBStdGetStatusHandler *****************
  6943 ;; Defined at:
  6944 ;;		line 2148 in file "../../../../../../framework/usb/src/usb_device.c"
  6945 ;; Parameters:    Size  Location     Type
  6946 ;;		None
  6947 ;; Auto vars:     Size  Location     Type
  6948 ;;  p               1    1[COMMON] PTR struct __BDT
  6949 ;;		 -> NULL(0), BDT(48), 
  6950 ;; Return value:  Size  Location     Type
  6951 ;;		None               void
  6952 ;; Registers used:
  6953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6954 ;; Tracked objects:
  6955 ;;		On entry : 0/0
  6956 ;;		On exit  : 0/0
  6957 ;;		Unchanged: 0/0
  6958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6960 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6961 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6962 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6963 ;;Total ram usage:        2 bytes
  6964 ;; Hardware stack levels used:    1
  6965 ;; This function calls:
  6966 ;;		Nothing
  6967 ;; This function is called by:
  6968 ;;		_USBCheckStdRequest
  6969 ;; This function uses a non-reentrant model
  6970 ;;
  6971                           
  6972                           
  6973                           ;psect for function _USBStdGetStatusHandler
  6974  0B64                     _USBStdGetStatusHandler:	
  6975                           
  6976                           ;usb_device.c: 2150: CtrlTrfData[0] = 0;
  6977                           
  6978                           ;incstack = 0
  6979                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  6980  0B64  0020               	movlb	0	; select bank0
  6981  0B65  01D8               	clrf	88	;volatile
  6982                           
  6983                           ;usb_device.c: 2151: CtrlTrfData[1] = 0;
  6984  0B66  01D9               	clrf	89	;volatile
  6985                           
  6986                           ;usb_device.c: 2153: switch(SetupPkt.Recipient)
  6987  0B67  2B96               	goto	i1l4841
  6988  0B68                     i1l547:	
  6989                           ;usb_device.c: 2154: {
  6990                           ;usb_device.c: 2155: case (0x00):
  6991                           
  6992                           
  6993                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  6994  0B68  0021               	movlb	1	; select bank1
  6995  0B69  17EC               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6996                           
  6997                           ;usb_device.c: 2164: }
  6998                           ;usb_device.c: 2166: if(RemoteWakeup == 1)
  6999                           
  7000                           ;usb_device.c: 2162: {
  7001                           ;usb_device.c: 2163: CtrlTrfData[0]|=0x01;
  7002                           
  7003                           ;usb_device.c: 2161: if(0 == 1)
  7004  0B6A  0023               	movlb	3	; select bank3
  7005  0B6B  0344               	decf	_RemoteWakeup^(0+384),w	;volatile
  7006  0B6C  1D03               	btfss	3,2
  7007  0B6D  2BA2               	goto	i1l550
  7008                           
  7009                           ;usb_device.c: 2167: {
  7010                           ;usb_device.c: 2168: CtrlTrfData[0]|=0x02;
  7011  0B6E  0020               	movlb	0	; select bank0
  7012  0B6F  14D8               	bsf	88,1	;volatile
  7013                           
  7014                           ;usb_device.c: 2169: }
  7015                           ;usb_device.c: 2170: break;
  7016  0B70  2BA2               	goto	i1l550
  7017  0B71                     i1l551:	
  7018                           ;usb_device.c: 2171: case (0x01):
  7019                           
  7020                           
  7021                           ;usb_device.c: 2172: inPipes[0].info.bits.busy = 1;
  7022  0B71  0021               	movlb	1	; select bank1
  7023  0B72  17EC               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7024                           
  7025                           ;usb_device.c: 2173: break;
  7026  0B73  2BA2               	goto	i1l550
  7027  0B74                     i1l552:	
  7028                           ;usb_device.c: 2174: case (0x02):
  7029                           
  7030                           
  7031                           ;usb_device.c: 2175: inPipes[0].info.bits.busy = 1;
  7032  0B74  0021               	movlb	1	; select bank1
  7033  0B75  17EC               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7034                           
  7035                           ;usb_device.c: 2179: {
  7036                           ;usb_device.c: 2180: BDT_ENTRY *p;
  7037                           ;usb_device.c: 2182: if(SetupPkt.EPDir == 0)
  7038  0B76  0020               	movlb	0	; select bank0
  7039  0B77  1BD4               	btfsc	84,7	;volatile
  7040  0B78  2B7D               	goto	i1l4831
  7041                           
  7042                           ;usb_device.c: 2183: {
  7043                           ;usb_device.c: 2184: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7044  0B79  0854               	movf	84,w	;volatile
  7045  0B7A  390F               	andlw	15
  7046  0B7B  3EB8               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7047  0B7C  2B80               	goto	L8
  7048  0B7D                     i1l4831:	
  7049                           ;usb_device.c: 2185: }
  7050                           
  7051                           
  7052                           ;usb_device.c: 2186: else
  7053                           ;usb_device.c: 2187: {
  7054                           ;usb_device.c: 2188: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7055  0B7D  0854               	movf	84,w	;volatile
  7056  0B7E  390F               	andlw	15
  7057  0B7F  3EB5               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7058  0B80                     L8:	
  7059  0B80  0086               	movwf	6
  7060  0B81  3001               	movlw	1	; select bank3/4
  7061  0B82  0087               	movwf	7
  7062  0B83  0801               	movf	1,w
  7063  0B84  00F0               	movwf	??_USBStdGetStatusHandler
  7064  0B85  0870               	movf	??_USBStdGetStatusHandler,w
  7065  0B86  00F1               	movwf	USBStdGetStatusHandler@p
  7066                           
  7067                           ;usb_device.c: 2189: }
  7068                           ;usb_device.c: 2191: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  7069  0B87  0871               	movf	USBStdGetStatusHandler@p,w
  7070  0B88  0086               	movwf	6
  7071  0B89  0187               	clrf	7
  7072  0B8A  1F81               	btfss	1,7
  7073  0B8B  2BA2               	goto	i1l550
  7074  0B8C  0871               	movf	USBStdGetStatusHandler@p,w
  7075  0B8D  0086               	movwf	6
  7076  0B8E  0187               	clrf	7
  7077  0B8F  1D01               	btfss	1,2
  7078  0B90  2BA2               	goto	i1l550
  7079                           
  7080                           ;usb_device.c: 2192: CtrlTrfData[0]=0x01;
  7081  0B91  3001               	movlw	1
  7082  0B92  00F0               	movwf	??_USBStdGetStatusHandler
  7083  0B93  0870               	movf	??_USBStdGetStatusHandler,w
  7084  0B94  00D8               	movwf	88	;volatile
  7085                           
  7086                           ;usb_device.c: 2194: }
  7087                           ;usb_device.c: 2195: }
  7088                           
  7089                           ;usb_device.c: 2193: break;
  7090  0B95  2BA2               	goto	i1l550
  7091  0B96                     i1l4841:	
  7092  0B96  0850               	movf	80,w	;volatile
  7093  0B97  391F               	andlw	31
  7094                           
  7095                           ; Switch size 1, requested type "space"
  7096                           ; Number of cases is 3, Range of values is 0 to 2
  7097                           ; switch strategies available:
  7098                           ; Name         Instructions Cycles
  7099                           ; simple_byte           10     6 (average)
  7100                           ; direct_byte           12     6 (fixed)
  7101                           ; jumptable            260     6 (fixed)
  7102                           ;	Chosen strategy is simple_byte
  7103  0B98  3A00               	xorlw	0	; case 0
  7104  0B99  1903               	skipnz
  7105  0B9A  2B68               	goto	i1l547
  7106  0B9B  3A01               	xorlw	1	; case 1
  7107  0B9C  1903               	skipnz
  7108  0B9D  2B71               	goto	i1l551
  7109  0B9E  3A03               	xorlw	3	; case 2
  7110  0B9F  1903               	skipnz
  7111  0BA0  2B74               	goto	i1l552
  7112  0BA1  2BA2               	goto	i1l550
  7113  0BA2                     i1l550:	
  7114                           
  7115                           ;usb_device.c: 2197: if(inPipes[0].info.bits.busy == 1)
  7116  0BA2  0021               	movlb	1	; select bank1
  7117  0BA3  1FEC               	btfss	(_inPipes^(0+128)+2),7	;volatile
  7118  0BA4  0008               	return
  7119                           
  7120                           ;usb_device.c: 2198: {
  7121                           ;usb_device.c: 2199: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  7122  0BA5  3058               	movlw	88
  7123  0BA6  00EA               	movwf	_inPipes^(0+128)	;volatile
  7124  0BA7  3000               	movlw	0
  7125  0BA8  00EB               	movwf	(_inPipes+1)^(0+128)	;volatile
  7126                           
  7127                           ;usb_device.c: 2200: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7128  0BA9  146C               	bsf	(_inPipes^(0+128)+2),0	;volatile
  7129                           
  7130                           ;usb_device.c: 2201: inPipes[0].wCount.v[0] = 2;
  7131  0BAA  3002               	movlw	2
  7132  0BAB  00F0               	movwf	??_USBStdGetStatusHandler
  7133  0BAC  0870               	movf	??_USBStdGetStatusHandler,w
  7134  0BAD  00ED               	movwf	(_inPipes^(0+128)+3)	;volatile
  7135  0BAE  0008               	return
  7136  0BAF                     __end_of_USBStdGetStatusHandler:	
  7137                           
  7138                           	psect	text28
  7139  0308                     __ptext28:	
  7140 ;; *************** function _USBStdGetDscHandler *****************
  7141 ;; Defined at:
  7142 ;;		line 2062 in file "../../../../../../framework/usb/src/usb_device.c"
  7143 ;; Parameters:    Size  Location     Type
  7144 ;;		None
  7145 ;; Auto vars:     Size  Location     Type
  7146 ;;		None
  7147 ;; Return value:  Size  Location     Type
  7148 ;;		None               void
  7149 ;; Registers used:
  7150 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7151 ;; Tracked objects:
  7152 ;;		On entry : 0/0
  7153 ;;		On exit  : 0/0
  7154 ;;		Unchanged: 0/0
  7155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7158 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7159 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7160 ;;Total ram usage:        3 bytes
  7161 ;; Hardware stack levels used:    1
  7162 ;; This function calls:
  7163 ;;		Nothing
  7164 ;; This function is called by:
  7165 ;;		_USBCheckStdRequest
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169                           
  7170                           ;psect for function _USBStdGetDscHandler
  7171  0308                     _USBStdGetDscHandler:	
  7172                           
  7173                           ;usb_device.c: 2064: if(SetupPkt.bmRequestType == 0x80)
  7174                           
  7175                           ;incstack = 0
  7176                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  7177  0308  3080               	movlw	128
  7178  0309  0020               	movlb	0	; select bank0
  7179  030A  0650               	xorwf	80,w	;volatile
  7180  030B  1D03               	btfss	3,2
  7181  030C  0008               	return
  7182                           
  7183                           ;usb_device.c: 2065: {
  7184                           ;usb_device.c: 2066: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  7185  030D  30C0               	movlw	192
  7186  030E  00F0               	movwf	??_USBStdGetDscHandler
  7187  030F  0870               	movf	??_USBStdGetDscHandler,w
  7188  0310  0021               	movlb	1	; select bank1
  7189  0311  00EC               	movwf	(_inPipes^(0+128)+2)	;volatile
  7190                           
  7191                           ;usb_device.c: 2068: switch(SetupPkt.bDescriptorType)
  7192  0312  2B7A               	goto	i1l4819
  7193  0313                     i1l4793:	
  7194                           ;usb_device.c: 2069: {
  7195                           ;usb_device.c: 2070: case 0x01:
  7196                           
  7197                           
  7198                           ;usb_device.c: 2074: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  7199  0313  30B3               	movlw	low (_device_dsc| (0+32768))
  7200  0314  0021               	movlb	1	; select bank1
  7201  0315  00EA               	movwf	_inPipes^(0+128)	;volatile
  7202  0316  3084               	movlw	high (_device_dsc| (0+32768))
  7203  0317  00EB               	movwf	(_inPipes^(0+128)+1)	;volatile
  7204                           
  7205                           ;usb_device.c: 2076: inPipes[0].wCount.Val = sizeof(device_dsc);
  7206  0318  3000               	movlw	0
  7207  0319  00EE               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  7208  031A  3012               	movlw	18
  7209  031B  00ED               	movwf	(_inPipes^(0+128)+3)	;volatile
  7210                           
  7211                           ;usb_device.c: 2077: break;
  7212  031C  0008               	return
  7213  031D                     i1l4797:	
  7214                           ;usb_device.c: 2078: case 0x02:
  7215                           
  7216                           
  7217                           ;usb_device.c: 2082: if(SetupPkt.bDscIndex < 1)
  7218  031D  0020               	movlb	0	; select bank0
  7219  031E  0852               	movf	82,w	;volatile
  7220  031F  1D03               	btfss	3,2
  7221  0320  2B50               	goto	i1l4805
  7222                           
  7223                           ;usb_device.c: 2083: {
  7224                           ;usb_device.c: 2087: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  7225  0321  0852               	movf	82,w	;volatile
  7226  0322  00F0               	movwf	??_USBStdGetDscHandler
  7227  0323  01F1               	clrf	??_USBStdGetDscHandler+1
  7228  0324  35F0               	lslf	??_USBStdGetDscHandler,f
  7229  0325  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  7230  0326  3006               	movlw	low (_USB_CD_Ptr| (0+32768))
  7231  0327  0770               	addwf	??_USBStdGetDscHandler,w
  7232  0328  0084               	movwf	4
  7233  0329  3084               	movlw	high (_USB_CD_Ptr| (0+32768))
  7234  032A  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  7235  032B  0085               	movwf	5
  7236  032C  3F00               	moviw [0]fsr0
  7237  032D  0021               	movlb	1	; select bank1
  7238  032E  00EA               	movwf	_inPipes^(0+128)	;volatile
  7239  032F  3F01               	moviw [1]fsr0
  7240  0330  00EB               	movwf	(_inPipes+1)^(0+128)	;volatile
  7241                           
  7242                           ;usb_device.c: 2093: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  7243  0331  086B               	movf	(_inPipes+1)^(0+128),w	;volatile
  7244  0332  00F1               	movwf	??_USBStdGetDscHandler+1
  7245  0333  086A               	movf	_inPipes^(0+128),w	;volatile
  7246  0334  00F0               	movwf	??_USBStdGetDscHandler
  7247  0335  3002               	movlw	2
  7248  0336  0770               	addwf	??_USBStdGetDscHandler,w
  7249  0337  0084               	movwf	4
  7250  0338  0871               	movf	??_USBStdGetDscHandler+1,w
  7251  0339  1803               	skipnc
  7252  033A  0A71               	incf	??_USBStdGetDscHandler+1,w
  7253  033B  0085               	movwf	5
  7254  033C  0800               	movf	0,w	;code access
  7255  033D  00F2               	movwf	??_USBStdGetDscHandler+2
  7256  033E  0872               	movf	??_USBStdGetDscHandler+2,w
  7257  033F  00ED               	movwf	(_inPipes^(0+128)+3)	;volatile
  7258                           
  7259                           ;usb_device.c: 2094: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  7260  0340  086B               	movf	(_inPipes+1)^(0+128),w	;volatile
  7261  0341  00F1               	movwf	??_USBStdGetDscHandler+1
  7262  0342  086A               	movf	_inPipes^(0+128),w	;volatile
  7263  0343  00F0               	movwf	??_USBStdGetDscHandler
  7264  0344  3003               	movlw	3
  7265  0345  0770               	addwf	??_USBStdGetDscHandler,w
  7266  0346  0084               	movwf	4
  7267  0347  0871               	movf	??_USBStdGetDscHandler+1,w
  7268  0348  1803               	skipnc
  7269  0349  0A71               	incf	??_USBStdGetDscHandler+1,w
  7270  034A  0085               	movwf	5
  7271  034B  0800               	movf	0,w	;code access
  7272  034C  00F2               	movwf	??_USBStdGetDscHandler+2
  7273  034D  0872               	movf	??_USBStdGetDscHandler+2,w
  7274  034E  00EE               	movwf	(_inPipes^(0+128)+4)	;volatile
  7275                           
  7276                           ;usb_device.c: 2095: }
  7277  034F  0008               	return
  7278  0350                     i1l4805:	
  7279                           
  7280                           ;usb_device.c: 2096: else
  7281                           ;usb_device.c: 2097: {
  7282                           ;usb_device.c: 2098: inPipes[0].info.Val = 0;
  7283  0350  0021               	movlb	1	; select bank1
  7284  0351  01EC               	clrf	(_inPipes^(0+128)+2)	;volatile
  7285                           
  7286                           ;usb_device.c: 2099: }
  7287                           ;usb_device.c: 2100: break;
  7288  0352  0008               	return
  7289  0353                     i1l4807:	
  7290                           ;usb_device.c: 2101: case 0x03:
  7291                           
  7292                           
  7293                           ;usb_device.c: 2105: if(SetupPkt.bDscIndex<3)
  7294  0353  3003               	movlw	3
  7295  0354  0020               	movlb	0	; select bank0
  7296  0355  0252               	subwf	82,w	;volatile
  7297  0356  1803               	skipnc
  7298  0357  2B74               	goto	i1l4813
  7299                           
  7300                           ;usb_device.c: 2106: {
  7301                           ;usb_device.c: 2108: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  7302  0358  0852               	movf	82,w	;volatile
  7303  0359  00F0               	movwf	??_USBStdGetDscHandler
  7304  035A  01F1               	clrf	??_USBStdGetDscHandler+1
  7305  035B  35F0               	lslf	??_USBStdGetDscHandler,f
  7306  035C  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  7307  035D  3000               	movlw	low (_USB_SD_Ptr| (0+32768))
  7308  035E  0770               	addwf	??_USBStdGetDscHandler,w
  7309  035F  0084               	movwf	4
  7310  0360  3084               	movlw	high (_USB_SD_Ptr| (0+32768))
  7311  0361  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  7312  0362  0085               	movwf	5
  7313  0363  3F00               	moviw [0]fsr0
  7314  0364  0021               	movlb	1	; select bank1
  7315  0365  00EA               	movwf	_inPipes^(0+128)	;volatile
  7316  0366  3F01               	moviw [1]fsr0
  7317  0367  00EB               	movwf	(_inPipes+1)^(0+128)	;volatile
  7318                           
  7319                           ;usb_device.c: 2110: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  7320  0368  086A               	movf	_inPipes^(0+128),w	;volatile
  7321  0369  0084               	movwf	4
  7322  036A  086B               	movf	(_inPipes+1)^(0+128),w	;volatile
  7323  036B  0085               	movwf	5
  7324  036C  0800               	movf	0,w	;code access
  7325  036D  00F0               	movwf	??_USBStdGetDscHandler
  7326  036E  01F1               	clrf	??_USBStdGetDscHandler+1
  7327  036F  0870               	movf	??_USBStdGetDscHandler,w
  7328  0370  00ED               	movwf	(_inPipes^(0+128)+3)	;volatile
  7329  0371  0871               	movf	??_USBStdGetDscHandler+1,w
  7330  0372  00EE               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  7331                           
  7332                           ;usb_device.c: 2111: }
  7333  0373  0008               	return
  7334  0374                     i1l4813:	
  7335                           
  7336                           ;usb_device.c: 2121: else
  7337                           ;usb_device.c: 2122: {
  7338                           ;usb_device.c: 2123: inPipes[0].info.Val = 0;
  7339  0374  0021               	movlb	1	; select bank1
  7340  0375  01EC               	clrf	(_inPipes^(0+128)+2)	;volatile
  7341                           
  7342                           ;usb_device.c: 2124: }
  7343                           ;usb_device.c: 2125: break;
  7344  0376  0008               	return
  7345  0377                     i1l4815:	
  7346                           ;usb_device.c: 2126: default:
  7347                           
  7348                           
  7349                           ;usb_device.c: 2127: inPipes[0].info.Val = 0;
  7350  0377  0021               	movlb	1	; select bank1
  7351  0378  01EC               	clrf	(_inPipes^(0+128)+2)	;volatile
  7352                           
  7353                           ;usb_device.c: 2129: }
  7354                           
  7355                           ;usb_device.c: 2128: break;
  7356  0379  0008               	return
  7357  037A                     i1l4819:	
  7358  037A  0020               	movlb	0	; select bank0
  7359  037B  0853               	movf	83,w	;volatile
  7360                           
  7361                           ; Switch size 1, requested type "space"
  7362                           ; Number of cases is 3, Range of values is 1 to 3
  7363                           ; switch strategies available:
  7364                           ; Name         Instructions Cycles
  7365                           ; simple_byte           10     6 (average)
  7366                           ; direct_byte           15     9 (fixed)
  7367                           ; jumptable            263     9 (fixed)
  7368                           ;	Chosen strategy is simple_byte
  7369  037C  3A01               	xorlw	1	; case 1
  7370  037D  1903               	skipnz
  7371  037E  2B13               	goto	i1l4793
  7372  037F  3A03               	xorlw	3	; case 2
  7373  0380  1903               	skipnz
  7374  0381  2B1D               	goto	i1l4797
  7375  0382  3A01               	xorlw	1	; case 3
  7376  0383  1903               	skipnz
  7377  0384  2B53               	goto	i1l4807
  7378  0385  2B77               	goto	i1l4815
  7379  0386  0008               	return
  7380  0387                     __end_of_USBStdGetDscHandler:	
  7381                           
  7382                           	psect	text29
  7383  0048                     __ptext29:	
  7384 ;; *************** function _USBStdFeatureReqHandler *****************
  7385 ;; Defined at:
  7386 ;;		line 2779 in file "../../../../../../framework/usb/src/usb_device.c"
  7387 ;; Parameters:    Size  Location     Type
  7388 ;;		None
  7389 ;; Auto vars:     Size  Location     Type
  7390 ;;  pUEP            2   10[BANK0 ] PTR unsigned char 
  7391 ;;		 -> UEP0(1), 
  7392 ;;  p               1   13[BANK0 ] PTR struct __BDT
  7393 ;;		 -> NULL(0), BDT(48), 
  7394 ;;  current_ep_d    1   12[BANK0 ] struct .
  7395 ;; Return value:  Size  Location     Type
  7396 ;;		None               void
  7397 ;; Registers used:
  7398 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7399 ;; Tracked objects:
  7400 ;;		On entry : 0/0
  7401 ;;		On exit  : 0/0
  7402 ;;		Unchanged: 0/0
  7403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7405 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7406 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7407 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7408 ;;Total ram usage:        6 bytes
  7409 ;; Hardware stack levels used:    1
  7410 ;; Hardware stack levels required when called:    5
  7411 ;; This function calls:
  7412 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7413 ;; This function is called by:
  7414 ;;		_USBCheckStdRequest
  7415 ;; This function uses a non-reentrant model
  7416 ;;
  7417                           
  7418                           
  7419                           ;psect for function _USBStdFeatureReqHandler
  7420  0048                     _USBStdFeatureReqHandler:	
  7421                           
  7422                           ;usb_device.c: 2781: BDT_ENTRY *p;
  7423                           ;usb_device.c: 2782: EP_STATUS current_ep_data;
  7424                           ;usb_device.c: 2786: unsigned char* pUEP;
  7425                           ;usb_device.c: 2824: if((SetupPkt.bFeature == 1)&&
  7426                           ;usb_device.c: 2825: (SetupPkt.Recipient == (0x00)))
  7427                           
  7428                           ;incstack = 0
  7429                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7430  0048  0020               	movlb	0	; select bank0
  7431  0049  0352               	decf	82,w	;volatile
  7432  004A  1D03               	btfss	3,2
  7433  004B  2860               	goto	i1l4861
  7434  004C  0850               	movf	80,w	;volatile
  7435  004D  391F               	andlw	31
  7436  004E  3A00               	xorlw	0
  7437  004F  1D03               	skipz
  7438  0050  2860               	goto	i1l4861
  7439                           
  7440                           ;usb_device.c: 2826: {
  7441                           ;usb_device.c: 2827: inPipes[0].info.bits.busy = 1;
  7442  0051  0021               	movlb	1	; select bank1
  7443  0052  17EC               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7444                           
  7445                           ;usb_device.c: 2828: if(SetupPkt.bRequest == 3)
  7446  0053  3003               	movlw	3
  7447  0054  0020               	movlb	0	; select bank0
  7448  0055  0651               	xorwf	81,w	;volatile
  7449  0056  1D03               	btfss	3,2
  7450  0057  285E               	goto	i1l4859
  7451                           
  7452                           ;usb_device.c: 2829: RemoteWakeup = 1;
  7453  0058  3001               	movlw	1
  7454  0059  00E8               	movwf	??_USBStdFeatureReqHandler
  7455  005A  0868               	movf	??_USBStdFeatureReqHandler,w
  7456  005B  0023               	movlb	3	; select bank3
  7457  005C  00C4               	movwf	_RemoteWakeup^(0+384)	;volatile
  7458  005D  2860               	goto	i1l4861
  7459  005E                     i1l4859:	
  7460                           
  7461                           ;usb_device.c: 2830: else
  7462                           ;usb_device.c: 2831: RemoteWakeup = 0;
  7463  005E  0023               	movlb	3	; select bank3
  7464  005F  01C4               	clrf	_RemoteWakeup^(0+384)	;volatile
  7465  0060                     i1l4861:	
  7466                           
  7467                           ;usb_device.c: 2832: }
  7468                           ;usb_device.c: 2835: if((SetupPkt.bFeature == 0)&&
  7469                           ;usb_device.c: 2836: (SetupPkt.Recipient == (0x02))&&
  7470                           ;usb_device.c: 2837: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  7471                           ;usb_device.c: 2838: (USBDeviceState == CONFIGURED_STATE))
  7472  0060  0020               	movlb	0	; select bank0
  7473  0061  0852               	movf	82,w	;volatile
  7474  0062  1D03               	btfss	3,2
  7475  0063  0008               	return
  7476  0064  0850               	movf	80,w	;volatile
  7477  0065  391F               	andlw	31
  7478  0066  3A02               	xorlw	2
  7479  0067  1D03               	skipz
  7480  0068  0008               	return
  7481  0069  0854               	movf	84,w	;volatile
  7482  006A  390F               	andlw	15
  7483  006B  3A00               	xorlw	0
  7484  006C  1903               	skipnz
  7485  006D  0008               	return
  7486  006E  0854               	movf	84,w	;volatile
  7487  006F  390F               	andlw	15
  7488  0070  00E8               	movwf	??_USBStdFeatureReqHandler
  7489  0071  3003               	movlw	3
  7490  0072  0268               	subwf	??_USBStdFeatureReqHandler,w
  7491  0073  1803               	skipnc
  7492  0074  0008               	return
  7493  0075  3020               	movlw	32
  7494  0076  0023               	movlb	3	; select bank3
  7495  0077  0649               	xorwf	_USBDeviceState^(0+384),w	;volatile
  7496  0078  1D03               	btfss	3,2
  7497  0079  0008               	return
  7498                           
  7499                           ;usb_device.c: 2839: {
  7500                           ;usb_device.c: 2842: inPipes[0].info.bits.busy = 1;
  7501  007A  0021               	movlb	1	; select bank1
  7502  007B  17EC               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7503                           
  7504                           ;usb_device.c: 2845: if(SetupPkt.EPDir == 0)
  7505  007C  0020               	movlb	0	; select bank0
  7506  007D  1BD4               	btfsc	84,7	;volatile
  7507  007E  288D               	goto	i1l4875
  7508                           
  7509                           ;usb_device.c: 2846: {
  7510                           ;usb_device.c: 2847: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7511  007F  0854               	movf	84,w	;volatile
  7512  0080  390F               	andlw	15
  7513  0081  3EB8               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7514  0082  0086               	movwf	6
  7515  0083  3001               	movlw	1	; select bank3/4
  7516  0084  0087               	movwf	7
  7517  0085  0801               	movf	1,w
  7518  0086  00E8               	movwf	??_USBStdFeatureReqHandler
  7519  0087  0868               	movf	??_USBStdFeatureReqHandler,w
  7520  0088  00ED               	movwf	USBStdFeatureReqHandler@p
  7521                           
  7522                           ;usb_device.c: 2848: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  7523  0089  0854               	movf	84,w	;volatile
  7524  008A  390F               	andlw	15
  7525  008B  3EB2               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  7526  008C  289A               	goto	L9
  7527  008D                     i1l4875:	
  7528                           ;usb_device.c: 2849: }
  7529                           
  7530                           
  7531                           ;usb_device.c: 2850: else
  7532                           ;usb_device.c: 2851: {
  7533                           ;usb_device.c: 2852: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7534  008D  0854               	movf	84,w	;volatile
  7535  008E  390F               	andlw	15
  7536  008F  3EB5               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7537  0090  0086               	movwf	6
  7538  0091  3001               	movlw	1	; select bank3/4
  7539  0092  0087               	movwf	7
  7540  0093  0801               	movf	1,w
  7541  0094  00E8               	movwf	??_USBStdFeatureReqHandler
  7542  0095  0868               	movf	??_USBStdFeatureReqHandler,w
  7543  0096  00ED               	movwf	USBStdFeatureReqHandler@p
  7544                           
  7545                           ;usb_device.c: 2853: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  7546  0097  0854               	movf	84,w	;volatile
  7547  0098  390F               	andlw	15
  7548  0099  3EAF               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  7549  009A                     L9:	
  7550  009A  0086               	movwf	6
  7551  009B  3001               	movlw	1	; select bank3/4
  7552  009C  0087               	movwf	7
  7553  009D  0801               	movf	1,w
  7554  009E  00E8               	movwf	??_USBStdFeatureReqHandler
  7555  009F  0868               	movf	??_USBStdFeatureReqHandler,w
  7556  00A0  00EC               	movwf	USBStdFeatureReqHandler@current_ep_data
  7557                           
  7558                           ;usb_device.c: 2854: }
  7559                           ;usb_device.c: 2860: if(current_ep_data.bits.ping_pong_state == 0)
  7560  00A1  186C               	btfsc	USBStdFeatureReqHandler@current_ep_data,0
  7561  00A2  28A8               	goto	i1l632
  7562                           
  7563                           ;usb_device.c: 2861: {
  7564                           ;usb_device.c: 2862: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
  7565  00A3  30FB               	movlw	251
  7566  00A4  00E8               	movwf	??_USBStdFeatureReqHandler
  7567  00A5  0868               	movf	??_USBStdFeatureReqHandler,w
  7568  00A6  05ED               	andwf	USBStdFeatureReqHandler@p,f
  7569                           
  7570                           ;usb_device.c: 2863: }
  7571  00A7  28A9               	goto	i1l633
  7572  00A8                     i1l632:	
  7573                           
  7574                           ;usb_device.c: 2864: else
  7575                           ;usb_device.c: 2865: {
  7576                           ;usb_device.c: 2866: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
  7577  00A8  156D               	bsf	USBStdFeatureReqHandler@p,2
  7578  00A9                     i1l633:	
  7579                           
  7580                           ;usb_device.c: 2867: }
  7581                           ;usb_device.c: 2872: if(SetupPkt.EPDir == 0)
  7582  00A9  1BD4               	btfsc	84,7	;volatile
  7583  00AA  28B1               	goto	i1l4883
  7584                           
  7585                           ;usb_device.c: 2873: {
  7586                           ;usb_device.c: 2874: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7587  00AB  086D               	movf	USBStdFeatureReqHandler@p,w
  7588  00AC  00E8               	movwf	??_USBStdFeatureReqHandler
  7589  00AD  0854               	movf	84,w	;volatile
  7590  00AE  390F               	andlw	15
  7591  00AF  3EB8               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7592  00B0  28B6               	goto	L10
  7593  00B1                     i1l4883:	
  7594                           ;usb_device.c: 2875: }
  7595                           
  7596                           
  7597                           ;usb_device.c: 2876: else
  7598                           ;usb_device.c: 2877: {
  7599                           ;usb_device.c: 2878: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7600  00B1  086D               	movf	USBStdFeatureReqHandler@p,w
  7601  00B2  00E8               	movwf	??_USBStdFeatureReqHandler
  7602  00B3  0854               	movf	84,w	;volatile
  7603  00B4  390F               	andlw	15
  7604  00B5  3EB5               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7605  00B6                     L10:	
  7606  00B6  0086               	movwf	6
  7607  00B7  3001               	movlw	1	; select bank3/4
  7608  00B8  0087               	movwf	7
  7609  00B9  0868               	movf	??_USBStdFeatureReqHandler,w
  7610  00BA  0081               	movwf	1
  7611                           
  7612                           ;usb_device.c: 2879: }
  7613                           ;usb_device.c: 2882: if(SetupPkt.bRequest == 3)
  7614  00BB  3003               	movlw	3
  7615  00BC  0651               	xorwf	81,w	;volatile
  7616  00BD  1D03               	btfss	3,2
  7617  00BE  28DA               	goto	i1l4899
  7618                           
  7619                           ;usb_device.c: 2883: {
  7620                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  7621  00BF  086D               	movf	USBStdFeatureReqHandler@p,w
  7622  00C0  0086               	movwf	6
  7623  00C1  0187               	clrf	7
  7624  00C2  1F81               	btfss	1,7
  7625  00C3  28D1               	goto	i1l4895
  7626                           
  7627                           ;usb_device.c: 2885: {
  7628                           ;usb_device.c: 2888: if(SetupPkt.EPDir == 0)
  7629  00C4  1BD4               	btfsc	84,7	;volatile
  7630  00C5  28CA               	goto	i1l4893
  7631                           
  7632                           ;usb_device.c: 2889: {
  7633                           ;usb_device.c: 2890: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7634  00C6  0854               	movf	84,w	;volatile
  7635  00C7  390F               	andlw	15
  7636  00C8  3EB2               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  7637  00C9  28CD               	goto	L11
  7638  00CA                     i1l4893:	
  7639                           ;usb_device.c: 2891: }
  7640                           
  7641                           
  7642                           ;usb_device.c: 2892: else
  7643                           ;usb_device.c: 2893: {
  7644                           ;usb_device.c: 2894: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7645  00CA  0854               	movf	84,w	;volatile
  7646  00CB  390F               	andlw	15
  7647  00CC  3EAF               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  7648  00CD                     L11:	
  7649  00CD  0086               	movwf	6
  7650  00CE  3001               	movlw	1	; select bank3/4
  7651  00CF  0087               	movwf	7
  7652  00D0  1481               	bsf	1,1
  7653  00D1                     i1l4895:	
  7654                           
  7655                           ;usb_device.c: 2895: }
  7656                           ;usb_device.c: 2896: }
  7657                           ;usb_device.c: 2899: p->STAT.Val |= 0x04;
  7658  00D1  086D               	movf	USBStdFeatureReqHandler@p,w
  7659  00D2  0086               	movwf	6
  7660  00D3  0187               	clrf	7
  7661  00D4  1501               	bsf	1,2
  7662                           
  7663                           ;usb_device.c: 2900: p->STAT.Val |= 0x80;
  7664  00D5  086D               	movf	USBStdFeatureReqHandler@p,w
  7665  00D6  0086               	movwf	6
  7666  00D7  0187               	clrf	7
  7667  00D8  1781               	bsf	1,7
  7668                           
  7669                           ;usb_device.c: 2901: }
  7670  00D9  0008               	return
  7671  00DA                     i1l4899:	
  7672                           
  7673                           ;usb_device.c: 2902: else
  7674                           ;usb_device.c: 2903: {
  7675                           ;usb_device.c: 2907: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  7676  00DA  3004               	movlw	4
  7677  00DB  00E8               	movwf	??_USBStdFeatureReqHandler
  7678  00DC  0868               	movf	??_USBStdFeatureReqHandler,w
  7679  00DD  06ED               	xorwf	USBStdFeatureReqHandler@p,f
  7680                           
  7681                           ;usb_device.c: 2909: if(p->STAT.UOWN == 1)
  7682  00DE  086D               	movf	USBStdFeatureReqHandler@p,w
  7683  00DF  0086               	movwf	6
  7684  00E0  0187               	clrf	7
  7685  00E1  1F81               	btfss	1,7
  7686  00E2  28FE               	goto	i1l4909
  7687                           
  7688                           ;usb_device.c: 2910: {
  7689                           ;usb_device.c: 2913: p->STAT.Val &= (~0x80);
  7690  00E3  307F               	movlw	127
  7691  00E4  00E8               	movwf	??_USBStdFeatureReqHandler
  7692  00E5  086D               	movf	USBStdFeatureReqHandler@p,w
  7693  00E6  0086               	movwf	6
  7694  00E7  0187               	clrf	7
  7695  00E8  0868               	movf	??_USBStdFeatureReqHandler,w
  7696  00E9  0581               	andwf	1,f
  7697                           
  7698                           ;usb_device.c: 2914: p->STAT.Val |= 0x40;
  7699  00EA  086D               	movf	USBStdFeatureReqHandler@p,w
  7700  00EB  0086               	movwf	6
  7701  00EC  0187               	clrf	7
  7702  00ED  1701               	bsf	1,6
  7703                           
  7704                           ;usb_device.c: 2915: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7705  00EE  3000               	movlw	0
  7706  00EF  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  7707  00F0  3005               	movlw	5
  7708  00F1  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  7709  00F2  086D               	movf	USBStdFeatureReqHandler@p,w
  7710  00F3  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7711  00F4  3000               	movlw	0
  7712  00F5  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7713  00F6  3001               	movlw	1
  7714  00F7  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  7715  00F8  3000               	movlw	0
  7716  00F9  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  7717  00FA  318A  22EE  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7718                           
  7719                           ;usb_device.c: 2916: }
  7720  00FD  2903               	goto	i1l4911
  7721  00FE                     i1l4909:	
  7722                           
  7723                           ;usb_device.c: 2917: else
  7724                           ;usb_device.c: 2918: {
  7725                           ;usb_device.c: 2920: p->STAT.Val |= 0x40;
  7726  00FE  0020               	movlb	0	; select bank0
  7727  00FF  086D               	movf	USBStdFeatureReqHandler@p,w
  7728  0100  0086               	movwf	6
  7729  0101  0187               	clrf	7
  7730  0102  1701               	bsf	1,6
  7731  0103                     i1l4911:	
  7732                           
  7733                           ;usb_device.c: 2921: }
  7734                           ;usb_device.c: 2925: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  7735  0103  3004               	movlw	4
  7736  0104  0020               	movlb	0	; select bank0
  7737  0105  00E8               	movwf	??_USBStdFeatureReqHandler
  7738  0106  0868               	movf	??_USBStdFeatureReqHandler,w
  7739  0107  06ED               	xorwf	USBStdFeatureReqHandler@p,f
  7740                           
  7741                           ;usb_device.c: 2931: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  7742  0108  18EC               	btfsc	USBStdFeatureReqHandler@current_ep_data,1
  7743  0109  290F               	goto	i1l645
  7744  010A  086D               	movf	USBStdFeatureReqHandler@p,w
  7745  010B  0086               	movwf	6
  7746  010C  0187               	clrf	7
  7747  010D  1F81               	btfss	1,7
  7748  010E  2933               	goto	i1l4923
  7749  010F                     i1l645:	
  7750                           
  7751                           ;usb_device.c: 2932: {
  7752                           ;usb_device.c: 2933: if(SetupPkt.EPDir == 0)
  7753  010F  1BD4               	btfsc	84,7	;volatile
  7754  0110  2915               	goto	i1l4919
  7755                           
  7756                           ;usb_device.c: 2934: {
  7757                           ;usb_device.c: 2935: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7758  0111  0854               	movf	84,w	;volatile
  7759  0112  390F               	andlw	15
  7760  0113  3EB2               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  7761  0114  2918               	goto	L12
  7762  0115                     i1l4919:	
  7763                           ;usb_device.c: 2936: }
  7764                           
  7765                           
  7766                           ;usb_device.c: 2937: else
  7767                           ;usb_device.c: 2938: {
  7768                           ;usb_device.c: 2939: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7769  0115  0854               	movf	84,w	;volatile
  7770  0116  390F               	andlw	15
  7771  0117  3EAF               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  7772  0118                     L12:	
  7773  0118  0086               	movwf	6
  7774  0119  3001               	movlw	1	; select bank3/4
  7775  011A  0087               	movwf	7
  7776  011B  1081               	bcf	1,1
  7777                           
  7778                           ;usb_device.c: 2940: }
  7779                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7780  011C  303B               	movlw	59
  7781  011D  00E8               	movwf	??_USBStdFeatureReqHandler
  7782  011E  086D               	movf	USBStdFeatureReqHandler@p,w
  7783  011F  0086               	movwf	6
  7784  0120  0187               	clrf	7
  7785  0121  0868               	movf	??_USBStdFeatureReqHandler,w
  7786  0122  0581               	andwf	1,f
  7787                           
  7788                           ;usb_device.c: 2945: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7789  0123  3000               	movlw	0
  7790  0124  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  7791  0125  3005               	movlw	5
  7792  0126  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  7793  0127  086D               	movf	USBStdFeatureReqHandler@p,w
  7794  0128  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7795  0129  3000               	movlw	0
  7796  012A  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7797  012B  3001               	movlw	1
  7798  012C  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  7799  012D  3000               	movlw	0
  7800  012E  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  7801  012F  318A  22EE  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7802                           
  7803                           ;usb_device.c: 2946: }
  7804  0132  293B               	goto	i1l4925
  7805  0133                     i1l4923:	
  7806                           
  7807                           ;usb_device.c: 2947: else
  7808                           ;usb_device.c: 2948: {
  7809                           ;usb_device.c: 2950: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7810  0133  303B               	movlw	59
  7811  0134  0020               	movlb	0	; select bank0
  7812  0135  00E8               	movwf	??_USBStdFeatureReqHandler
  7813  0136  086D               	movf	USBStdFeatureReqHandler@p,w
  7814  0137  0086               	movwf	6
  7815  0138  0187               	clrf	7
  7816  0139  0868               	movf	??_USBStdFeatureReqHandler,w
  7817  013A  0581               	andwf	1,f
  7818  013B                     i1l4925:	
  7819                           
  7820                           ;usb_device.c: 2951: }
  7821                           ;usb_device.c: 2998: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  7822  013B  0020               	movlb	0	; select bank0
  7823  013C  0854               	movf	84,w	;volatile
  7824  013D  390F               	andlw	15
  7825  013E  3E98               	addlw	152
  7826  013F  00E8               	movwf	??_USBStdFeatureReqHandler
  7827  0140  01E9               	clrf	??_USBStdFeatureReqHandler+1
  7828  0141  300E               	movlw	14
  7829  0142  3DE9               	addwfc	??_USBStdFeatureReqHandler+1,f
  7830  0143  0868               	movf	??_USBStdFeatureReqHandler,w
  7831  0144  00EA               	movwf	USBStdFeatureReqHandler@pUEP
  7832  0145  0869               	movf	??_USBStdFeatureReqHandler+1,w
  7833  0146  00EB               	movwf	USBStdFeatureReqHandler@pUEP+1
  7834                           
  7835                           ;usb_device.c: 3002: *pUEP &= ~0x0001;
  7836  0147  30FE               	movlw	254
  7837  0148  00E8               	movwf	??_USBStdFeatureReqHandler
  7838  0149  086A               	movf	USBStdFeatureReqHandler@pUEP,w
  7839  014A  0086               	movwf	6
  7840  014B  086B               	movf	USBStdFeatureReqHandler@pUEP+1,w
  7841  014C  0087               	movwf	7
  7842  014D  0868               	movf	??_USBStdFeatureReqHandler,w
  7843  014E  0581               	andwf	1,f
  7844  014F  0008               	return
  7845  0150                     __end_of_USBStdFeatureReqHandler:	
  7846                           
  7847                           	psect	text30
  7848  0AEE                     __ptext30:	
  7849 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  7850 ;; Defined at:
  7851 ;;		line 105 in file "../src/main.c"
  7852 ;; Parameters:    Size  Location     Type
  7853 ;;  event           2    2[BANK0 ] enum E2691
  7854 ;;  pdata           2    4[BANK0 ] PTR void 
  7855 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
  7856 ;;  size            2    6[BANK0 ] unsigned int 
  7857 ;; Auto vars:     Size  Location     Type
  7858 ;;		None
  7859 ;; Return value:  Size  Location     Type
  7860 ;;                  1    wreg      unsigned char 
  7861 ;; Registers used:
  7862 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7863 ;; Tracked objects:
  7864 ;;		On entry : 0/0
  7865 ;;		On exit  : 0/0
  7866 ;;		Unchanged: 0/0
  7867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7868 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7871 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7872 ;;Total ram usage:        6 bytes
  7873 ;; Hardware stack levels used:    1
  7874 ;; Hardware stack levels required when called:    4
  7875 ;; This function calls:
  7876 ;;		_APP_DeviceCDCBasicDemoInitialize
  7877 ;;		_APP_LEDUpdateUSBStatus
  7878 ;;		_USBCheckCDCRequest
  7879 ;; This function is called by:
  7880 ;;		_USBDeviceTasks
  7881 ;;		_USBStdSetCfgHandler
  7882 ;;		_USBSuspend
  7883 ;;		_USBWakeFromSuspend
  7884 ;;		_USBCtrlTrfSetupHandler
  7885 ;;		_USBCheckStdRequest
  7886 ;;		_USBStdFeatureReqHandler
  7887 ;; This function uses a non-reentrant model
  7888 ;;
  7889                           
  7890                           
  7891                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  7892  0AEE                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  7893                           
  7894                           ;main.c: 107: switch( (int) event )
  7895                           
  7896                           ;incstack = 0
  7897                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  7898  0AEE  2AFE               	goto	i1l4619
  7899  0AEF                     i1l4607:	
  7900                           ;main.c: 112: case EVENT_SOF:
  7901                           
  7902                           ;main.c: 110: break;
  7903                           
  7904                           ;main.c: 108: {
  7905                           ;main.c: 109: case EVENT_TRANSFER:
  7906                           
  7907                           
  7908                           ;main.c: 115: APP_LEDUpdateUSBStatus();
  7909  0AEF  318B  23FB         	fcall	_APP_LEDUpdateUSBStatus
  7910                           
  7911                           ;main.c: 116: break;
  7912  0AF1  0008               	return
  7913  0AF2                     i1l4609:	
  7914                           ;main.c: 118: case EVENT_SUSPEND:
  7915                           
  7916                           
  7917                           ;main.c: 120: APP_LEDUpdateUSBStatus();
  7918  0AF2  318B  23FB         	fcall	_APP_LEDUpdateUSBStatus
  7919                           
  7920                           ;main.c: 121: break;
  7921  0AF4  0008               	return
  7922  0AF5                     i1l4611:	
  7923                           ;main.c: 123: case EVENT_RESUME:
  7924                           
  7925                           
  7926                           ;main.c: 125: APP_LEDUpdateUSBStatus();
  7927  0AF5  318B  23FB         	fcall	_APP_LEDUpdateUSBStatus
  7928                           
  7929                           ;main.c: 126: break;
  7930  0AF7  0008               	return
  7931  0AF8                     i1l4613:	
  7932                           ;main.c: 128: case EVENT_CONFIGURED:
  7933                           
  7934                           
  7935                           ;main.c: 131: APP_DeviceCDCBasicDemoInitialize();
  7936  0AF8  3188  20F3         	fcall	_APP_DeviceCDCBasicDemoInitialize
  7937                           
  7938                           ;main.c: 135: break;
  7939                           
  7940                           ;main.c: 134: case EVENT_SET_DESCRIPTOR:
  7941                           
  7942                           ;main.c: 132: break;
  7943  0AFA  0008               	return
  7944  0AFB                     i1l4615:	
  7945                           ;main.c: 137: case EVENT_EP0_REQUEST:
  7946                           
  7947                           
  7948                           ;main.c: 140: USBCheckCDCRequest();
  7949  0AFB  318D  2535         	fcall	_USBCheckCDCRequest
  7950                           
  7951                           ;main.c: 151: }
  7952                           
  7953                           ;main.c: 150: break;
  7954                           
  7955                           ;main.c: 149: default:
  7956                           
  7957                           ;main.c: 147: break;
  7958                           
  7959                           ;main.c: 146: case EVENT_TRANSFER_TERMINATED:
  7960                           
  7961                           ;main.c: 144: break;
  7962                           
  7963                           ;main.c: 143: case EVENT_BUS_ERROR:
  7964                           
  7965                           ;main.c: 141: break;
  7966  0AFD  0008               	return
  7967  0AFE                     i1l4619:	
  7968                           
  7969                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7970                           ; Switch size 1, requested type "space"
  7971                           ; Number of cases is 2, Range of values is 0 to 127
  7972                           ; switch strategies available:
  7973                           ; Name         Instructions Cycles
  7974                           ; simple_byte            7     4 (average)
  7975                           ; direct_byte          262     6 (fixed)
  7976                           ; jumptable            260     6 (fixed)
  7977                           ;	Chosen strategy is simple_byte
  7978  0AFE  0020               	movlb	0	; select bank0
  7979  0AFF  0863               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
  7980  0B00  3A00               	xorlw	0	; case 0
  7981  0B01  1903               	skipnz
  7982  0B02  2B07               	goto	i1l5827
  7983  0B03  3A7F               	xorlw	127	; case 127
  7984  0B04  1903               	skipnz
  7985  0B05  2B21               	goto	i1l5829
  7986  0B06  2B26               	goto	i1l130
  7987  0B07                     i1l5827:	
  7988                           
  7989                           ; Switch size 1, requested type "space"
  7990                           ; Number of cases is 8, Range of values is 1 to 117
  7991                           ; switch strategies available:
  7992                           ; Name         Instructions Cycles
  7993                           ; simple_byte           25    13 (average)
  7994                           ; direct_byte          243     9 (fixed)
  7995                           ; jumptable            263     9 (fixed)
  7996                           ;	Chosen strategy is simple_byte
  7997  0B07  0862               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  7998  0B08  3A01               	xorlw	1	; case 1
  7999  0B09  1903               	skipnz
  8000  0B0A  2AF8               	goto	i1l4613
  8001  0B0B  3A03               	xorlw	3	; case 2
  8002  0B0C  1903               	skipnz
  8003  0B0D  2B26               	goto	i1l130
  8004  0B0E  3A01               	xorlw	1	; case 3
  8005  0B0F  1903               	skipnz
  8006  0B10  2AFB               	goto	i1l4615
  8007  0B11  3A06               	xorlw	6	; case 5
  8008  0B12  1903               	skipnz
  8009  0B13  2B26               	goto	i1l130
  8010  0B14  3A77               	xorlw	119	; case 114
  8011  0B15  1903               	skipnz
  8012  0B16  2B26               	goto	i1l130
  8013  0B17  3A01               	xorlw	1	; case 115
  8014  0B18  1903               	skipnz
  8015  0B19  2AEF               	goto	i1l4607
  8016  0B1A  3A07               	xorlw	7	; case 116
  8017  0B1B  1903               	skipnz
  8018  0B1C  2AF5               	goto	i1l4611
  8019  0B1D  3A01               	xorlw	1	; case 117
  8020  0B1E  1903               	skipnz
  8021  0B1F  2AF2               	goto	i1l4609
  8022  0B20  2B26               	goto	i1l130
  8023  0B21                     i1l5829:	
  8024                           
  8025                           ; Switch size 1, requested type "space"
  8026                           ; Number of cases is 1, Range of values is 255 to 255
  8027                           ; switch strategies available:
  8028                           ; Name         Instructions Cycles
  8029                           ; simple_byte            4     3 (average)
  8030                           ; direct_byte            7     5 (fixed)
  8031                           ; jumptable            263     9 (fixed)
  8032                           ;	Chosen strategy is simple_byte
  8033  0B21  0862               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  8034  0B22  3AFF               	xorlw	255	; case 255
  8035  0B23  1903               	skipnz
  8036  0B24  2B26               	goto	i1l130
  8037  0B25  2B26               	goto	i1l130
  8038  0B26                     i1l130:	
  8039                           ;main.c: 152: return 1;
  8040                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  8041                           
  8042  0B26  0008               	return
  8043  0B27                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  8044                           
  8045                           	psect	text31
  8046  0D35                     __ptext31:	
  8047 ;; *************** function _USBCheckCDCRequest *****************
  8048 ;; Defined at:
  8049 ;;		line 204 in file "../../../../../../framework/usb/src/usb_device_cdc.c"
  8050 ;; Parameters:    Size  Location     Type
  8051 ;;		None
  8052 ;; Auto vars:     Size  Location     Type
  8053 ;;		None
  8054 ;; Return value:  Size  Location     Type
  8055 ;;		None               void
  8056 ;; Registers used:
  8057 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8058 ;; Tracked objects:
  8059 ;;		On entry : 0/0
  8060 ;;		On exit  : 0/0
  8061 ;;		Unchanged: 0/0
  8062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8065 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8066 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8067 ;;Total ram usage:        1 bytes
  8068 ;; Hardware stack levels used:    1
  8069 ;; This function calls:
  8070 ;;		Nothing
  8071 ;; This function is called by:
  8072 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8073 ;; This function uses a non-reentrant model
  8074 ;;
  8075                           
  8076                           
  8077                           ;psect for function _USBCheckCDCRequest
  8078  0D35                     _USBCheckCDCRequest:	
  8079                           
  8080                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
  8081                           
  8082                           ;incstack = 0
  8083                           ; Regs used in _USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
  8084  0D35  0020               	movlb	0	; select bank0
  8085  0D36  0850               	movf	80,w	;volatile
  8086  0D37  391F               	andlw	31
  8087  0D38  3A01               	xorlw	1
  8088  0D39  1D03               	btfss	3,2
  8089  0D3A  0008               	return
  8090                           
  8091                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
  8092  0D3B  0E50               	swapf	80,w	;volatile
  8093  0D3C  0C89               	rrf	9,f
  8094  0D3D  3903               	andlw	3
  8095  0D3E  3A01               	xorlw	1
  8096  0D3F  1D03               	btfss	3,2
  8097  0D40  0008               	return
  8098                           
  8099                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
  8100                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
  8101  0D41  0854               	movf	84,w	;volatile
  8102  0D42  1903               	btfsc	3,2
  8103  0D43  2D82               	goto	i1l4603
  8104  0D44  0354               	decf	84,w	;volatile
  8105  0D45  1D03               	btfss	3,2
  8106  0D46  0008               	return
  8107  0D47  2D82               	goto	i1l4603
  8108  0D48                     i1l4573:	
  8109                           ;usb_device_cdc.c: 224: {
  8110                           ;usb_device_cdc.c: 226: case 0x00:
  8111                           
  8112                           ;usb_device_cdc.c: 223: switch(SetupPkt.bRequest)
  8113                           
  8114                           
  8115                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8116  0D48  30D8               	movlw	low _dummy_encapsulated_cmd_response
  8117  0D49  0021               	movlb	1	; select bank1
  8118  0D4A  00EA               	movwf	_inPipes^(0+128)	;volatile
  8119  0D4B  3001               	movlw	high _dummy_encapsulated_cmd_response
  8120  0D4C  00EB               	movwf	(_inPipes+1)^(0+128)	;volatile
  8121                           
  8122                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
  8123  0D4D  3000               	movlw	0
  8124  0D4E  00EE               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  8125  0D4F  3008               	movlw	8
  8126  0D50  00ED               	movwf	(_inPipes^(0+128)+3)	;volatile
  8127                           
  8128                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8129  0D51  146C               	bsf	(_inPipes^(0+128)+2),0	;volatile
  8130                           
  8131                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
  8132  0D52  17EC               	bsf	(_inPipes^(0+128)+2),7	;volatile
  8133                           
  8134                           ;usb_device_cdc.c: 232: break;
  8135  0D53  0008               	return
  8136  0D54                     i1l4581:	
  8137                           ;usb_device_cdc.c: 233: case 0x01:
  8138                           
  8139                           
  8140                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  8141  0D54  30D8               	movlw	low _dummy_encapsulated_cmd_response
  8142  0D55  0021               	movlb	1	; select bank1
  8143  0D56  00EA               	movwf	_inPipes^(0+128)	;volatile
  8144  0D57  3001               	movlw	high _dummy_encapsulated_cmd_response
  8145  0D58  00EB               	movwf	(_inPipes+1)^(0+128)	;volatile
  8146                           
  8147                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
  8148  0D59  17EC               	bsf	(_inPipes^(0+128)+2),7	;volatile
  8149                           
  8150                           ;usb_device_cdc.c: 237: break;
  8151  0D5A  0008               	return
  8152  0D5B                     i1l4585:	
  8153                           ;usb_device_cdc.c: 241: case 0x20:
  8154                           
  8155                           
  8156                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
  8157  0D5B  0020               	movlb	0	; select bank0
  8158  0D5C  0857               	movf	87,w	;volatile
  8159  0D5D  0023               	movlb	3	; select bank3
  8160  0D5E  00A4               	movwf	((_outPipes+1)^(0+384)+3)	;volatile
  8161  0D5F  0020               	movlb	0	; select bank0
  8162  0D60  0856               	movf	86,w	;volatile
  8163  0D61  0023               	movlb	3	; select bank3
  8164  0D62  00A3               	movwf	(_outPipes^(0+384)+3)	;volatile
  8165                           
  8166                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  8167  0D63  30E0               	movlw	(low (_line_coding| (0+256)))& (0+255)
  8168  0D64  00F0               	movwf	??_USBCheckCDCRequest
  8169  0D65  0870               	movf	??_USBCheckCDCRequest,w
  8170  0D66  00A0               	movwf	_outPipes^(0+384)	;volatile
  8171                           
  8172                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
  8173  0D67  01A5               	clrf	(low ((_outPipes| (0+256)+5)))^(0+128)	;volatile
  8174  0D68  01A6               	clrf	((low ((_outPipes| (0+256)+5))+1))^(0+128)	;volatile
  8175                           
  8176                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
  8177  0D69  17A2               	bsf	(_outPipes^(0+384)+2),7	;volatile
  8178                           
  8179                           ;usb_device_cdc.c: 246: break;
  8180  0D6A  0008               	return
  8181  0D6B                     i1l4591:	
  8182                           ;usb_device_cdc.c: 248: case 0x21:
  8183                           
  8184                           
  8185                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  8186  0D6B  30E0               	movlw	low _line_coding
  8187  0D6C  0021               	movlb	1	; select bank1
  8188  0D6D  00EA               	movwf	_inPipes^(0+128)	;volatile
  8189  0D6E  3001               	movlw	high _line_coding
  8190  0D6F  00EB               	movwf	(_inPipes+1)^(0+128)	;volatile
  8191  0D70  3000               	movlw	0
  8192  0D71  00EE               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  8193  0D72  3007               	movlw	7
  8194  0D73  00ED               	movwf	(_inPipes^(0+128)+3)	;volatile
  8195  0D74  30C1               	movlw	193
  8196  0D75  00F0               	movwf	??_USBCheckCDCRequest
  8197  0D76  0870               	movf	??_USBCheckCDCRequest,w
  8198  0D77  00EC               	movwf	(_inPipes^(0+128)+2)	;volatile
  8199                           
  8200                           ;usb_device_cdc.c: 253: break;
  8201  0D78  0008               	return
  8202  0D79                     i1l4597:	
  8203                           ;usb_device_cdc.c: 255: case 0x22:
  8204                           
  8205                           
  8206                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  8207  0D79  0020               	movlb	0	; select bank0
  8208  0D7A  0852               	movf	82,w	;volatile
  8209  0D7B  00F0               	movwf	??_USBCheckCDCRequest
  8210  0D7C  0870               	movf	??_USBCheckCDCRequest,w
  8211  0D7D  0023               	movlb	3	; select bank3
  8212  0D7E  00D4               	movwf	_control_signal_bitmap^(0+384)
  8213                           
  8214                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
  8215  0D7F  0021               	movlb	1	; select bank1
  8216  0D80  17EC               	bsf	(_inPipes^(0+128)+2),7	;volatile
  8217                           
  8218                           ;usb_device_cdc.c: 315: }
  8219                           
  8220                           ;usb_device_cdc.c: 314: break;
  8221                           
  8222                           ;usb_device_cdc.c: 313: default:
  8223                           
  8224                           ;usb_device_cdc.c: 289: break;
  8225  0D81  0008               	return
  8226  0D82                     i1l4603:	
  8227  0D82  0020               	movlb	0	; select bank0
  8228  0D83  0851               	movf	81,w	;volatile
  8229                           
  8230                           ; Switch size 1, requested type "space"
  8231                           ; Number of cases is 5, Range of values is 0 to 34
  8232                           ; switch strategies available:
  8233                           ; Name         Instructions Cycles
  8234                           ; simple_byte           16     9 (average)
  8235                           ; direct_byte           76     6 (fixed)
  8236                           ; jumptable            260     6 (fixed)
  8237                           ;	Chosen strategy is simple_byte
  8238  0D84  3A00               	xorlw	0	; case 0
  8239  0D85  1903               	skipnz
  8240  0D86  2D48               	goto	i1l4573
  8241  0D87  3A01               	xorlw	1	; case 1
  8242  0D88  1903               	skipnz
  8243  0D89  2D54               	goto	i1l4581
  8244  0D8A  3A21               	xorlw	33	; case 32
  8245  0D8B  1903               	skipnz
  8246  0D8C  2D5B               	goto	i1l4585
  8247  0D8D  3A01               	xorlw	1	; case 33
  8248  0D8E  1903               	skipnz
  8249  0D8F  2D6B               	goto	i1l4591
  8250  0D90  3A03               	xorlw	3	; case 34
  8251  0D91  1903               	skipnz
  8252  0D92  2D79               	goto	i1l4597
  8253  0D93  2D94               	goto	i1l705
  8254  0D94                     i1l705:	
  8255  0D94  0008               	return
  8256  0D95                     __end_of_USBCheckCDCRequest:	
  8257                           
  8258                           	psect	text32
  8259  0BFB                     __ptext32:	
  8260 ;; *************** function _APP_LEDUpdateUSBStatus *****************
  8261 ;; Defined at:
  8262 ;;		line 75 in file "../src/app_led_usb_status.c"
  8263 ;; Parameters:    Size  Location     Type
  8264 ;;		None
  8265 ;; Auto vars:     Size  Location     Type
  8266 ;;		None
  8267 ;; Return value:  Size  Location     Type
  8268 ;;		None               void
  8269 ;; Registers used:
  8270 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8271 ;; Tracked objects:
  8272 ;;		On entry : 0/0
  8273 ;;		On exit  : 0/0
  8274 ;;		Unchanged: 0/0
  8275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8280 ;;Total ram usage:        0 bytes
  8281 ;; Hardware stack levels used:    1
  8282 ;; Hardware stack levels required when called:    1
  8283 ;; This function calls:
  8284 ;;		_LED_Off
  8285 ;;		_LED_On
  8286 ;; This function is called by:
  8287 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291                           
  8292                           ;psect for function _APP_LEDUpdateUSBStatus
  8293  0BFB                     _APP_LEDUpdateUSBStatus:	
  8294                           
  8295                           ;app_led_usb_status.c: 77: static uint16_t ledCount = 0;
  8296                           ;app_led_usb_status.c: 79: if(UCONbits.SUSPND == 1)
  8297                           
  8298                           ;incstack = 0
  8299                           ; Regs used in _APP_LEDUpdateUSBStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8300  0BFB  003D               	movlb	29	; select bank29
  8301  0BFC  1C8E               	btfss	14,1	;volatile
  8302  0BFD  2C3B               	goto	i1l4555
  8303                           
  8304                           ;app_led_usb_status.c: 80: {
  8305                           ;app_led_usb_status.c: 81: LED_Off(LED_D1);
  8306  0BFE  3001               	movlw	1
  8307  0BFF  3189  217B         	fcall	_LED_Off
  8308                           
  8309                           ;app_led_usb_status.c: 82: return;
  8310  0C01  0008               	return
  8311  0C02                     i1l4529:	
  8312                           ;app_led_usb_status.c: 86: {
  8313                           ;app_led_usb_status.c: 87: case CONFIGURED_STATE:
  8314                           
  8315                           ;app_led_usb_status.c: 83: }
  8316                           ;app_led_usb_status.c: 85: switch(USBDeviceState)
  8317                           
  8318                           
  8319                           ;app_led_usb_status.c: 90: if(ledCount == 1)
  8320  0C02  0023               	movlb	3	; select bank3
  8321  0C03  033B               	decf	APP_LEDUpdateUSBStatus@ledCount^(0+384),w
  8322  0C04  043C               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  8323  0C05  1D03               	btfss	3,2
  8324  0C06  2C0C               	goto	i1l4533
  8325                           
  8326                           ;app_led_usb_status.c: 91: {
  8327                           ;app_led_usb_status.c: 92: LED_On(LED_D1);
  8328  0C07  3001               	movlw	1
  8329  0C08  3189  2194  318B   	fcall	_LED_On
  8330                           
  8331                           ;app_led_usb_status.c: 93: }
  8332  0C0B  2C41               	goto	i1l4557
  8333  0C0C                     i1l4533:	
  8334                           
  8335                           ;app_led_usb_status.c: 94: else if(ledCount == 75)
  8336  0C0C  304B               	movlw	75
  8337  0C0D  0023               	movlb	3	; select bank3
  8338  0C0E  063B               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+384),w
  8339  0C0F  043C               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  8340  0C10  1D03               	btfss	3,2
  8341  0C11  2C17               	goto	i1l4537
  8342                           
  8343                           ;app_led_usb_status.c: 95: {
  8344                           ;app_led_usb_status.c: 96: LED_Off(LED_D1);
  8345  0C12  3001               	movlw	1
  8346  0C13  3189  217B  318B   	fcall	_LED_Off
  8347                           
  8348                           ;app_led_usb_status.c: 97: }
  8349  0C16  2C41               	goto	i1l4557
  8350  0C17                     i1l4537:	
  8351                           
  8352                           ;app_led_usb_status.c: 98: else if(ledCount > 150)
  8353  0C17  3000               	movlw	0
  8354  0C18  0023               	movlb	3	; select bank3
  8355  0C19  023C               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  8356  0C1A  3097               	movlw	151
  8357  0C1B  2C34               	goto	L13
  8358  0C1C                     i1l4541:	
  8359                           ;app_led_usb_status.c: 104: default:
  8360                           
  8361                           ;app_led_usb_status.c: 101: }
  8362                           ;app_led_usb_status.c: 102: break;
  8363                           
  8364                           ;app_led_usb_status.c: 99: {
  8365                           ;app_led_usb_status.c: 100: ledCount = 0;
  8366                           
  8367                           
  8368                           ;app_led_usb_status.c: 107: if(ledCount == 1)
  8369  0C1C  033B               	decf	APP_LEDUpdateUSBStatus@ledCount^(0+384),w
  8370  0C1D  043C               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  8371  0C1E  1D03               	btfss	3,2
  8372  0C1F  2C25               	goto	i1l4545
  8373                           
  8374                           ;app_led_usb_status.c: 108: {
  8375                           ;app_led_usb_status.c: 109: LED_On(LED_D1);
  8376  0C20  3001               	movlw	1
  8377  0C21  3189  2194  318B   	fcall	_LED_On
  8378                           
  8379                           ;app_led_usb_status.c: 110: }
  8380  0C24  2C41               	goto	i1l4557
  8381  0C25                     i1l4545:	
  8382                           
  8383                           ;app_led_usb_status.c: 111: else if(ledCount == 50)
  8384  0C25  3032               	movlw	50
  8385  0C26  0023               	movlb	3	; select bank3
  8386  0C27  063B               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+384),w
  8387  0C28  043C               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  8388  0C29  1D03               	btfss	3,2
  8389  0C2A  2C30               	goto	i1l4549
  8390                           
  8391                           ;app_led_usb_status.c: 112: {
  8392                           ;app_led_usb_status.c: 113: LED_Off(LED_D1);
  8393  0C2B  3001               	movlw	1
  8394  0C2C  3189  217B  318B   	fcall	_LED_Off
  8395                           
  8396                           ;app_led_usb_status.c: 114: }
  8397  0C2F  2C41               	goto	i1l4557
  8398  0C30                     i1l4549:	
  8399                           
  8400                           ;app_led_usb_status.c: 115: else if(ledCount > 950)
  8401  0C30  3003               	movlw	3
  8402  0C31  0023               	movlb	3	; select bank3
  8403  0C32  023C               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  8404  0C33  30B7               	movlw	183
  8405  0C34                     L13:	
  8406  0C34  1903               	skipnz
  8407  0C35  023B               	subwf	APP_LEDUpdateUSBStatus@ledCount^(0+384),w
  8408  0C36  1C03               	skipc
  8409  0C37  2C41               	goto	i1l4557
  8410                           
  8411                           ;app_led_usb_status.c: 116: {
  8412                           ;app_led_usb_status.c: 117: ledCount = 0;
  8413  0C38  01BB               	clrf	APP_LEDUpdateUSBStatus@ledCount^(0+384)
  8414  0C39  01BC               	clrf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384)
  8415                           
  8416                           ;app_led_usb_status.c: 120: }
  8417                           
  8418                           ;app_led_usb_status.c: 118: }
  8419                           ;app_led_usb_status.c: 119: break;
  8420  0C3A  2C41               	goto	i1l4557
  8421  0C3B                     i1l4555:	
  8422  0C3B  0023               	movlb	3	; select bank3
  8423  0C3C  0849               	movf	_USBDeviceState^(0+384),w	;volatile
  8424                           
  8425                           ; Switch size 1, requested type "space"
  8426                           ; Number of cases is 1, Range of values is 32 to 32
  8427                           ; switch strategies available:
  8428                           ; Name         Instructions Cycles
  8429                           ; simple_byte            4     3 (average)
  8430                           ; direct_byte           11     9 (fixed)
  8431                           ; jumptable            263     9 (fixed)
  8432                           ;	Chosen strategy is simple_byte
  8433  0C3D  3A20               	xorlw	32	; case 32
  8434  0C3E  1903               	skipnz
  8435  0C3F  2C02               	goto	i1l4529
  8436  0C40  2C1C               	goto	i1l4541
  8437  0C41                     i1l4557:	
  8438                           
  8439                           ;app_led_usb_status.c: 123: ledCount++;
  8440  0C41  3001               	movlw	1
  8441  0C42  0023               	movlb	3	; select bank3
  8442  0C43  07BB               	addwf	APP_LEDUpdateUSBStatus@ledCount^(0+384),f
  8443  0C44  3000               	movlw	0
  8444  0C45  3DBC               	addwfc	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),f
  8445  0C46  0008               	return
  8446  0C47                     __end_of_APP_LEDUpdateUSBStatus:	
  8447                           
  8448                           	psect	text33
  8449  0994                     __ptext33:	
  8450 ;; *************** function _LED_On *****************
  8451 ;; Defined at:
  8452 ;;		line 59 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/leds.c"
  8453 ;; Parameters:    Size  Location     Type
  8454 ;;  led             1    wreg     enum E2
  8455 ;; Auto vars:     Size  Location     Type
  8456 ;;  led             1    0[COMMON] enum E2
  8457 ;; Return value:  Size  Location     Type
  8458 ;;		None               void
  8459 ;; Registers used:
  8460 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8461 ;; Tracked objects:
  8462 ;;		On entry : 0/0
  8463 ;;		On exit  : 0/0
  8464 ;;		Unchanged: 0/0
  8465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8467 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8469 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8470 ;;Total ram usage:        1 bytes
  8471 ;; Hardware stack levels used:    1
  8472 ;; This function calls:
  8473 ;;		Nothing
  8474 ;; This function is called by:
  8475 ;;		_APP_LEDUpdateUSBStatus
  8476 ;; This function uses a non-reentrant model
  8477 ;;
  8478                           
  8479                           
  8480                           ;psect for function _LED_On
  8481  0994                     _LED_On:	
  8482                           
  8483                           ;incstack = 0
  8484                           ; Regs used in _LED_On: [wreg-fsr0h+status,2+status,0]
  8485                           ;LED_On@led stored from wreg
  8486  0994  00F0               	movwf	LED_On@led
  8487                           
  8488                           ;leds.c: 61: switch(led)
  8489  0995  29A2               	goto	i1l4505
  8490  0996                     i1l215:	
  8491                           ;leds.c: 62: {
  8492                           ;leds.c: 63: case LED_D1:
  8493                           
  8494                           
  8495                           ;leds.c: 64: LATCbits.LATC0 = 1;
  8496  0996  0022               	movlb	2	; select bank2
  8497  0997  140E               	bsf	14,0	;volatile
  8498                           
  8499                           ;leds.c: 65: break;
  8500  0998  0008               	return
  8501  0999                     i1l217:	
  8502                           ;leds.c: 67: case LED_D2:
  8503                           
  8504                           
  8505                           ;leds.c: 68: LATCbits.LATC1 = 1;
  8506  0999  0022               	movlb	2	; select bank2
  8507  099A  148E               	bsf	14,1	;volatile
  8508                           
  8509                           ;leds.c: 69: break;
  8510  099B  0008               	return
  8511  099C                     i1l218:	
  8512                           ;leds.c: 71: case LED_D3:
  8513                           
  8514                           
  8515                           ;leds.c: 72: LATCbits.LATC2 = 1;
  8516  099C  0022               	movlb	2	; select bank2
  8517  099D  150E               	bsf	14,2	;volatile
  8518                           
  8519                           ;leds.c: 73: break;
  8520  099E  0008               	return
  8521  099F                     i1l219:	
  8522                           ;leds.c: 75: case LED_D4:
  8523                           
  8524                           
  8525                           ;leds.c: 76: LATCbits.LATC3 = 1;
  8526  099F  0022               	movlb	2	; select bank2
  8527  09A0  158E               	bsf	14,3	;volatile
  8528                           
  8529                           ;leds.c: 81: }
  8530                           
  8531                           ;leds.c: 80: break;
  8532                           
  8533                           ;leds.c: 79: case LED_NONE:
  8534                           
  8535                           ;leds.c: 77: break;
  8536  09A1  0008               	return
  8537  09A2                     i1l4505:	
  8538  09A2  0870               	movf	LED_On@led,w
  8539                           
  8540                           ; Switch size 1, requested type "space"
  8541                           ; Number of cases is 5, Range of values is 0 to 4
  8542                           ; switch strategies available:
  8543                           ; Name         Instructions Cycles
  8544                           ; direct_byte           16     6 (fixed)
  8545                           ; simple_byte           16     9 (average)
  8546                           ; jumptable            260     6 (fixed)
  8547                           ;	Chosen strategy is direct_byte
  8548  09A3  0084               	movwf	4
  8549  09A4  3005               	movlw	5
  8550  09A5  0204               	subwf	4,w
  8551  09A6  1803               	skipnc
  8552  09A7  0008               	return
  8553  09A8  3188               	movlp	high i1S5831
  8554  09A9  3504               	lslf	4,w
  8555  09AA  3E24               	addlw	low i1S5831
  8556  09AB  0082               	movwf	2
  8557  09AC                     i1l221:	
  8558  09AC  0008               	return
  8559  09AD                     __end_of_LED_On:	
  8560                           
  8561                           	psect	swtext3
  8562  0824                     __pswtext3:	
  8563  0824                     i1S5831:	
  8564  0824  3189  29AC         	ljmp	i1l221
  8565  0826  3189  2996         	ljmp	i1l215
  8566  0828  3189  2999         	ljmp	i1l217
  8567  082A  3189  299C         	ljmp	i1l218
  8568  082C  3189  299F         	ljmp	i1l219
  8569                           
  8570                           	psect	text34
  8571  097B                     __ptext34:	
  8572 ;; *************** function _LED_Off *****************
  8573 ;; Defined at:
  8574 ;;		line 100 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/leds.c"
  8575 ;; Parameters:    Size  Location     Type
  8576 ;;  led             1    wreg     enum E2
  8577 ;; Auto vars:     Size  Location     Type
  8578 ;;  led             1    0[COMMON] enum E2
  8579 ;; Return value:  Size  Location     Type
  8580 ;;		None               void
  8581 ;; Registers used:
  8582 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8583 ;; Tracked objects:
  8584 ;;		On entry : 0/0
  8585 ;;		On exit  : 0/0
  8586 ;;		Unchanged: 0/0
  8587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8589 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8591 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8592 ;;Total ram usage:        1 bytes
  8593 ;; Hardware stack levels used:    1
  8594 ;; This function calls:
  8595 ;;		Nothing
  8596 ;; This function is called by:
  8597 ;;		_APP_LEDUpdateUSBStatus
  8598 ;; This function uses a non-reentrant model
  8599 ;;
  8600                           
  8601                           
  8602                           ;psect for function _LED_Off
  8603  097B                     _LED_Off:	
  8604                           
  8605                           ;incstack = 0
  8606                           ; Regs used in _LED_Off: [wreg-fsr0h+status,2+status,0]
  8607                           ;LED_Off@led stored from wreg
  8608  097B  00F0               	movwf	LED_Off@led
  8609                           
  8610                           ;leds.c: 102: switch(led)
  8611  097C  2989               	goto	i1l4495
  8612  097D                     i1l225:	
  8613                           ;leds.c: 103: {
  8614                           ;leds.c: 104: case LED_D1:
  8615                           
  8616                           
  8617                           ;leds.c: 105: LATCbits.LATC0 = 0;
  8618  097D  0022               	movlb	2	; select bank2
  8619  097E  100E               	bcf	14,0	;volatile
  8620                           
  8621                           ;leds.c: 106: break;
  8622  097F  0008               	return
  8623  0980                     i1l227:	
  8624                           ;leds.c: 108: case LED_D2:
  8625                           
  8626                           
  8627                           ;leds.c: 109: LATCbits.LATC1 = 0;
  8628  0980  0022               	movlb	2	; select bank2
  8629  0981  108E               	bcf	14,1	;volatile
  8630                           
  8631                           ;leds.c: 110: break;
  8632  0982  0008               	return
  8633  0983                     i1l228:	
  8634                           ;leds.c: 112: case LED_D3:
  8635                           
  8636                           
  8637                           ;leds.c: 113: LATCbits.LATC2 = 0;
  8638  0983  0022               	movlb	2	; select bank2
  8639  0984  110E               	bcf	14,2	;volatile
  8640                           
  8641                           ;leds.c: 114: break;
  8642  0985  0008               	return
  8643  0986                     i1l229:	
  8644                           ;leds.c: 116: case LED_D4:
  8645                           
  8646                           
  8647                           ;leds.c: 117: LATCbits.LATC3 = 0;
  8648  0986  0022               	movlb	2	; select bank2
  8649  0987  118E               	bcf	14,3	;volatile
  8650                           
  8651                           ;leds.c: 122: }
  8652                           
  8653                           ;leds.c: 121: break;
  8654                           
  8655                           ;leds.c: 120: case LED_NONE:
  8656                           
  8657                           ;leds.c: 118: break;
  8658  0988  0008               	return
  8659  0989                     i1l4495:	
  8660  0989  0870               	movf	LED_Off@led,w
  8661                           
  8662                           ; Switch size 1, requested type "space"
  8663                           ; Number of cases is 5, Range of values is 0 to 4
  8664                           ; switch strategies available:
  8665                           ; Name         Instructions Cycles
  8666                           ; direct_byte           16     6 (fixed)
  8667                           ; simple_byte           16     9 (average)
  8668                           ; jumptable            260     6 (fixed)
  8669                           ;	Chosen strategy is direct_byte
  8670  098A  0084               	movwf	4
  8671  098B  3005               	movlw	5
  8672  098C  0204               	subwf	4,w
  8673  098D  1803               	skipnc
  8674  098E  0008               	return
  8675  098F  3188               	movlp	high i1S5833
  8676  0990  3504               	lslf	4,w
  8677  0991  3E2E               	addlw	low i1S5833
  8678  0992  0082               	movwf	2
  8679  0993                     i1l231:	
  8680  0993  0008               	return
  8681  0994                     __end_of_LED_Off:	
  8682                           
  8683                           	psect	swtext4
  8684  082E                     __pswtext4:	
  8685  082E                     i1S5833:	
  8686  082E  3189  2993         	ljmp	i1l231
  8687  0830  3189  297D         	ljmp	i1l225
  8688  0832  3189  2980         	ljmp	i1l227
  8689  0834  3189  2983         	ljmp	i1l228
  8690  0836  3189  2986         	ljmp	i1l229
  8691                           
  8692                           	psect	text35
  8693  08F3                     __ptext35:	
  8694 ;; *************** function _APP_DeviceCDCBasicDemoInitialize *****************
  8695 ;; Defined at:
  8696 ;;		line 55 in file "../src/app_device_cdc_basic.c"
  8697 ;; Parameters:    Size  Location     Type
  8698 ;;		None
  8699 ;; Auto vars:     Size  Location     Type
  8700 ;;		None
  8701 ;; Return value:  Size  Location     Type
  8702 ;;		None               void
  8703 ;; Registers used:
  8704 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8705 ;; Tracked objects:
  8706 ;;		On entry : 0/0
  8707 ;;		On exit  : 0/0
  8708 ;;		Unchanged: 0/0
  8709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8712 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8713 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8714 ;;Total ram usage:        1 bytes
  8715 ;; Hardware stack levels used:    1
  8716 ;; Hardware stack levels required when called:    3
  8717 ;; This function calls:
  8718 ;;		_CDCInitEP
  8719 ;; This function is called by:
  8720 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8721 ;; This function uses a non-reentrant model
  8722 ;;
  8723                           
  8724                           
  8725                           ;psect for function _APP_DeviceCDCBasicDemoInitialize
  8726  08F3                     _APP_DeviceCDCBasicDemoInitialize:	
  8727                           
  8728                           ;app_device_cdc_basic.c: 57: CDCInitEP();
  8729                           
  8730                           ;incstack = 0
  8731                           ; Regs used in _APP_DeviceCDCBasicDemoInitialize: [wreg+fsr1l+fsr1h+status,2+status,0+pc
      +                          lath+cstack]
  8732  08F3  318A  22B5         	fcall	_CDCInitEP
  8733                           
  8734                           ;app_device_cdc_basic.c: 60: line_coding.bCharFormat = 0;
  8735  08F5  0023               	movlb	3	; select bank3
  8736  08F6  01E4               	clrf	(_line_coding^(0+384)+4)
  8737                           
  8738                           ;app_device_cdc_basic.c: 61: line_coding.bDataBits = 8;
  8739  08F7  3008               	movlw	8
  8740  08F8  00FD               	movwf	??_APP_DeviceCDCBasicDemoInitialize
  8741  08F9  087D               	movf	??_APP_DeviceCDCBasicDemoInitialize,w
  8742  08FA  00E6               	movwf	(_line_coding^(0+384)+6)
  8743                           
  8744                           ;app_device_cdc_basic.c: 62: line_coding.bParityType = 0;
  8745  08FB  01E5               	clrf	(_line_coding^(0+384)+5)
  8746                           
  8747                           ;app_device_cdc_basic.c: 63: line_coding.dwDTERate = 9600;
  8748  08FC  3000               	movlw	0
  8749  08FD  00E3               	movwf	(_line_coding+3)^(0+384)
  8750  08FE  3000               	movlw	0
  8751  08FF  00E2               	movwf	(_line_coding+2)^(0+384)
  8752  0900  3025               	movlw	37
  8753  0901  00E1               	movwf	(_line_coding+1)^(0+384)
  8754  0902  3080               	movlw	128
  8755  0903  00E0               	movwf	_line_coding^(0+384)
  8756                           
  8757                           ;app_device_cdc_basic.c: 65: buttonPressed = 0;
  8758  0904  01CE               	clrf	_buttonPressed^(0+384)
  8759  0905  0008               	return
  8760  0906                     __end_of_APP_DeviceCDCBasicDemoInitialize:	
  8761                           
  8762                           	psect	text36
  8763  0AB5                     __ptext36:	
  8764 ;; *************** function _CDCInitEP *****************
  8765 ;; Defined at:
  8766 ;;		line 351 in file "../../../../../../framework/usb/src/usb_device_cdc.c"
  8767 ;; Parameters:    Size  Location     Type
  8768 ;;		None
  8769 ;; Auto vars:     Size  Location     Type
  8770 ;;		None
  8771 ;; Return value:  Size  Location     Type
  8772 ;;		None               void
  8773 ;; Registers used:
  8774 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8775 ;; Tracked objects:
  8776 ;;		On entry : 0/0
  8777 ;;		On exit  : 0/0
  8778 ;;		Unchanged: 0/0
  8779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8782 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8783 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8784 ;;Total ram usage:        2 bytes
  8785 ;; Hardware stack levels used:    1
  8786 ;; Hardware stack levels required when called:    2
  8787 ;; This function calls:
  8788 ;;		_USBEnableEndpoint
  8789 ;;		i1_USBTransferOnePacket
  8790 ;; This function is called by:
  8791 ;;		_APP_DeviceCDCBasicDemoInitialize
  8792 ;; This function uses a non-reentrant model
  8793 ;;
  8794                           
  8795                           
  8796                           ;psect for function _CDCInitEP
  8797  0AB5                     _CDCInitEP:	
  8798                           
  8799                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
  8800                           
  8801                           ;incstack = 0
  8802                           ; Regs used in _CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8803  0AB5  3000               	movlw	0
  8804  0AB6  0023               	movlb	3	; select bank3
  8805  0AB7  00E3               	movwf	(_line_coding+3)^(0+384)
  8806  0AB8  3000               	movlw	0
  8807  0AB9  00E2               	movwf	(_line_coding+2)^(0+384)
  8808  0ABA  304B               	movlw	75
  8809  0ABB  00E1               	movwf	(_line_coding+1)^(0+384)
  8810  0ABC  3000               	movlw	0
  8811  0ABD  00E0               	movwf	_line_coding^(0+384)
  8812                           
  8813                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
  8814  0ABE  01E4               	clrf	(_line_coding^(0+384)+4)
  8815                           
  8816                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
  8817  0ABF  01E5               	clrf	(_line_coding^(0+384)+5)
  8818                           
  8819                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
  8820  0AC0  3008               	movlw	8
  8821  0AC1  0020               	movlb	0	; select bank0
  8822  0AC2  00E0               	movwf	??_CDCInitEP
  8823  0AC3  0860               	movf	??_CDCInitEP,w
  8824  0AC4  0023               	movlb	3	; select bank3
  8825  0AC5  00E6               	movwf	(_line_coding^(0+384)+6)
  8826                           
  8827                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
  8828  0AC6  01D0               	clrf	_cdc_rx_len^(0+384)
  8829                           
  8830                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
  8831  0AC7  301A               	movlw	26
  8832  0AC8  0020               	movlb	0	; select bank0
  8833  0AC9  00E0               	movwf	??_CDCInitEP
  8834  0ACA  0860               	movf	??_CDCInitEP,w
  8835  0ACB  00F7               	movwf	USBEnableEndpoint@options
  8836  0ACC  3001               	movlw	1
  8837  0ACD  318A  221F  318A   	fcall	_USBEnableEndpoint
  8838                           
  8839                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  8840  0AD0  301E               	movlw	30
  8841  0AD1  0020               	movlb	0	; select bank0
  8842  0AD2  00E0               	movwf	??_CDCInitEP
  8843  0AD3  0860               	movf	??_CDCInitEP,w
  8844  0AD4  00F7               	movwf	USBEnableEndpoint@options
  8845  0AD5  3002               	movlw	2
  8846  0AD6  318A  221F  318A   	fcall	_USBEnableEndpoint
  8847                           
  8848                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  8849  0AD9  01F0               	clrf	i1USBTransferOnePacket@dir
  8850  0ADA  3020               	movlw	32
  8851  0ADB  00F1               	movwf	i1USBTransferOnePacket@data
  8852  0ADC  3001               	movlw	1
  8853  0ADD  00F2               	movwf	i1USBTransferOnePacket@data+1
  8854  0ADE  3040               	movlw	64
  8855  0ADF  0020               	movlb	0	; select bank0
  8856  0AE0  00E0               	movwf	??_CDCInitEP
  8857  0AE1  0860               	movf	??_CDCInitEP,w
  8858  0AE2  00F3               	movwf	i1USBTransferOnePacket@len
  8859  0AE3  3002               	movlw	2
  8860  0AE4  318B  23AF         	fcall	i1_USBTransferOnePacket
  8861  0AE6  0020               	movlb	0	; select bank0
  8862  0AE7  00E1               	movwf	??_CDCInitEP+1
  8863  0AE8  0861               	movf	??_CDCInitEP+1,w
  8864  0AE9  0023               	movlb	3	; select bank3
  8865  0AEA  00C3               	movwf	_CDCDataOutHandle^(0+384)
  8866                           
  8867                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
  8868  0AEB  01C2               	clrf	_CDCDataInHandle^(0+384)
  8869                           
  8870                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
  8871  0AEC  01D1               	clrf	_cdc_trf_state^(0+384)
  8872  0AED  0008               	return
  8873  0AEE                     __end_of_CDCInitEP:	
  8874                           
  8875                           	psect	text37
  8876  0BAF                     __ptext37:	
  8877 ;; *************** function i1_USBTransferOnePacket *****************
  8878 ;; Defined at:
  8879 ;;		line 1014 in file "../../../../../../framework/usb/src/usb_device.c"
  8880 ;; Parameters:    Size  Location     Type
  8881 ;;  ep              1    wreg     unsigned char 
  8882 ;;  dir             1    0[COMMON] unsigned char 
  8883 ;;  data            2    1[COMMON] PTR unsigned char 
  8884 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  8885 ;;  len             1    3[COMMON] unsigned char 
  8886 ;; Auto vars:     Size  Location     Type
  8887 ;;  ep              1    6[COMMON] unsigned char 
  8888 ;;  USBTransferO    1    7[COMMON] PTR volatile struct __BD
  8889 ;;		 -> NULL(0), BDT(48), 
  8890 ;; Return value:  Size  Location     Type
  8891 ;;                  1    wreg      PTR void 
  8892 ;; Registers used:
  8893 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8894 ;; Tracked objects:
  8895 ;;		On entry : 0/0
  8896 ;;		On exit  : 0/0
  8897 ;;		Unchanged: 0/0
  8898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8899 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8900 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8901 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8902 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8903 ;;Total ram usage:        8 bytes
  8904 ;; Hardware stack levels used:    1
  8905 ;; This function calls:
  8906 ;;		Nothing
  8907 ;; This function is called by:
  8908 ;;		_CDCInitEP
  8909 ;; This function uses a non-reentrant model
  8910 ;;
  8911                           
  8912                           
  8913                           ;psect for function i1_USBTransferOnePacket
  8914  0BAF                     i1_USBTransferOnePacket:	
  8915                           
  8916                           ;incstack = 0
  8917                           ; Regs used in i1_USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  8918                           ;i1USBTransferOnePacket@ep stored from wreg
  8919  0BAF  00F6               	movwf	i1USBTransferOnePacket@ep
  8920                           
  8921                           ;usb_device.c: 1016: volatile BDT_ENTRY* handle;
  8922                           ;usb_device.c: 1019: if(dir != 0)
  8923  0BB0  0870               	movf	i1USBTransferOnePacket@dir,w
  8924  0BB1  1903               	btfsc	3,2
  8925  0BB2  2BB6               	goto	i1l4449
  8926                           
  8927                           ;usb_device.c: 1020: {
  8928                           ;usb_device.c: 1022: handle = pBDTEntryIn[ep];
  8929  0BB3  0876               	movf	i1USBTransferOnePacket@ep,w
  8930  0BB4  3EB5               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  8931  0BB5  2BB8               	goto	L14
  8932  0BB6                     i1l4449:	
  8933                           ;usb_device.c: 1023: }
  8934                           
  8935                           
  8936                           ;usb_device.c: 1024: else
  8937                           ;usb_device.c: 1025: {
  8938                           ;usb_device.c: 1027: handle = pBDTEntryOut[ep];
  8939  0BB6  0876               	movf	i1USBTransferOnePacket@ep,w
  8940  0BB7  3EB8               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8941  0BB8                     L14:	
  8942  0BB8  0086               	movwf	6
  8943  0BB9  3001               	movlw	1	; select bank3/4
  8944  0BBA  0087               	movwf	7
  8945  0BBB  0801               	movf	1,w
  8946  0BBC  00F4               	movwf	??i1_USBTransferOnePacket
  8947  0BBD  0874               	movf	??i1_USBTransferOnePacket,w
  8948  0BBE  00F7               	movwf	i1USBTransferOnePacket@handle
  8949                           
  8950                           ;usb_device.c: 1028: }
  8951                           ;usb_device.c: 1032: if(handle == 0)
  8952  0BBF  0877               	movf	i1USBTransferOnePacket@handle,w
  8953  0BC0  1D03               	btfss	3,2
  8954  0BC1  2BC4               	goto	i1l4457
  8955                           
  8956                           ;usb_device.c: 1033: {
  8957                           ;usb_device.c: 1034: return 0;
  8958  0BC2  3000               	movlw	0
  8959  0BC3  0008               	return
  8960  0BC4                     i1l4457:	
  8961                           
  8962                           ;usb_device.c: 1035: }
  8963                           ;usb_device.c: 1048: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  8964  0BC4  30FF               	movlw	255
  8965  0BC5  0571               	andwf	i1USBTransferOnePacket@data,w
  8966  0BC6  00F4               	movwf	??i1_USBTransferOnePacket
  8967  0BC7  307F               	movlw	127
  8968  0BC8  0572               	andwf	i1USBTransferOnePacket@data+1,w
  8969  0BC9  00F5               	movwf	??i1_USBTransferOnePacket+1
  8970  0BCA  0877               	movf	i1USBTransferOnePacket@handle,w
  8971  0BCB  3E02               	addlw	2
  8972  0BCC  0086               	movwf	6
  8973  0BCD  0187               	clrf	7
  8974  0BCE  0874               	movf	??i1_USBTransferOnePacket,w
  8975  0BCF  3FC0               	movwi [0]fsr1
  8976  0BD0  0875               	movf	??i1_USBTransferOnePacket+1,w
  8977  0BD1  3FC1               	movwi [1]fsr1
  8978                           
  8979                           ;usb_device.c: 1049: handle->CNT = len;
  8980  0BD2  0873               	movf	i1USBTransferOnePacket@len,w
  8981  0BD3  00F4               	movwf	??i1_USBTransferOnePacket
  8982  0BD4  0A77               	incf	i1USBTransferOnePacket@handle,w
  8983  0BD5  0086               	movwf	6
  8984  0BD6  0187               	clrf	7
  8985  0BD7  0874               	movf	??i1_USBTransferOnePacket,w
  8986  0BD8  0081               	movwf	1
  8987                           
  8988                           ;usb_device.c: 1050: handle->STAT.Val &= 0x40;
  8989  0BD9  3040               	movlw	64
  8990  0BDA  00F4               	movwf	??i1_USBTransferOnePacket
  8991  0BDB  0877               	movf	i1USBTransferOnePacket@handle,w
  8992  0BDC  0086               	movwf	6
  8993  0BDD  0187               	clrf	7
  8994  0BDE  0874               	movf	??i1_USBTransferOnePacket,w
  8995  0BDF  0581               	andwf	1,f
  8996                           
  8997                           ;usb_device.c: 1051: handle->STAT.Val |= (0x08 & 0x08);
  8998  0BE0  0877               	movf	i1USBTransferOnePacket@handle,w
  8999  0BE1  0086               	movwf	6
  9000  0BE2  0187               	clrf	7
  9001  0BE3  1581               	bsf	1,3
  9002                           
  9003                           ;usb_device.c: 1052: handle->STAT.Val |= 0x80;
  9004  0BE4  0877               	movf	i1USBTransferOnePacket@handle,w
  9005  0BE5  0086               	movwf	6
  9006  0BE6  0187               	clrf	7
  9007  0BE7  1781               	bsf	1,7
  9008                           
  9009                           ;usb_device.c: 1055: if(dir != 0)
  9010  0BE8  0870               	movf	i1USBTransferOnePacket@dir,w
  9011  0BE9  1903               	btfsc	3,2
  9012  0BEA  2BF0               	goto	i1l4467
  9013                           
  9014                           ;usb_device.c: 1056: {
  9015                           ;usb_device.c: 1058: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
  9016  0BEB  3004               	movlw	4
  9017  0BEC  00F4               	movwf	??i1_USBTransferOnePacket
  9018  0BED  0876               	movf	i1USBTransferOnePacket@ep,w
  9019  0BEE  3EB5               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  9020  0BEF  2BF4               	goto	L15
  9021  0BF0                     i1l4467:	
  9022                           ;usb_device.c: 1059: }
  9023                           
  9024                           
  9025                           ;usb_device.c: 1060: else
  9026                           ;usb_device.c: 1061: {
  9027                           ;usb_device.c: 1063: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
  9028  0BF0  3004               	movlw	4
  9029  0BF1  00F4               	movwf	??i1_USBTransferOnePacket
  9030  0BF2  0876               	movf	i1USBTransferOnePacket@ep,w
  9031  0BF3  3EB8               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  9032  0BF4                     L15:	
  9033  0BF4  0086               	movwf	6
  9034  0BF5  3001               	movlw	1	; select bank3/4
  9035  0BF6  0087               	movwf	7
  9036  0BF7  0874               	movf	??i1_USBTransferOnePacket,w
  9037  0BF8  0681               	xorwf	1,f
  9038                           
  9039                           ;usb_device.c: 1064: }
  9040                           ;usb_device.c: 1065: return (void*)handle;
  9041  0BF9  0877               	movf	i1USBTransferOnePacket@handle,w
  9042  0BFA  0008               	return
  9043  0BFB                     __end_ofi1_USBTransferOnePacket:	
  9044                           
  9045                           	psect	text38
  9046  0A1F                     __ptext38:	
  9047 ;; *************** function _USBEnableEndpoint *****************
  9048 ;; Defined at:
  9049 ;;		line 897 in file "../../../../../../framework/usb/src/usb_device.c"
  9050 ;; Parameters:    Size  Location     Type
  9051 ;;  ep              1    wreg     unsigned char 
  9052 ;;  options         1    7[COMMON] unsigned char 
  9053 ;; Auto vars:     Size  Location     Type
  9054 ;;  ep              1   12[COMMON] unsigned char 
  9055 ;;  p               2   10[COMMON] PTR unsigned char 
  9056 ;;		 -> UEP0(1), 
  9057 ;; Return value:  Size  Location     Type
  9058 ;;		None               void
  9059 ;; Registers used:
  9060 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9061 ;; Tracked objects:
  9062 ;;		On entry : 0/0
  9063 ;;		On exit  : 0/0
  9064 ;;		Unchanged: 0/0
  9065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9066 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9067 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9068 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9069 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9070 ;;Total ram usage:        6 bytes
  9071 ;; Hardware stack levels used:    1
  9072 ;; Hardware stack levels required when called:    1
  9073 ;; This function calls:
  9074 ;;		_USBConfigureEndpoint
  9075 ;; This function is called by:
  9076 ;;		_CDCInitEP
  9077 ;; This function uses a non-reentrant model
  9078 ;;
  9079                           
  9080                           
  9081                           ;psect for function _USBEnableEndpoint
  9082  0A1F                     _USBEnableEndpoint:	
  9083                           
  9084                           ;incstack = 0
  9085                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9086                           ;USBEnableEndpoint@ep stored from wreg
  9087  0A1F  00FC               	movwf	USBEnableEndpoint@ep
  9088                           
  9089                           ;usb_device.c: 899: unsigned char* p;
  9090                           ;usb_device.c: 903: if(options & 0x04)
  9091  0A20  1D77               	btfss	USBEnableEndpoint@options,2
  9092  0A21  2A27               	goto	i1l4437
  9093                           
  9094                           ;usb_device.c: 904: {
  9095                           ;usb_device.c: 905: USBConfigureEndpoint(ep, 0);
  9096  0A22  01F0               	clrf	USBConfigureEndpoint@direction
  9097  0A23  087C               	movf	USBEnableEndpoint@ep,w
  9098  0A24  318B  2327  318A   	fcall	_USBConfigureEndpoint
  9099  0A27                     i1l4437:	
  9100                           
  9101                           ;usb_device.c: 906: }
  9102                           ;usb_device.c: 907: if(options & 0x02)
  9103  0A27  1CF7               	btfss	USBEnableEndpoint@options,1
  9104  0A28  2A2E               	goto	i1l4441
  9105                           
  9106                           ;usb_device.c: 908: {
  9107                           ;usb_device.c: 909: USBConfigureEndpoint(ep, 1);
  9108  0A29  01F0               	clrf	USBConfigureEndpoint@direction
  9109  0A2A  0AF0               	incf	USBConfigureEndpoint@direction,f
  9110  0A2B  087C               	movf	USBEnableEndpoint@ep,w
  9111  0A2C  318B  2327         	fcall	_USBConfigureEndpoint
  9112  0A2E                     i1l4441:	
  9113                           
  9114                           ;usb_device.c: 910: }
  9115                           ;usb_device.c: 918: p = (unsigned char*)(&UEP0+ep);
  9116  0A2E  087C               	movf	USBEnableEndpoint@ep,w
  9117  0A2F  3E98               	addlw	152
  9118  0A30  00F8               	movwf	??_USBEnableEndpoint
  9119  0A31  01F9               	clrf	??_USBEnableEndpoint+1
  9120  0A32  300E               	movlw	14
  9121  0A33  3DF9               	addwfc	??_USBEnableEndpoint+1,f
  9122  0A34  0878               	movf	??_USBEnableEndpoint,w
  9123  0A35  00FA               	movwf	USBEnableEndpoint@p
  9124  0A36  0879               	movf	??_USBEnableEndpoint+1,w
  9125  0A37  00FB               	movwf	USBEnableEndpoint@p+1
  9126                           
  9127                           ;usb_device.c: 920: *p = options;
  9128  0A38  087A               	movf	USBEnableEndpoint@p,w
  9129  0A39  0086               	movwf	6
  9130  0A3A  087B               	movf	USBEnableEndpoint@p+1,w
  9131  0A3B  0087               	movwf	7
  9132  0A3C  0877               	movf	USBEnableEndpoint@options,w
  9133  0A3D  0081               	movwf	1
  9134  0A3E  0008               	return
  9135  0A3F                     __end_of_USBEnableEndpoint:	
  9136                           
  9137                           	psect	text39
  9138  0B27                     __ptext39:	
  9139 ;; *************** function _USBConfigureEndpoint *****************
  9140 ;; Defined at:
  9141 ;;		line 1562 in file "../../../../../../framework/usb/src/usb_device.c"
  9142 ;; Parameters:    Size  Location     Type
  9143 ;;  EPNum           1    wreg     unsigned char 
  9144 ;;  direction       1    0[COMMON] unsigned char 
  9145 ;; Auto vars:     Size  Location     Type
  9146 ;;  EPNum           1    5[COMMON] unsigned char 
  9147 ;;  handle          1    6[COMMON] PTR volatile struct __BD
  9148 ;;		 -> BDT(48), 
  9149 ;; Return value:  Size  Location     Type
  9150 ;;		None               void
  9151 ;; Registers used:
  9152 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9153 ;; Tracked objects:
  9154 ;;		On entry : 0/0
  9155 ;;		On exit  : 0/0
  9156 ;;		Unchanged: 0/0
  9157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9158 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9159 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9160 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9161 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9162 ;;Total ram usage:        7 bytes
  9163 ;; Hardware stack levels used:    1
  9164 ;; This function calls:
  9165 ;;		Nothing
  9166 ;; This function is called by:
  9167 ;;		_USBEnableEndpoint
  9168 ;; This function uses a non-reentrant model
  9169 ;;
  9170                           
  9171                           
  9172                           ;psect for function _USBConfigureEndpoint
  9173  0B27                     _USBConfigureEndpoint:	
  9174                           
  9175                           ;incstack = 0
  9176                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  9177                           ;USBConfigureEndpoint@EPNum stored from wreg
  9178  0B27  00F5               	movwf	USBConfigureEndpoint@EPNum
  9179                           
  9180                           ;usb_device.c: 1564: volatile BDT_ENTRY* handle;
  9181                           ;usb_device.c: 1568: handle = (volatile BDT_ENTRY*)&BDT[0];
  9182  0B28  3020               	movlw	32
  9183  0B29  00F1               	movwf	??_USBConfigureEndpoint
  9184  0B2A  0871               	movf	??_USBConfigureEndpoint,w
  9185  0B2B  00F6               	movwf	USBConfigureEndpoint@handle
  9186                           
  9187                           ;usb_device.c: 1569: handle += (4*EPNum+2*direction+0u);
  9188  0B2C  0870               	movf	USBConfigureEndpoint@direction,w
  9189  0B2D  00F1               	movwf	??_USBConfigureEndpoint
  9190  0B2E  3001               	movlw	1
  9191  0B2F                     u377_25:	
  9192  0B2F  35F1               	lslf	??_USBConfigureEndpoint,f
  9193  0B30  0B89               	decfsz	9,f
  9194  0B31  2B2F               	goto	u377_25
  9195  0B32  0875               	movf	USBConfigureEndpoint@EPNum,w
  9196  0B33  00F2               	movwf	??_USBConfigureEndpoint+1
  9197  0B34  3001               	movlw	1
  9198  0B35                     u378_25:	
  9199  0B35  35F2               	lslf	??_USBConfigureEndpoint+1,f
  9200  0B36  3EFF               	addlw	-1
  9201  0B37  1D03               	skipz
  9202  0B38  2B35               	goto	u378_25
  9203  0B39  3572               	lslf	??_USBConfigureEndpoint+1,w
  9204  0B3A  0771               	addwf	??_USBConfigureEndpoint,w
  9205  0B3B  00F3               	movwf	??_USBConfigureEndpoint+2
  9206  0B3C  3001               	movlw	1
  9207  0B3D                     u379_25:	
  9208  0B3D  35F3               	lslf	??_USBConfigureEndpoint+2,f
  9209  0B3E  3EFF               	addlw	-1
  9210  0B3F  1D03               	skipz
  9211  0B40  2B3D               	goto	u379_25
  9212  0B41  3573               	lslf	??_USBConfigureEndpoint+2,w
  9213  0B42  00F4               	movwf	??_USBConfigureEndpoint+3
  9214  0B43  0874               	movf	??_USBConfigureEndpoint+3,w
  9215  0B44  07F6               	addwf	USBConfigureEndpoint@handle,f
  9216                           
  9217                           ;usb_device.c: 1571: handle->STAT.UOWN = 0;
  9218  0B45  0876               	movf	USBConfigureEndpoint@handle,w
  9219  0B46  0086               	movwf	6
  9220  0B47  0187               	clrf	7
  9221  0B48  1381               	bcf	1,7
  9222                           
  9223                           ;usb_device.c: 1576: if(direction == 0)
  9224  0B49  0870               	movf	USBConfigureEndpoint@direction,w
  9225  0B4A  1D03               	btfss	3,2
  9226  0B4B  2B51               	goto	i1l4427
  9227                           
  9228                           ;usb_device.c: 1577: {
  9229                           ;usb_device.c: 1578: pBDTEntryOut[EPNum] = handle;
  9230  0B4C  0876               	movf	USBConfigureEndpoint@handle,w
  9231  0B4D  00F1               	movwf	??_USBConfigureEndpoint
  9232  0B4E  0875               	movf	USBConfigureEndpoint@EPNum,w
  9233  0B4F  3EB8               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  9234  0B50  2B55               	goto	L16
  9235  0B51                     i1l4427:	
  9236                           ;usb_device.c: 1579: }
  9237                           
  9238                           
  9239                           ;usb_device.c: 1580: else
  9240                           ;usb_device.c: 1581: {
  9241                           ;usb_device.c: 1582: pBDTEntryIn[EPNum] = handle;
  9242  0B51  0876               	movf	USBConfigureEndpoint@handle,w
  9243  0B52  00F1               	movwf	??_USBConfigureEndpoint
  9244  0B53  0875               	movf	USBConfigureEndpoint@EPNum,w
  9245  0B54  3EB5               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  9246  0B55                     L16:	
  9247  0B55  0086               	movwf	6
  9248  0B56  3001               	movlw	1	; select bank3/4
  9249  0B57  0087               	movwf	7
  9250  0B58  0871               	movf	??_USBConfigureEndpoint,w
  9251  0B59  0081               	movwf	1
  9252                           
  9253                           ;usb_device.c: 1583: }
  9254                           ;usb_device.c: 1586: handle->STAT.DTS = 0;
  9255  0B5A  0876               	movf	USBConfigureEndpoint@handle,w
  9256  0B5B  0086               	movwf	6
  9257  0B5C  0187               	clrf	7
  9258  0B5D  1301               	bcf	1,6
  9259                           
  9260                           ;usb_device.c: 1587: (handle+1)->STAT.DTS = 1;
  9261  0B5E  0876               	movf	USBConfigureEndpoint@handle,w
  9262  0B5F  3E04               	addlw	4
  9263  0B60  0086               	movwf	6
  9264  0B61  0187               	clrf	7
  9265  0B62  1701               	bsf	1,6
  9266  0B63  0008               	return
  9267  0B64                     __end_of_USBConfigureEndpoint:	
  9268                           
  9269                           	psect	text40
  9270  0A85                     __ptext40:	
  9271 ;; *************** function _USBCtrlTrfOutHandler *****************
  9272 ;; Defined at:
  9273 ;;		line 2563 in file "../../../../../../framework/usb/src/usb_device.c"
  9274 ;; Parameters:    Size  Location     Type
  9275 ;;		None
  9276 ;; Auto vars:     Size  Location     Type
  9277 ;;		None
  9278 ;; Return value:  Size  Location     Type
  9279 ;;		None               void
  9280 ;; Registers used:
  9281 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9282 ;; Tracked objects:
  9283 ;;		On entry : 0/0
  9284 ;;		On exit  : 0/0
  9285 ;;		Unchanged: 0/0
  9286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9289 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9290 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9291 ;;Total ram usage:        2 bytes
  9292 ;; Hardware stack levels used:    1
  9293 ;; Hardware stack levels required when called:    2
  9294 ;; This function calls:
  9295 ;;		_USBCtrlTrfRxService
  9296 ;; This function is called by:
  9297 ;;		_USBCtrlEPService
  9298 ;; This function uses a non-reentrant model
  9299 ;;
  9300                           
  9301                           
  9302                           ;psect for function _USBCtrlTrfOutHandler
  9303  0A85                     _USBCtrlTrfOutHandler:	
  9304                           
  9305                           ;usb_device.c: 2565: if(controlTransferState == 2)
  9306                           
  9307                           ;incstack = 0
  9308                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9309  0A85  3002               	movlw	2
  9310  0A86  0023               	movlb	3	; select bank3
  9311  0A87  0653               	xorwf	_controlTransferState^(0+384),w	;volatile
  9312  0A88  1D03               	btfss	3,2
  9313  0A89  2A8D               	goto	i1l5127
  9314                           
  9315                           ;usb_device.c: 2566: {
  9316                           ;usb_device.c: 2567: USBCtrlTrfRxService();
  9317  0A8A  3186  2625         	fcall	_USBCtrlTrfRxService
  9318                           
  9319                           ;usb_device.c: 2568: }
  9320  0A8C  0008               	return
  9321  0A8D                     i1l5127:	
  9322                           
  9323                           ;usb_device.c: 2569: else
  9324                           ;usb_device.c: 2570: {
  9325                           ;usb_device.c: 2573: controlTransferState = 0;
  9326  0A8D  0023               	movlb	3	; select bank3
  9327  0A8E  01D3               	clrf	_controlTransferState^(0+384)	;volatile
  9328                           
  9329                           ;usb_device.c: 2580: if(BothEP0OutUOWNsSet == 0)
  9330  0A8F  0841               	movf	_BothEP0OutUOWNsSet^(0+384),w	;volatile
  9331  0A90  1D03               	btfss	3,2
  9332  0A91  2AB2               	goto	i1l5139
  9333                           
  9334                           ;usb_device.c: 2581: {
  9335                           ;usb_device.c: 2582: pBDTEntryEP0OutNext->CNT = 8;
  9336  0A92  3008               	movlw	8
  9337  0A93  00F6               	movwf	??_USBCtrlTrfOutHandler
  9338  0A94  0021               	movlb	1	; select bank1
  9339  0A95  0A69               	incf	_pBDTEntryEP0OutNext^(0+128),w
  9340  0A96  0086               	movwf	6
  9341  0A97  0187               	clrf	7
  9342  0A98  0876               	movf	??_USBCtrlTrfOutHandler,w
  9343  0A99  0081               	movwf	1
  9344                           
  9345                           ;usb_device.c: 2583: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9346  0A9A  3050               	movlw	80
  9347  0A9B  00F6               	movwf	??_USBCtrlTrfOutHandler
  9348  0A9C  3000               	movlw	0
  9349  0A9D  00F7               	movwf	??_USBCtrlTrfOutHandler+1
  9350  0A9E  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9351  0A9F  3E02               	addlw	2
  9352  0AA0  0086               	movwf	6
  9353  0AA1  0187               	clrf	7
  9354  0AA2  0876               	movf	??_USBCtrlTrfOutHandler,w
  9355  0AA3  3FC0               	movwi [0]fsr1
  9356  0AA4  0877               	movf	??_USBCtrlTrfOutHandler+1,w
  9357  0AA5  3FC1               	movwi [1]fsr1
  9358                           
  9359                           ;usb_device.c: 2584: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9360  0AA6  300C               	movlw	12
  9361  0AA7  00F6               	movwf	??_USBCtrlTrfOutHandler
  9362  0AA8  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9363  0AA9  0086               	movwf	6
  9364  0AAA  0187               	clrf	7
  9365  0AAB  0876               	movf	??_USBCtrlTrfOutHandler,w
  9366  0AAC  0081               	movwf	1
  9367                           
  9368                           ;usb_device.c: 2585: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9369  0AAD  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9370  0AAE  0086               	movwf	6
  9371  0AAF  0187               	clrf	7
  9372  0AB0  1781               	bsf	1,7
  9373                           
  9374                           ;usb_device.c: 2586: }
  9375  0AB1  0008               	return
  9376  0AB2                     i1l5139:	
  9377                           
  9378                           ;usb_device.c: 2587: else
  9379                           ;usb_device.c: 2588: {
  9380                           ;usb_device.c: 2589: BothEP0OutUOWNsSet = 0;
  9381  0AB2  0023               	movlb	3	; select bank3
  9382  0AB3  01C1               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  9383  0AB4  0008               	return
  9384  0AB5                     __end_of_USBCtrlTrfOutHandler:	
  9385                           
  9386                           	psect	text41
  9387  0625                     __ptext41:	
  9388 ;; *************** function _USBCtrlTrfRxService *****************
  9389 ;; Defined at:
  9390 ;;		line 1871 in file "../../../../../../framework/usb/src/usb_device.c"
  9391 ;; Parameters:    Size  Location     Type
  9392 ;;		None
  9393 ;; Auto vars:     Size  Location     Type
  9394 ;;  byteToRead      1    5[COMMON] unsigned char 
  9395 ;;  i               1    4[COMMON] unsigned char 
  9396 ;; Return value:  Size  Location     Type
  9397 ;;		None               void
  9398 ;; Registers used:
  9399 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9400 ;; Tracked objects:
  9401 ;;		On entry : 0/0
  9402 ;;		On exit  : 0/0
  9403 ;;		Unchanged: 0/0
  9404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9406 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9407 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9408 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9409 ;;Total ram usage:        4 bytes
  9410 ;; Hardware stack levels used:    1
  9411 ;; Hardware stack levels required when called:    1
  9412 ;; This function calls:
  9413 ;;		_USBCtrlEPAllowStatusStage
  9414 ;; This function is called by:
  9415 ;;		_USBCtrlTrfOutHandler
  9416 ;; This function uses a non-reentrant model
  9417 ;;
  9418                           
  9419                           
  9420                           ;psect for function _USBCtrlTrfRxService
  9421  0625                     _USBCtrlTrfRxService:	
  9422                           
  9423                           ;usb_device.c: 1873: uint8_t byteToRead;
  9424                           ;usb_device.c: 1874: uint8_t i;
  9425                           ;usb_device.c: 1878: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  9426                           
  9427                           ;incstack = 0
  9428                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9429  0625  0021               	movlb	1	; select bank1
  9430  0626  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9431  0627  0086               	movwf	6
  9432  0628  0187               	clrf	7
  9433  0629  3F41               	moviw [1]fsr1
  9434  062A  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  9435                           
  9436                           ;usb_device.c: 1884: if(byteToRead > outPipes[0].wCount.Val)
  9437  062B  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  9438  062C  00F2               	movwf	??_USBCtrlTrfRxService
  9439  062D  01F3               	clrf	??_USBCtrlTrfRxService+1
  9440  062E  0873               	movf	??_USBCtrlTrfRxService+1,w
  9441  062F  0023               	movlb	3	; select bank3
  9442  0630  0224               	subwf	((_outPipes+1)^(0+384)+3),w	;volatile
  9443  0631  1D03               	skipz
  9444  0632  2E35               	goto	u448_25
  9445  0633  0872               	movf	??_USBCtrlTrfRxService,w
  9446  0634  0223               	subwf	(_outPipes^(0+384)+3),w	;volatile
  9447  0635                     u448_25:	
  9448  0635  1803               	skipnc
  9449  0636  2E3B               	goto	i1l510
  9450                           
  9451                           ;usb_device.c: 1885: {
  9452                           ;usb_device.c: 1886: byteToRead = outPipes[0].wCount.Val;
  9453  0637  0823               	movf	(_outPipes^(0+384)+3),w	;volatile
  9454  0638  00F2               	movwf	??_USBCtrlTrfRxService
  9455  0639  0872               	movf	??_USBCtrlTrfRxService,w
  9456  063A  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  9457  063B                     i1l510:	
  9458                           
  9459                           ;usb_device.c: 1887: }
  9460                           ;usb_device.c: 1889: outPipes[0].wCount.Val -= byteToRead;
  9461  063B  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  9462  063C  00F2               	movwf	??_USBCtrlTrfRxService
  9463  063D  01F3               	clrf	??_USBCtrlTrfRxService+1
  9464  063E  0872               	movf	??_USBCtrlTrfRxService,w
  9465  063F  02A3               	subwf	(_outPipes^(0+384)+3),f	;volatile
  9466  0640  0873               	movf	??_USBCtrlTrfRxService+1,w
  9467  0641  3BA4               	subwfb	((_outPipes+1)^(0+384)+3),f	;volatile
  9468                           
  9469                           ;usb_device.c: 1893: for(i=0;i<byteToRead;i++)
  9470  0642  01F4               	clrf	USBCtrlTrfRxService@i
  9471  0643                     i1l4999:	
  9472  0643  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  9473  0644  0274               	subwf	USBCtrlTrfRxService@i,w
  9474  0645  1803               	btfsc	3,0
  9475  0646  2E5C               	goto	i1l5001
  9476                           
  9477                           ;usb_device.c: 1894: {
  9478                           ;usb_device.c: 1895: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  9479  0647  0874               	movf	USBCtrlTrfRxService@i,w
  9480  0648  3E58               	addlw	88
  9481  0649  0086               	movwf	6
  9482  064A  0187               	clrf	7
  9483  064B  0801               	movf	1,w
  9484  064C  00F2               	movwf	??_USBCtrlTrfRxService
  9485  064D  0820               	movf	_outPipes^(0+384),w	;volatile
  9486  064E  0086               	movwf	6
  9487  064F  3001               	movlw	1	; select bank2/3
  9488  0650  0087               	movwf	7
  9489  0651  0872               	movf	??_USBCtrlTrfRxService,w
  9490  0652  0081               	movwf	1
  9491  0653  3001               	movlw	1
  9492  0654  00F2               	movwf	??_USBCtrlTrfRxService
  9493  0655  0872               	movf	??_USBCtrlTrfRxService,w
  9494  0656  07A0               	addwf	_outPipes^(0+384),f	;volatile
  9495  0657  3001               	movlw	1
  9496  0658  00F2               	movwf	??_USBCtrlTrfRxService
  9497  0659  0872               	movf	??_USBCtrlTrfRxService,w
  9498  065A  07F4               	addwf	USBCtrlTrfRxService@i,f
  9499  065B  2E43               	goto	i1l4999
  9500  065C                     i1l5001:	
  9501                           
  9502                           ;usb_device.c: 1896: }
  9503                           ;usb_device.c: 1900: if(outPipes[0].wCount.Val > 0)
  9504  065C  0823               	movf	(_outPipes^(0+384)+3),w	;volatile
  9505  065D  0424               	iorwf	((_outPipes+1)^(0+384)+3),w	;volatile
  9506  065E  1903               	btfsc	3,2
  9507  065F  2E91               	goto	i1l5013
  9508                           
  9509                           ;usb_device.c: 1901: {
  9510                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->CNT = 8;
  9511  0660  3008               	movlw	8
  9512  0661  00F2               	movwf	??_USBCtrlTrfRxService
  9513  0662  0021               	movlb	1	; select bank1
  9514  0663  0A69               	incf	_pBDTEntryEP0OutNext^(0+128),w
  9515  0664  0086               	movwf	6
  9516  0665  0187               	clrf	7
  9517  0666  0872               	movf	??_USBCtrlTrfRxService,w
  9518  0667  0081               	movwf	1
  9519                           
  9520                           ;usb_device.c: 1903: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  9521  0668  3058               	movlw	88
  9522  0669  00F2               	movwf	??_USBCtrlTrfRxService
  9523  066A  3000               	movlw	0
  9524  066B  00F3               	movwf	??_USBCtrlTrfRxService+1
  9525  066C  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9526  066D  3E02               	addlw	2
  9527  066E  0086               	movwf	6
  9528  066F  0187               	clrf	7
  9529  0670  0872               	movf	??_USBCtrlTrfRxService,w
  9530  0671  3FC0               	movwi [0]fsr1
  9531  0672  0873               	movf	??_USBCtrlTrfRxService+1,w
  9532  0673  3FC1               	movwi [1]fsr1
  9533                           
  9534                           ;usb_device.c: 1904: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  9535  0674  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9536  0675  0086               	movwf	6
  9537  0676  0187               	clrf	7
  9538  0677  1B01               	btfsc	1,6
  9539  0678  2E85               	goto	i1l5011
  9540                           
  9541                           ;usb_device.c: 1905: {
  9542                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9543  0679  3048               	movlw	72
  9544  067A  00F2               	movwf	??_USBCtrlTrfRxService
  9545  067B  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9546  067C  0086               	movwf	6
  9547  067D  0187               	clrf	7
  9548  067E  0872               	movf	??_USBCtrlTrfRxService,w
  9549  067F  0081               	movwf	1
  9550                           
  9551                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9552  0680  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9553  0681  0086               	movwf	6
  9554  0682  0187               	clrf	7
  9555  0683  1781               	bsf	1,7
  9556                           
  9557                           ;usb_device.c: 1908: }
  9558  0684  0008               	return
  9559  0685                     i1l5011:	
  9560                           
  9561                           ;usb_device.c: 1909: else
  9562                           ;usb_device.c: 1910: {
  9563                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  9564  0685  3008               	movlw	8
  9565  0686  00F2               	movwf	??_USBCtrlTrfRxService
  9566  0687  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9567  0688  0086               	movwf	6
  9568  0689  0187               	clrf	7
  9569  068A  0872               	movf	??_USBCtrlTrfRxService,w
  9570  068B  0081               	movwf	1
  9571                           
  9572                           ;usb_device.c: 1912: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9573  068C  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9574  068D  0086               	movwf	6
  9575  068E  0187               	clrf	7
  9576  068F  1781               	bsf	1,7
  9577                           
  9578                           ;usb_device.c: 1913: }
  9579                           ;usb_device.c: 1914: }
  9580  0690  0008               	return
  9581  0691                     i1l5013:	
  9582                           
  9583                           ;usb_device.c: 1915: else
  9584                           ;usb_device.c: 1916: {
  9585                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->CNT = 8;
  9586  0691  3008               	movlw	8
  9587  0692  00F2               	movwf	??_USBCtrlTrfRxService
  9588  0693  0021               	movlb	1	; select bank1
  9589  0694  0A69               	incf	_pBDTEntryEP0OutNext^(0+128),w
  9590  0695  0086               	movwf	6
  9591  0696  0187               	clrf	7
  9592  0697  0872               	movf	??_USBCtrlTrfRxService,w
  9593  0698  0081               	movwf	1
  9594                           
  9595                           ;usb_device.c: 1921: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9596  0699  3050               	movlw	80
  9597  069A  00F2               	movwf	??_USBCtrlTrfRxService
  9598  069B  3000               	movlw	0
  9599  069C  00F3               	movwf	??_USBCtrlTrfRxService+1
  9600  069D  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9601  069E  3E02               	addlw	2
  9602  069F  0086               	movwf	6
  9603  06A0  0187               	clrf	7
  9604  06A1  0872               	movf	??_USBCtrlTrfRxService,w
  9605  06A2  3FC0               	movwi [0]fsr1
  9606  06A3  0873               	movf	??_USBCtrlTrfRxService+1,w
  9607  06A4  3FC1               	movwi [1]fsr1
  9608                           
  9609                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9610  06A5  3004               	movlw	4
  9611  06A6  00F2               	movwf	??_USBCtrlTrfRxService
  9612  06A7  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9613  06A8  0086               	movwf	6
  9614  06A9  0187               	clrf	7
  9615  06AA  0872               	movf	??_USBCtrlTrfRxService,w
  9616  06AB  0081               	movwf	1
  9617                           
  9618                           ;usb_device.c: 1926: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9619  06AC  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9620  06AD  0086               	movwf	6
  9621  06AE  0187               	clrf	7
  9622  06AF  1781               	bsf	1,7
  9623                           
  9624                           ;usb_device.c: 1934: {
  9625                           ;usb_device.c: 1940: outPipes[0].pFunc();
  9626  06B0  0023               	movlb	3	; select bank3
  9627  06B1  0825               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
  9628  06B2  0826               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
  9629                           
  9630                           ;usb_device.c: 1945: }
  9631                           ;usb_device.c: 1946: outPipes[0].info.bits.busy = 0;
  9632  06B3  13A2               	bcf	(_outPipes^(0+384)+2),7	;volatile
  9633                           
  9634                           ;usb_device.c: 1960: if(USBDeferStatusStagePacket == 0)
  9635  06B4  0848               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  9636  06B5  1D03               	btfss	3,2
  9637  06B6  0008               	return
  9638                           
  9639                           ;usb_device.c: 1961: {
  9640                           ;usb_device.c: 1962: USBCtrlEPAllowStatusStage();
  9641  06B7  318E  26BD         	fcall	_USBCtrlEPAllowStatusStage
  9642  06B9  0008               	return
  9643  06BA                     __end_of_USBCtrlTrfRxService:	
  9644                           
  9645                           	psect	text42
  9646  0EBD                     __ptext42:	
  9647 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  9648 ;; Defined at:
  9649 ;;		line 1435 in file "../../../../../../framework/usb/src/usb_device.c"
  9650 ;; Parameters:    Size  Location     Type
  9651 ;;		None
  9652 ;; Auto vars:     Size  Location     Type
  9653 ;;		None
  9654 ;; Return value:  Size  Location     Type
  9655 ;;		None               void
  9656 ;; Registers used:
  9657 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9658 ;; Tracked objects:
  9659 ;;		On entry : 0/0
  9660 ;;		On exit  : 0/0
  9661 ;;		Unchanged: 0/0
  9662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9665 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9666 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9667 ;;Total ram usage:        2 bytes
  9668 ;; Hardware stack levels used:    1
  9669 ;; This function calls:
  9670 ;;		Nothing
  9671 ;; This function is called by:
  9672 ;;		_USBDeviceTasks
  9673 ;;		_USBCtrlEPServiceComplete
  9674 ;;		_USBCtrlTrfRxService
  9675 ;; This function uses a non-reentrant model
  9676 ;;
  9677                           
  9678                           
  9679                           ;psect for function _USBCtrlEPAllowStatusStage
  9680  0EBD                     _USBCtrlEPAllowStatusStage:	
  9681                           
  9682                           ;usb_device.c: 1442: if(USBStatusStageEnabledFlag1 == 0)
  9683                           
  9684                           ;incstack = 0
  9685                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  9686  0EBD  0023               	movlb	3	; select bank3
  9687  0EBE  084A               	movf	_USBStatusStageEnabledFlag1^(0+384),w	;volatile
  9688  0EBF  1D03               	btfss	3,2
  9689  0EC0  0008               	return
  9690                           
  9691                           ;usb_device.c: 1443: {
  9692                           ;usb_device.c: 1444: USBStatusStageEnabledFlag1 = 1;
  9693  0EC1  3001               	movlw	1
  9694  0EC2  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9695  0EC3  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9696  0EC4  00CA               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  9697                           
  9698                           ;usb_device.c: 1445: if(USBStatusStageEnabledFlag2 == 0)
  9699  0EC5  084B               	movf	_USBStatusStageEnabledFlag2^(0+384),w	;volatile
  9700  0EC6  1D03               	btfss	3,2
  9701  0EC7  0008               	return
  9702                           
  9703                           ;usb_device.c: 1446: {
  9704                           ;usb_device.c: 1447: USBStatusStageEnabledFlag2 = 1;
  9705  0EC8  3001               	movlw	1
  9706  0EC9  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9707  0ECA  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9708  0ECB  00CB               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  9709                           
  9710                           ;usb_device.c: 1451: if(controlTransferState == 2)
  9711  0ECC  3002               	movlw	2
  9712  0ECD  0653               	xorwf	_controlTransferState^(0+384),w	;volatile
  9713  0ECE  1D03               	btfss	3,2
  9714  0ECF  2EE0               	goto	i1l4693
  9715                           
  9716                           ;usb_device.c: 1452: {
  9717                           ;usb_device.c: 1453: pBDTEntryIn[0]->CNT = 0;
  9718  0ED0  0A35               	incf	_pBDTEntryIn^(0+384),w
  9719  0ED1  0086               	movwf	6
  9720  0ED2  0187               	clrf	7
  9721  0ED3  0181               	clrf	1
  9722                           
  9723                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9724  0ED4  3048               	movlw	72
  9725  0ED5  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9726  0ED6  0835               	movf	_pBDTEntryIn^(0+384),w
  9727  0ED7  0086               	movwf	6
  9728  0ED8  0187               	clrf	7
  9729  0ED9  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9730  0EDA  0081               	movwf	1
  9731                           
  9732                           ;usb_device.c: 1455: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9733  0EDB  0835               	movf	_pBDTEntryIn^(0+384),w
  9734  0EDC  0086               	movwf	6
  9735  0EDD  0187               	clrf	7
  9736  0EDE  1781               	bsf	1,7
  9737                           
  9738                           ;usb_device.c: 1456: }
  9739  0EDF  0008               	return
  9740  0EE0                     i1l4693:	
  9741                           
  9742                           ;usb_device.c: 1457: else if(controlTransferState == 1)
  9743  0EE0  0353               	decf	_controlTransferState^(0+384),w	;volatile
  9744  0EE1  1D03               	btfss	3,2
  9745  0EE2  0008               	return
  9746                           
  9747                           ;usb_device.c: 1458: {
  9748                           ;usb_device.c: 1459: BothEP0OutUOWNsSet = 0;
  9749  0EE3  01C1               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  9750                           
  9751                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->CNT = 8;
  9752  0EE4  3008               	movlw	8
  9753  0EE5  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9754  0EE6  0021               	movlb	1	; select bank1
  9755  0EE7  0A68               	incf	_pBDTEntryEP0OutCurrent^(0+128),w
  9756  0EE8  0086               	movwf	6
  9757  0EE9  0187               	clrf	7
  9758  0EEA  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9759  0EEB  0081               	movwf	1
  9760                           
  9761                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9762  0EEC  3050               	movlw	80
  9763  0EED  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9764  0EEE  3000               	movlw	0
  9765  0EEF  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  9766  0EF0  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9767  0EF1  3E02               	addlw	2
  9768  0EF2  0086               	movwf	6
  9769  0EF3  0187               	clrf	7
  9770  0EF4  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9771  0EF5  3FC0               	movwi [0]fsr1
  9772  0EF6  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  9773  0EF7  3FC1               	movwi [1]fsr1
  9774                           
  9775                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  9776  0EF8  3004               	movlw	4
  9777  0EF9  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9778  0EFA  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9779  0EFB  0086               	movwf	6
  9780  0EFC  0187               	clrf	7
  9781  0EFD  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9782  0EFE  0081               	movwf	1
  9783                           
  9784                           ;usb_device.c: 1467: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  9785  0EFF  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9786  0F00  0086               	movwf	6
  9787  0F01  0187               	clrf	7
  9788  0F02  1781               	bsf	1,7
  9789                           
  9790                           ;usb_device.c: 1468: BothEP0OutUOWNsSet = 1;
  9791  0F03  3001               	movlw	1
  9792  0F04  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9793  0F05  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9794  0F06  0023               	movlb	3	; select bank3
  9795  0F07  00C1               	movwf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  9796                           
  9797                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->CNT = 8;
  9798  0F08  3008               	movlw	8
  9799  0F09  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9800  0F0A  0021               	movlb	1	; select bank1
  9801  0F0B  0A69               	incf	_pBDTEntryEP0OutNext^(0+128),w
  9802  0F0C  0086               	movwf	6
  9803  0F0D  0187               	clrf	7
  9804  0F0E  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9805  0F0F  0081               	movwf	1
  9806                           
  9807                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9808  0F10  3050               	movlw	80
  9809  0F11  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9810  0F12  3000               	movlw	0
  9811  0F13  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  9812  0F14  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9813  0F15  3E02               	addlw	2
  9814  0F16  0086               	movwf	6
  9815  0F17  0187               	clrf	7
  9816  0F18  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9817  0F19  3FC0               	movwi [0]fsr1
  9818  0F1A  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  9819  0F1B  3FC1               	movwi [1]fsr1
  9820                           
  9821                           ;usb_device.c: 1474: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  9822  0F1C  3080               	movlw	128
  9823  0F1D  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9824  0F1E  0869               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9825  0F1F  0086               	movwf	6
  9826  0F20  0187               	clrf	7
  9827  0F21  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9828  0F22  0081               	movwf	1
  9829  0F23  0008               	return
  9830  0F24                     __end_of_USBCtrlEPAllowStatusStage:	
  9831                           
  9832                           	psect	text43
  9833  0E59                     __ptext43:	
  9834 ;; *************** function _USBCtrlTrfInHandler *****************
  9835 ;; Defined at:
  9836 ;;		line 2617 in file "../../../../../../framework/usb/src/usb_device.c"
  9837 ;; Parameters:    Size  Location     Type
  9838 ;;		None
  9839 ;; Auto vars:     Size  Location     Type
  9840 ;;  lastDTS         1    5[COMMON] unsigned char 
  9841 ;; Return value:  Size  Location     Type
  9842 ;;		None               void
  9843 ;; Registers used:
  9844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9845 ;; Tracked objects:
  9846 ;;		On entry : 0/0
  9847 ;;		On exit  : 0/0
  9848 ;;		Unchanged: 0/0
  9849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9851 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9852 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9853 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9854 ;;Total ram usage:        3 bytes
  9855 ;; Hardware stack levels used:    1
  9856 ;; Hardware stack levels required when called:    1
  9857 ;; This function calls:
  9858 ;;		_USBCtrlTrfTxService
  9859 ;; This function is called by:
  9860 ;;		_USBCtrlEPService
  9861 ;; This function uses a non-reentrant model
  9862 ;;
  9863                           
  9864                           
  9865                           ;psect for function _USBCtrlTrfInHandler
  9866  0E59                     _USBCtrlTrfInHandler:	
  9867                           
  9868                           ;usb_device.c: 2619: uint8_t lastDTS;
  9869                           ;usb_device.c: 2621: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  9870                           
  9871                           ;incstack = 0
  9872                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9873  0E59  0023               	movlb	3	; select bank3
  9874  0E5A  0835               	movf	_pBDTEntryIn^(0+384),w
  9875  0E5B  0086               	movwf	6
  9876  0E5C  0187               	clrf	7
  9877  0E5D  3000               	movlw	0
  9878  0E5E  1B01               	btfsc	1,6
  9879  0E5F  3001               	movlw	1
  9880  0E60  00F5               	movwf	USBCtrlTrfInHandler@lastDTS
  9881                           
  9882                           ;usb_device.c: 2624: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9883  0E61  3004               	movlw	4
  9884  0E62  00F3               	movwf	??_USBCtrlTrfInHandler
  9885  0E63  0873               	movf	??_USBCtrlTrfInHandler,w
  9886  0E64  06B5               	xorwf	_pBDTEntryIn^(0+384),f
  9887                           
  9888                           ;usb_device.c: 2629: if(USBDeviceState == ADR_PENDING_STATE)
  9889  0E65  3008               	movlw	8
  9890  0E66  0649               	xorwf	_USBDeviceState^(0+384),w	;volatile
  9891  0E67  1D03               	btfss	3,2
  9892  0E68  2E78               	goto	i1l5155
  9893                           
  9894                           ;usb_device.c: 2630: {
  9895                           ;usb_device.c: 2631: UADDR = (SetupPkt.bDevADR & 0x7F);
  9896  0E69  0020               	movlb	0	; select bank0
  9897  0E6A  0852               	movf	82,w	;volatile
  9898  0E6B  397F               	andlw	127
  9899  0E6C  003D               	movlb	29	; select bank29
  9900  0E6D  0096               	movwf	22	;volatile
  9901                           
  9902                           ;usb_device.c: 2632: if(UADDR != 0u)
  9903  0E6E  0816               	movf	22,w	;volatile
  9904  0E6F  1903               	btfsc	3,2
  9905  0E70  2E73               	goto	i1l5153
  9906                           
  9907                           ;usb_device.c: 2633: {
  9908                           ;usb_device.c: 2634: USBDeviceState=ADDRESS_STATE;
  9909  0E71  3010               	movlw	16
  9910  0E72  2E74               	goto	L17
  9911  0E73                     i1l5153:	
  9912                           ;usb_device.c: 2635: }
  9913                           
  9914                           
  9915                           ;usb_device.c: 2636: else
  9916                           ;usb_device.c: 2637: {
  9917                           ;usb_device.c: 2638: USBDeviceState=DEFAULT_STATE;
  9918  0E73  3004               	movlw	4
  9919  0E74                     L17:	
  9920  0E74  00F3               	movwf	??_USBCtrlTrfInHandler
  9921  0E75  0873               	movf	??_USBCtrlTrfInHandler,w
  9922  0E76  0023               	movlb	3	; select bank3
  9923  0E77  00C9               	movwf	_USBDeviceState^(0+384)	;volatile
  9924  0E78                     i1l5155:	
  9925                           
  9926                           ;usb_device.c: 2639: }
  9927                           ;usb_device.c: 2640: }
  9928                           ;usb_device.c: 2643: if(controlTransferState == 1)
  9929  0E78  0353               	decf	_controlTransferState^(0+384),w	;volatile
  9930  0E79  1D03               	btfss	3,2
  9931  0E7A  2EB6               	goto	i1l597
  9932                           
  9933                           ;usb_device.c: 2644: {
  9934                           ;usb_device.c: 2645: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  9935  0E7B  3058               	movlw	88
  9936  0E7C  00F3               	movwf	??_USBCtrlTrfInHandler
  9937  0E7D  3000               	movlw	0
  9938  0E7E  00F4               	movwf	??_USBCtrlTrfInHandler+1
  9939  0E7F  0835               	movf	_pBDTEntryIn^(0+384),w
  9940  0E80  3E02               	addlw	2
  9941  0E81  0086               	movwf	6
  9942  0E82  0187               	clrf	7
  9943  0E83  0873               	movf	??_USBCtrlTrfInHandler,w
  9944  0E84  3FC0               	movwi [0]fsr1
  9945  0E85  0874               	movf	??_USBCtrlTrfInHandler+1,w
  9946  0E86  3FC1               	movwi [1]fsr1
  9947                           
  9948                           ;usb_device.c: 2646: USBCtrlTrfTxService();
  9949  0E87  318F  2791  318E   	fcall	_USBCtrlTrfTxService
  9950                           
  9951                           ;usb_device.c: 2652: if(shortPacketStatus == 2)
  9952  0E8A  3002               	movlw	2
  9953  0E8B  0023               	movlb	3	; select bank3
  9954  0E8C  0657               	xorwf	_shortPacketStatus^(0+384),w	;volatile
  9955  0E8D  1D03               	btfss	3,2
  9956  0E8E  2E9B               	goto	i1l5165
  9957                           
  9958                           ;usb_device.c: 2653: {
  9959                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val = 0x04;
  9960  0E8F  3004               	movlw	4
  9961  0E90  00F3               	movwf	??_USBCtrlTrfInHandler
  9962  0E91  0835               	movf	_pBDTEntryIn^(0+384),w
  9963  0E92  0086               	movwf	6
  9964  0E93  0187               	clrf	7
  9965  0E94  0873               	movf	??_USBCtrlTrfInHandler,w
  9966  0E95  0081               	movwf	1
  9967                           
  9968                           ;usb_device.c: 2657: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9969  0E96  0835               	movf	_pBDTEntryIn^(0+384),w
  9970  0E97  0086               	movwf	6
  9971  0E98  0187               	clrf	7
  9972  0E99  1781               	bsf	1,7
  9973                           
  9974                           ;usb_device.c: 2658: }
  9975  0E9A  0008               	return
  9976  0E9B                     i1l5165:	
  9977                           
  9978                           ;usb_device.c: 2659: else
  9979                           ;usb_device.c: 2660: {
  9980                           ;usb_device.c: 2661: if(lastDTS == 0)
  9981  0E9B  0875               	movf	USBCtrlTrfInHandler@lastDTS,w
  9982  0E9C  1D03               	btfss	3,2
  9983  0E9D  2EAA               	goto	i1l5169
  9984                           
  9985                           ;usb_device.c: 2662: {
  9986                           ;usb_device.c: 2663: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9987  0E9E  3048               	movlw	72
  9988  0E9F  00F3               	movwf	??_USBCtrlTrfInHandler
  9989  0EA0  0835               	movf	_pBDTEntryIn^(0+384),w
  9990  0EA1  0086               	movwf	6
  9991  0EA2  0187               	clrf	7
  9992  0EA3  0873               	movf	??_USBCtrlTrfInHandler,w
  9993  0EA4  0081               	movwf	1
  9994                           
  9995                           ;usb_device.c: 2664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9996  0EA5  0835               	movf	_pBDTEntryIn^(0+384),w
  9997  0EA6  0086               	movwf	6
  9998  0EA7  0187               	clrf	7
  9999  0EA8  1781               	bsf	1,7
 10000                           
 10001                           ;usb_device.c: 2665: }
 10002  0EA9  0008               	return
 10003  0EAA                     i1l5169:	
 10004                           
 10005                           ;usb_device.c: 2666: else
 10006                           ;usb_device.c: 2667: {
 10007                           ;usb_device.c: 2668: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 10008  0EAA  3008               	movlw	8
 10009  0EAB  00F3               	movwf	??_USBCtrlTrfInHandler
 10010  0EAC  0835               	movf	_pBDTEntryIn^(0+384),w
 10011  0EAD  0086               	movwf	6
 10012  0EAE  0187               	clrf	7
 10013  0EAF  0873               	movf	??_USBCtrlTrfInHandler,w
 10014  0EB0  0081               	movwf	1
 10015                           
 10016                           ;usb_device.c: 2669: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10017  0EB1  0835               	movf	_pBDTEntryIn^(0+384),w
 10018  0EB2  0086               	movwf	6
 10019  0EB3  0187               	clrf	7
 10020  0EB4  1781               	bsf	1,7
 10021                           
 10022                           ;usb_device.c: 2670: }
 10023                           ;usb_device.c: 2671: }
 10024                           ;usb_device.c: 2672: }
 10025  0EB5  0008               	return
 10026  0EB6                     i1l597:	
 10027                           
 10028                           ;usb_device.c: 2673: else
 10029                           ;usb_device.c: 2674: {
 10030                           ;usb_device.c: 2678: if(outPipes[0].info.bits.busy == 1)
 10031  0EB6  1FA2               	btfss	(_outPipes^(0+384)+2),7	;volatile
 10032  0EB7  2EBB               	goto	i1l5173
 10033                           
 10034                           ;usb_device.c: 2681: {
 10035                           ;usb_device.c: 2682: outPipes[0].pFunc();
 10036  0EB8  0825               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
 10037  0EB9  0826               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
 10038                           
 10039                           ;usb_device.c: 2683: }
 10040                           ;usb_device.c: 2684: outPipes[0].info.bits.busy = 0;
 10041  0EBA  13A2               	bcf	(_outPipes^(0+384)+2),7	;volatile
 10042  0EBB                     i1l5173:	
 10043                           
 10044                           ;usb_device.c: 2685: }
 10045                           ;usb_device.c: 2687: controlTransferState = 0;
 10046  0EBB  01D3               	clrf	_controlTransferState^(0+384)	;volatile
 10047  0EBC  0008               	return
 10048  0EBD                     __end_of_USBCtrlTrfInHandler:	
 10049                           
 10050                           	psect	text44
 10051  0F91                     __ptext44:	
 10052 ;; *************** function _USBCtrlTrfTxService *****************
 10053 ;; Defined at:
 10054 ;;		line 1790 in file "../../../../../../framework/usb/src/usb_device.c"
 10055 ;; Parameters:    Size  Location     Type
 10056 ;;		None
 10057 ;; Auto vars:     Size  Location     Type
 10058 ;;  byteToSend      1    2[COMMON] unsigned char 
 10059 ;; Return value:  Size  Location     Type
 10060 ;;		None               void
 10061 ;; Registers used:
 10062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 10063 ;; Tracked objects:
 10064 ;;		On entry : 0/0
 10065 ;;		On exit  : 0/0
 10066 ;;		Unchanged: 0/0
 10067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10069 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10070 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10071 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10072 ;;Total ram usage:        3 bytes
 10073 ;; Hardware stack levels used:    1
 10074 ;; This function calls:
 10075 ;;		Nothing
 10076 ;; This function is called by:
 10077 ;;		_USBCtrlEPAllowDataStage
 10078 ;;		_USBCtrlTrfInHandler
 10079 ;; This function uses a non-reentrant model
 10080 ;;
 10081                           
 10082                           
 10083                           ;psect for function _USBCtrlTrfTxService
 10084  0F91                     _USBCtrlTrfTxService:	
 10085                           
 10086                           ;usb_device.c: 1792: uint8_t byteToSend;
 10087                           ;usb_device.c: 1796: byteToSend = 8;
 10088                           
 10089                           ;incstack = 0
 10090                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
 10091  0F91  3008               	movlw	8
 10092  0F92  00F0               	movwf	??_USBCtrlTrfTxService
 10093  0F93  0870               	movf	??_USBCtrlTrfTxService,w
 10094  0F94  00F2               	movwf	USBCtrlTrfTxService@byteToSend
 10095                           
 10096                           ;usb_device.c: 1797: if(inPipes[0].wCount.Val < (uint8_t)8)
 10097  0F95  3000               	movlw	0
 10098  0F96  0021               	movlb	1	; select bank1
 10099  0F97  026E               	subwf	((_inPipes+1)^(0+128)+3),w	;volatile
 10100  0F98  3008               	movlw	8
 10101  0F99  1903               	skipnz
 10102  0F9A  026D               	subwf	(_inPipes^(0+128)+3),w	;volatile
 10103  0F9B  1803               	skipnc
 10104  0F9C  2FAE               	goto	i1l495
 10105                           
 10106                           ;usb_device.c: 1798: {
 10107                           ;usb_device.c: 1799: byteToSend = inPipes[0].wCount.Val;
 10108  0F9D  086D               	movf	(_inPipes^(0+128)+3),w	;volatile
 10109  0F9E  00F0               	movwf	??_USBCtrlTrfTxService
 10110  0F9F  0870               	movf	??_USBCtrlTrfTxService,w
 10111  0FA0  00F2               	movwf	USBCtrlTrfTxService@byteToSend
 10112                           
 10113                           ;usb_device.c: 1806: if(shortPacketStatus == 0)
 10114  0FA1  0023               	movlb	3	; select bank3
 10115  0FA2  0857               	movf	_shortPacketStatus^(0+384),w	;volatile
 10116  0FA3  1D03               	btfss	3,2
 10117  0FA4  2FA7               	goto	i1l4637
 10118                           
 10119                           ;usb_device.c: 1807: {
 10120                           ;usb_device.c: 1808: shortPacketStatus = 1;
 10121  0FA5  3001               	movlw	1
 10122  0FA6  2FAB               	goto	L18
 10123  0FA7                     i1l4637:	
 10124                           ;usb_device.c: 1809: }
 10125                           
 10126                           
 10127                           ;usb_device.c: 1810: else if(shortPacketStatus == 1)
 10128  0FA7  0357               	decf	_shortPacketStatus^(0+384),w	;volatile
 10129  0FA8  1D03               	btfss	3,2
 10130  0FA9  2FAE               	goto	i1l495
 10131                           
 10132                           ;usb_device.c: 1811: {
 10133                           ;usb_device.c: 1812: shortPacketStatus = 2;
 10134  0FAA  3002               	movlw	2
 10135  0FAB                     L18:	
 10136  0FAB  00F0               	movwf	??_USBCtrlTrfTxService
 10137  0FAC  0870               	movf	??_USBCtrlTrfTxService,w
 10138  0FAD  00D7               	movwf	_shortPacketStatus^(0+384)	;volatile
 10139  0FAE                     i1l495:	
 10140                           
 10141                           ;usb_device.c: 1813: }
 10142                           ;usb_device.c: 1814: }
 10143                           ;usb_device.c: 1818: inPipes[0].wCount.Val -= byteToSend;
 10144  0FAE  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 10145  0FAF  00F0               	movwf	??_USBCtrlTrfTxService
 10146  0FB0  01F1               	clrf	??_USBCtrlTrfTxService+1
 10147  0FB1  0870               	movf	??_USBCtrlTrfTxService,w
 10148  0FB2  0021               	movlb	1	; select bank1
 10149  0FB3  02ED               	subwf	(_inPipes^(0+128)+3),f	;volatile
 10150  0FB4  0871               	movf	??_USBCtrlTrfTxService+1,w
 10151  0FB5  3BEE               	subwfb	((_inPipes+1)^(0+128)+3),f	;volatile
 10152                           
 10153                           ;usb_device.c: 1823: pBDTEntryIn[0]->CNT = byteToSend;
 10154  0FB6  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 10155  0FB7  00F0               	movwf	??_USBCtrlTrfTxService
 10156  0FB8  0023               	movlb	3	; select bank3
 10157  0FB9  0A35               	incf	_pBDTEntryIn^(0+384),w
 10158  0FBA  0086               	movwf	6
 10159  0FBB  0187               	clrf	7
 10160  0FBC  0870               	movf	??_USBCtrlTrfTxService,w
 10161  0FBD  0081               	movwf	1
 10162                           
 10163                           ;usb_device.c: 1827: pDst = (volatile uint8_t*)CtrlTrfData;
 10164  0FBE  3058               	movlw	88
 10165  0FBF  00F0               	movwf	??_USBCtrlTrfTxService
 10166  0FC0  0870               	movf	??_USBCtrlTrfTxService,w
 10167  0FC1  00D6               	movwf	_pDst^(0+384)
 10168                           
 10169                           ;usb_device.c: 1828: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 10170  0FC2  0021               	movlb	1	; select bank1
 10171  0FC3  1C6C               	btfss	(_inPipes^(0+128)+2),0	;volatile
 10172  0FC4  2FDF               	goto	i1l4657
 10173  0FC5  2FFC               	goto	i1l4667
 10174  0FC6                     i1l4649:	
 10175                           ;usb_device.c: 1829: {
 10176                           ;usb_device.c: 1830: while(byteToSend)
 10177                           
 10178                           
 10179                           ;usb_device.c: 1831: {
 10180                           ;usb_device.c: 1832: *pDst++ = *inPipes[0].pSrc.bRom++;
 10181  0FC6  0021               	movlb	1	; select bank1
 10182  0FC7  086A               	movf	_inPipes^(0+128),w	;volatile
 10183  0FC8  0084               	movwf	4
 10184  0FC9  086B               	movf	(_inPipes+1)^(0+128),w	;volatile
 10185  0FCA  0085               	movwf	5
 10186  0FCB  0800               	movf	0,w	;code access
 10187  0FCC  00F0               	movwf	??_USBCtrlTrfTxService
 10188  0FCD  0023               	movlb	3	; select bank3
 10189  0FCE  0856               	movf	_pDst^(0+384),w
 10190  0FCF  0086               	movwf	6
 10191  0FD0  0187               	clrf	7
 10192  0FD1  0870               	movf	??_USBCtrlTrfTxService,w
 10193  0FD2  0081               	movwf	1
 10194  0FD3  3001               	movlw	1
 10195  0FD4  0021               	movlb	1	; select bank1
 10196  0FD5  07EA               	addwf	_inPipes^(0+128),f	;volatile
 10197  0FD6  3000               	movlw	0
 10198  0FD7  3DEB               	addwfc	(_inPipes+1)^(0+128),f	;volatile
 10199  0FD8  3001               	movlw	1
 10200  0FD9  00F0               	movwf	??_USBCtrlTrfTxService
 10201  0FDA  0870               	movf	??_USBCtrlTrfTxService,w
 10202  0FDB  0023               	movlb	3	; select bank3
 10203  0FDC  07D6               	addwf	_pDst^(0+384),f
 10204                           
 10205                           ;usb_device.c: 1833: byteToSend--;
 10206  0FDD  3001               	movlw	1
 10207  0FDE  02F2               	subwf	USBCtrlTrfTxService@byteToSend,f
 10208  0FDF                     i1l4657:	
 10209  0FDF  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 10210  0FE0  1903               	btfsc	3,2
 10211  0FE1  0008               	return
 10212  0FE2  2FC6               	goto	i1l4649
 10213  0FE3                     i1l4659:	
 10214                           ;usb_device.c: 1836: else
 10215                           ;usb_device.c: 1837: {
 10216                           ;usb_device.c: 1838: while(byteToSend)
 10217                           
 10218                           ;usb_device.c: 1834: }
 10219                           ;usb_device.c: 1835: }
 10220                           
 10221                           
 10222                           ;usb_device.c: 1839: {
 10223                           ;usb_device.c: 1840: *pDst++ = *inPipes[0].pSrc.bRam++;
 10224  0FE3  0021               	movlb	1	; select bank1
 10225  0FE4  086A               	movf	_inPipes^(0+128),w	;volatile
 10226  0FE5  0084               	movwf	4
 10227  0FE6  086B               	movf	(_inPipes+1)^(0+128),w	;volatile
 10228  0FE7  0085               	movwf	5
 10229  0FE8  0800               	movf	0,w	;code access
 10230  0FE9  00F0               	movwf	??_USBCtrlTrfTxService
 10231  0FEA  0023               	movlb	3	; select bank3
 10232  0FEB  0856               	movf	_pDst^(0+384),w
 10233  0FEC  0086               	movwf	6
 10234  0FED  0187               	clrf	7
 10235  0FEE  0870               	movf	??_USBCtrlTrfTxService,w
 10236  0FEF  0081               	movwf	1
 10237  0FF0  3001               	movlw	1
 10238  0FF1  0021               	movlb	1	; select bank1
 10239  0FF2  07EA               	addwf	_inPipes^(0+128),f	;volatile
 10240  0FF3  3000               	movlw	0
 10241  0FF4  3DEB               	addwfc	(_inPipes+1)^(0+128),f	;volatile
 10242  0FF5  3001               	movlw	1
 10243  0FF6  00F0               	movwf	??_USBCtrlTrfTxService
 10244  0FF7  0870               	movf	??_USBCtrlTrfTxService,w
 10245  0FF8  0023               	movlb	3	; select bank3
 10246  0FF9  07D6               	addwf	_pDst^(0+384),f
 10247                           
 10248                           ;usb_device.c: 1841: byteToSend--;
 10249  0FFA  3001               	movlw	1
 10250  0FFB  02F2               	subwf	USBCtrlTrfTxService@byteToSend,f
 10251  0FFC                     i1l4667:	
 10252  0FFC  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 10253  0FFD  1903               	btfsc	3,2
 10254  0FFE  0008               	return
 10255  0FFF  2FE3               	goto	i1l4659
 10256  1000                     __end_of_USBCtrlTrfTxService:	
 10257  007E                     btemp	set	126	;btemp
 10258  007E                     wtemp	set	126
 10259  007E                     wtemp0	set	126
 10260  0080                     wtemp1	set	128
 10261  0082                     wtemp2	set	130
 10262  0084                     wtemp3	set	132
 10263  0086                     wtemp4	set	134
 10264  0088                     wtemp5	set	136
 10265  007F                     wtemp6	set	127
 10266  007E                     ttemp	set	126
 10267  007E                     ttemp0	set	126
 10268  0081                     ttemp1	set	129
 10269  0084                     ttemp2	set	132
 10270  0087                     ttemp3	set	135
 10271  007F                     ttemp4	set	127
 10272  007E                     ltemp	set	126
 10273  007E                     ltemp0	set	126
 10274  0082                     ltemp1	set	130
 10275  0086                     ltemp2	set	134
 10276  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    201
    Data        18
    BSS         220
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            16     16      16
    BANK1            16      8      15
    BANK2            16     16      16
    BANK3            80      2      77
    BANK4            80      0      28
    BANK5            80      0      64
    BANK6            80      0      64
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK3[1]), USBActiveConfiguration(BANK3[1]), NULL(NULL[0]), BDT(BANK0[48]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    putrsUSBUSART@data	PTR const unsigned char  size(1) Largest target is 18
		 -> buttonMessage(BANK4[18]), 

    putrsUSBUSART@pData	PTR const unsigned char  size(1) Largest target is 18
		 -> buttonMessage(BANK4[18]), 

    putUSBUSART@data	PTR unsigned char  size(1) Largest target is 64
		 -> writeBuffer(BANK6[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK5[64]), 

    CDCDataInHandle	PTR void  size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    CDCDataOutHandle	PTR void  size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S1738_POINTER$wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S1738_POINTER$bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S1738_POINTER$wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S1738_POINTER$bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR volatile unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(BANK0[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK1[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    S632$pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    S622$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S622$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S598$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S598$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S598$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S598$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _SYS_InterruptHigh in COMMON

    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USER_USB_CALLBACK_EVENT_HANDLER->_APP_DeviceCDCBasicDemoInitialize
    _APP_LEDUpdateUSBStatus->_LED_Off
    _APP_LEDUpdateUSBStatus->_LED_On
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    None.

Critical Paths under _SYS_InterruptHigh in BANK0

    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _APP_DeviceCDCBasicDemoInitialize->_CDCInitEP

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService

Critical Paths under _main in BANK2

    _main->_APP_DeviceCDCBasicDemoTasks
    _SYSTEM_Initialize->_BUTTON_Enable
    _SYSTEM_Initialize->_LED_Enable
    _APP_DeviceCDCBasicDemoTasks->_CDCTxService
    _APP_DeviceCDCBasicDemoTasks->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_APP_DeviceCDCBasicDemoTasks

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5612
        _APP_DeviceCDCBasicDemoTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        5     5      0     396
                                              0 BANK2      5     5      0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      1     1      0       0
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      93
                                              1 BANK2      1     1      0
                      _BUTTON_Enable
                         _LED_Enable
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      31
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTON_Enable                                        1     1      0      31
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCDCBasicDemoTasks                          4     4      0    5123
                                             14 BANK2      2     2      0
                                              0 BANK3      2     2      0
                   _BUTTON_IsPressed
                       _CDCTxService
                       _getsUSBUSART
                        _putUSBUSART
                      _putrsUSBUSART
 ---------------------------------------------------------------------------------
 (2) _putrsUSBUSART                                        4     4      0     233
                                              0 BANK2      4     4      0
 ---------------------------------------------------------------------------------
 (2) _putUSBUSART                                          3     2      1     205
                                              0 BANK2      3     2      1
 ---------------------------------------------------------------------------------
 (2) _getsUSBUSART                                         6     5      1    2202
                                              8 BANK2      6     5      1
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         6     6      0    2164
                                              8 BANK2      6     6      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                 8     4      4    1926
                                              0 BANK2      8     4      4
 ---------------------------------------------------------------------------------
 (2) _BUTTON_IsPressed                                     1     1      0      31
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _SYS_InterruptHigh                                    1     1      0   35595
                                              7 BANK1      1     1      0
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (5) _USBDeviceTasks                                       3     3      0   35595
                                              4 BANK1      3     3      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i1_USBDeviceInit
 ---------------------------------------------------------------------------------
 (6) i1_USBDeviceInit                                      5     5      0     272
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (6) _USBWakeFromSuspend                                   1     1      0    4741
                                              8 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBSuspend                                           1     1      0    4741
                                              8 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBStallHandler                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _USBIncrement1msInternalTimers                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPService                                     4     4      0   21032
                                              0 BANK1      4     4      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfSetupHandler                               1     1      0   20596
                                             15 BANK0      1     1      0
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPServiceComplete                             2     2      0     136
                                              5 COMMON     2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPAllowDataStage                              2     2      0     136
                                              3 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (8) _USBCheckStdRequest                                   1     1      0   15719
                                             14 BANK0      1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBStdSetCfgHandler                                  5     5      0    5615
                                              8 BANK0      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (10) _memset                                              8     2      6     639
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (9) _USBStdGetStatusHandler                               2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _USBStdGetDscHandler                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (9) _USBStdFeatureReqHandler                              6     6      0    5295
                                              8 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    4741
                                              2 BANK0      6     0      6
   _APP_DeviceCDCBasicDemoInitialize
             _APP_LEDUpdateUSBStatus
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (7) _USBCheckCDCRequest                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _APP_LEDUpdateUSBStatus                               0     0      0      62
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (8) _LED_On                                               1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _LED_Off                                              1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _APP_DeviceCDCBasicDemoInitialize                     1     1      0    1528
                                             13 COMMON     1     1      0
                          _CDCInitEP
 ---------------------------------------------------------------------------------
 (8) _CDCInitEP                                            2     2      0    1528
                                              0 BANK0      2     2      0
                  _USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (9) i1_USBTransferOnePacket                               8     4      4     576
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (9) _USBEnableEndpoint                                    6     5      1     952
                                              7 COMMON     6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (10) _USBConfigureEndpoint                                7     6      1     524
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfOutHandler                                 2     2      0     167
                                              6 COMMON     2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfRxService                                  4     4      0     167
                                              2 COMMON     4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfInHandler                                  3     3      0     170
                                              3 COMMON     3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfTxService                                 3     3      0     136
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCDCBasicDemoTasks
     _BUTTON_IsPressed
     _CDCTxService
       _USBTransferOnePacket
     _getsUSBUSART
       _USBTransferOnePacket
     _putUSBUSART
     _putrsUSBUSART
   _SYSTEM_Initialize
     _BUTTON_Enable
     _LED_Enable
   _USBDeviceAttach
   _USBDeviceInit

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i1_USBTransferOnePacket
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _USBCheckCDCRequest
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i1_USBTransferOnePacket
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _USBCheckCDCRequest
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCDCBasicDemoInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i1_USBTransferOnePacket
             _APP_LEDUpdateUSBStatus
               _LED_Off
               _LED_On
             _USBCheckCDCRequest
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i1_USBTransferOnePacket
           _APP_LEDUpdateUSBStatus
             _LED_Off
             _LED_On
           _USBCheckCDCRequest
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i1_USBTransferOnePacket
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _USBCheckCDCRequest
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i1_USBTransferOnePacket
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _USBCheckCDCRequest
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCDCBasicDemoInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i1_USBTransferOnePacket
       _APP_LEDUpdateUSBStatus
         _LED_Off
         _LED_On
       _USBCheckCDCRequest
     i1_USBDeviceInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            10      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               10     10      10       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            10      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               10      8       F       7       93.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            10      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               10     10      10       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      2      4D      11       96.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      1C      13       35.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     126      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     126      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Mar 24 22:14:07 2017

                               _USB_SD_Ptr 0400                                          pc 0002  
                              __CFG_CP$OFF 0000                                         l14 097A  
                              ?_LED_Enable 0070                              _USBDeviceInit 04C9  
                       __size_of_CDCInitEP 0039       USER_USB_CALLBACK_EVENT_HANDLER@event 0062  
     USER_USB_CALLBACK_EVENT_HANDLER@pdata 0064                                        l207 08E0  
                                      l261 09E2                __end_of_USBStdGetDscHandler 0387  
                                      l255 09CB                                        l257 09CE  
                                      l258 09D1                                        l259 09D4  
                                      l457 09F4                                        l397 0510  
                                      _BDT 0020                                        _UIE 0E92  
                                      _UIR 0E90                     _APP_LEDUpdateUSBStatus 0BFB  
                               _USBSuspend 0A00                       USBStdSetCfgHandler@i 006C  
                     USBStdSetCfgHandler@p 0069                               __CFG_BORV$LO 0000  
                                      wreg 0009                             _USBDeviceTasks 0150  
                             __CFG_FOSC$HS 0000                             _USBDeviceState 01C9  
                            _BUTTON_Enable 08D6                                       S5823 081A  
                    ??_USBCtrlTrfRxService 0072                             ??_getsUSBUSART 0169  
                 USBEnableEndpoint@options 0077                               __CFG_LVP$OFF 0000  
                          __end_of_LED_Off 0994                 USBConfigureEndpoint@handle 0076  
                                     l5205 0928                                       l5301 025D  
                                     l5221 07DF                                       l5207 0931  
                                     l5081 0CA9                                       l5073 0C9B  
                                     l5313 0283                                       l5217 07D9  
                                     l5091 0CD5                                       l5307 027A  
                                     l5325 02A2                                       l5333 02BD  
                                     l5261 0E44                                       l5253 0E23  
                                     l5245 0E0C                                       l5229 07EE  
                                     l5351 02EC                                       l5335 02C2  
                                     l5343 02DD                                       l5263 0E56  
                                     l5247 0E0F                                       l5423 096E  
                                     l5353 02F2                                       l5345 02E1  
                                     l5601 0515                                       l5195 091F  
                                     l5355 0305                                       l5259 0E25  
                                     l5179 09D7                                       l5419 0966  
                                     l5293 0252                                       l5199 0926  
                                     l5287 0248                                       l5279 09C5  
                                     l5623 0539                                       l5289 024B  
                                     l5553 0F69                                       l5545 0F4F  
                                     l5561 0F8E                                       l5537 0F3A  
                                     l5547 0F56                                       l5555 0F6F  
                                     l5539 0F3C                                       l5557 0F82  
                                     l5629 0559                                       l5581 04EA  
                                     l5573 04D9                                       l5657 09F9  
                                     l5667 0910                                       l5589 04F7  
                                     u5255 04FA                      ??_USBCtrlTrfTxService 0070  
                                     _UCFG 0E91                                       _UEP0 0E98  
                                     _UEP1 0E99                                       _UEIE 0E97  
                                     _UEIR 0E93                                       _UCON 0E8E  
                             __CFG_WRT$OFF 0000                            _CDCDataInHandle 01C2  
   USBStdFeatureReqHandler@current_ep_data 006C                                       _pDst 01D6  
                                     _main 0906                                       fsr0h 0005  
                                     fsr1h 0007                                       fsr0l 0004  
                                     indf0 0000                                       indf1 0001  
                              _BaudRateGen 01A7                                       fsr1l 0006  
                          _USBDeviceAttach 09E3                                       btemp 007E  
                            __CFG_BOREN$ON 0000                                       ltemp 007E  
                                     start 0010                                       ttemp 007E  
                                     wtemp 007E                              __CFG_IESO$OFF 0000  
               __end_of_USBCheckStdRequest 0DF7                     ??_USBCtrlTrfOutHandler 0076  
                      USBDeviceInit@i_1199 0163                  ??_USBStdFeatureReqHandler 0068  
                   __size_of_putrsUSBUSART 0031                   ??_USBStdGetStatusHandler 0070  
                           ?_USBDeviceInit 0070                                _writeBuffer 0320  
                                    ?_main 0070                              __CFG_WDTE$OFF 0000  
        __size_of_USBCtrlEPServiceComplete 0085                     __end_of_USBDeviceTasks 0234  
                ?_USBCtrlEPServiceComplete 0070                                      i1l130 0B26  
                                    i1l221 09AC                                      i1l231 0993  
                                    i1l215 0996                                      i1l225 097D  
                                    i1l217 0999                                      i1l218 099C  
                                    i1l227 0980                                      i1l219 099F  
                                    i1l228 0983                                      i1l229 0986  
                                    i1l510 063B                                      i1l414 01B0  
                                    i1l408 0173                                      i1l418 01DB  
                                    i1l611 0D9D                                      i1l419 0231  
                                    i1l620 0DD0                                      i1l550 0BA2  
                                    i1l551 0B71                                      i1l632 00A8  
                                    i1l552 0B74                                      i1l705 0D94  
                                    i1l633 00A9                                      i1l609 0DF6  
                                    i1l482 078A                                      i1l547 0B68  
                                    i1l645 010F                                      i1l397 05C1  
                                    i1l495 0FAE                                      i1l597 0EB6  
                                    _UADDR 0E96                                      _USTAT 0E8F  
       __size_of_USBCtrlEPAllowStatusStage 0067                             __CFG_FCMEN$OFF 0000  
                           ?_BUTTON_Enable 0070            __end_of_USBCtrlEPAllowDataStage 0D35  
                                    _sd000 04C5                                      _sd001 044B  
                                    _sd002 047F             ?_USBIncrement1msInternalTimers 0070  
                __size_of_BUTTON_IsPressed 0017                                      ltemp0 007E  
                                    ltemp1 0082                                      ltemp2 0086  
                                    ltemp3 0080                        __size_of_LED_Enable 001B  
                        __end_of_CDCInitEP 0AEE                                      ttemp0 007E  
                                    ttemp1 0081                                      ttemp2 0084  
                                    ttemp3 0087                                      ttemp4 007F  
                                    status 0003                                      wtemp0 007E  
                                    wtemp1 0080                                      wtemp2 0082  
                                    wtemp3 0084                                      wtemp4 0086  
                                    wtemp5 0088                                      wtemp6 007F  
                          putUSBUSART@data 0162               __size_of_USBStdSetCfgHandler 008F  
                           __CFG_MCLRE$OFF 0000                            __initialization 0012  
                             __end_of_main 091C                      _control_signal_bitmap 01D4  
                           __CFG_LPBOR$OFF 0000                  __size_of_USBCtrlEPService 0071  
                                   ??_main 0170                            ?_USBDeviceTasks 0070  
                              ?_USBSuspend 0070                                  ??_LED_Off 0070  
                      __CFG_USBLSCLK$48MHz 0000                            i1_USBDeviceInit 057C  
                             _cdc_mem_type 01CF                              _putrsUSBUSART 07CE  
                  __end_of_USBDeviceAttach 0A00                                     _ADCON0 009D  
                                   _ADCON1 009E                                     _ADCON2 009F  
                         _CDCDataOutHandle 01C3                          _getsUSBUSART$2107 016C  
                                   i1S5831 0824                                     i1S5833 082E  
                                   i1S5825 0800                                     _ADRESH 009C  
                                   _ADRESL 009B                            getsUSBUSART@len 0168  
                   SYSTEM_Initialize@state 0161                      __size_of_CDCTxService 00D4  
                                   i1l5001 065C                                     i1l5011 0685  
                                   i1l5013 0691                                     i1l5033 0DA6  
                                   i1l5035 0DA9                                     i1l5045 0DBA  
                                   i1l5037 0DAC                                     i1l5127 0A8D  
                                   i1l5047 0DBD                                     i1l5063 0DEB  
                                   i1l5153 0E73                                     i1l4441 0A2E  
                                   i1l4505 09A2                                     i1l5049 0DC0  
                                   i1l5401 03B5                                     i1l5155 0E78  
                                   i1l5139 0AB2                                     i1l4427 0B51  
                                   i1l4603 0D82                                     i1l4611 0AF5  
                                   i1l5059 0DDD                                     i1l5411 03E9  
                                   i1l5173 0EBB                                     i1l5165 0E9B  
                                   i1l4437 0A27                                     i1l4541 0C1C  
                                   i1l4533 0C0C                                     i1l4613 0AF8  
                                   i1l5413 03EC                                     i1l4615 0AFB  
                                   i1l4607 0AEF                                     i1l5407 03DA  
                                   i1l5169 0EAA                                     i1l4457 0BC4  
                                   i1l4449 0BB6                                     i1l4545 0C25  
                                   i1l4537 0C17                                     i1l4529 0C02  
                                   i1l4609 0AF2                                     i1l3833 0A7E  
                                   i1l5521 0216                                     i1l5505 01E1  
                                   i1l4467 0BF0                                     i1l4555 0C3B  
                                   i1l4619 0AFE                                     i1l3835 0A80  
                                   i1l3931 05E4                                     i1l5523 0225  
                                   i1l5515 01FD                                     i1l4637 0FA7  
                                   i1l4549 0C30                                     i1l4557 0C41  
                                   i1l4581 0D54                                     i1l4573 0D48  
                                   i1l4813 0374                                     i1l4805 0350  
                                   i1l4725 0D07                                     i1l3909 05C6  
                                   i1l5445 016D                                     i1l5437 0160  
                                   i1l4495 0989                                     i1l4591 0D6B  
                                   i1l4911 0103                                     i1l4815 0377  
                                   i1l4807 0353                                     i1l4831 0B7D  
                                   i1l5367 0A53                                     i1l5471 01A1  
                                   _LED_On 0994                                     i1l4649 0FC6  
                                   i1l4657 0FDF                                     i1l4585 0D5B  
                                   i1l4841 0B96                                     i1l4753 06D7  
                                   i1l4745 06C6                                     i1l4729 0D1A  
                                   i1l5369 0A5C                                     i1l3937 0604  
                                   i1l3881 058B                                     i1l5481 01B6  
                                   i1l5465 018C                                     i1l4659 0FE3  
                                   i1l4667 0FFC                                     i1l4923 0133  
                                   i1l4819 037A                                     i1l4675 0937  
                                   i1l4763 06ED                                     i1l5459 0186  
                                   i1l4693 0EE0                                     i1l4597 0D79  
                                   i1l4925 013B                                     i1l4909 00FE  
                                   i1l4861 0060                                     i1l4919 0115  
                                   i1l4943 075E                                     i1l5495 01D3  
                                   i1l5487 01BD                                     i1l4793 0313  
                                   i1l4785 0733                                     i1l4769 0701  
                                   i1l4961 0798                                     i1l3897 05A8  
                                   i1l3889 059C                                     i1l5827 0B07  
                                   i1l4883 00B1                                     i1l4875 008D  
                                   i1l4859 005E                                     i1l4939 075A  
                                   i1l5829 0B21                                     i1l4893 00CA  
                                   i1l4797 031D                                     i1l4895 00D1  
                                   i1l4969 07A1                                     i1l4899 00DA  
                                   i1l4999 0643                                     u316_25 05AB  
                                   u409_25 0D11                                     u448_25 0635  
                                   u377_25 0B2F                                     u378_25 0B35  
                                   u379_25 0B3D                                     u487_25 0396  
                            CDCTxService@i 016C               i1USBTransferOnePacket@handle 0077  
                           __CFG_PWRTE$OFF 0000                          _shortPacketStatus 01D7  
                          USBDeviceTasks@i 00E6                USBStdFeatureReqHandler@pUEP 006A  
                 USBTransferOnePacket@data 0161                 USBCtrlTrfInHandler@lastDTS 0075  
                          ??_USBDeviceInit 0160                               ?_putUSBUSART 0160  
                           __CFG_STVREN$ON 0000                       __end_of_getsUSBUSART 0E59  
                        _USBEnableEndpoint 0A1F            __size_of_USBStdGetStatusHandler 004B  
                                   _memset 0933                         ?_USBEnableEndpoint 0077  
            __size_of_USBTransferOnePacket 004D                            ??_BUTTON_Enable 0160  
                             _CDCTxService 0234                             ?_putrsUSBUSART 0070  
                      ??_USBEnableEndpoint 0078                                _CtrlTrfData 0058  
             ?_APP_DeviceCDCBasicDemoTasks 0070                       _controlTransferState 01D3  
                        _SYSTEM_Initialize 0963                    __end_of__initialization 0045  
               i1USBTransferOnePacket@data 0071                         ?_SYSTEM_Initialize 0070  
                 __size_of_USBStallHandler 0026                        __size_of_USBSuspend 001F  
                           __pcstackCOMMON 0070                  __end_of_USBEnableEndpoint 0A3F  
                            __end_of_sd000 04C9                              __end_of_sd001 047F  
                            __end_of_sd002 04B3                               __pidataBANK4 08E1  
                      ??_SYSTEM_Initialize 0161                                  LED_On@led 0070  
         __size_of_USBCtrlEPAllowDataStage 0055                               ??_LED_Enable 0160  
            __size_of_USBConfigureEndpoint 003D                    __end_ofi1_USBDeviceInit 0625  
              __end_of_USBCtrlTrfInHandler 0EBD                    ?_APP_LEDUpdateUSBStatus 0070  
                        _CDCTxService$2155 016A                                 _cdc_notice 0232  
                               _cdc_rx_len 01D0                                 _cdc_tx_len 01D2  
                            _buttonMessage 0220                   ??_USBCtrlTrfSetupHandler 006F  
                  _USBTicksSinceSuspendEnd 01CD                           ?_USBDeviceAttach 0070  
                __end_of_SYSTEM_Initialize 097B                           _BUTTON_IsPressed 091C  
                   _USBStdGetStatusHandler 0B64                              _buttonPressed 01CE  
                               __pbssBANK1 00E8                                 __pbssBANK3 01A0  
                               __pbssBANK4 0232                                 __pbssBANK5 02A0  
                               __pbssBANK6 0320                                    ?_LED_On 0070  
            ??_APP_DeviceCDCBasicDemoTasks 016E   __end_of_APP_DeviceCDCBasicDemoInitialize 0906  
__size_of_APP_DeviceCDCBasicDemoInitialize 0013         ??_APP_DeviceCDCBasicDemoInitialize 007D  
        ?_APP_DeviceCDCBasicDemoInitialize 0070           _APP_DeviceCDCBasicDemoInitialize 08F3  
                       __end_of_LED_Enable 09E3                __size_of_USBWakeFromSuspend 0020  
                              _pBDTEntryIn 01B5           __end_of_USBCtrlEPServiceComplete 07CE  
              __size_of_USBCheckCDCRequest 0060                                 __pmaintext 0906  
                     USBCtrlTrfRxService@i 0074                              LED_Enable@led 0160  
                          __CFG_PLLMULT$4x 0000             __end_of_APP_LEDUpdateUSBStatus 0C47  
                               __pintentry 0004               APP_DeviceCDCBasicDemoTasks@i 01EC  
                                  ?_memset 0070                                 _device_dsc 04B3  
                         _USBCtrlEPService 0387                                 _ep_data_in 01AF  
              __end_of_USBCtrlTrfRxService 06BA                         _USBCheckStdRequest 0D95  
                        _configDescriptor1 0408                            ??_putrsUSBUSART 0160  
                                  _LED_Off 097B                __end_of_USBCtrlTrfTxService 1000  
                      _USBStdSetCfgHandler 06BA                        ?_USBCheckStdRequest 0070  
             __size_of_USBStdGetDscHandler 007F                                    _UIEbits 0E92  
                                  _UIRbits 0E90                            __size_of_LED_On 0019  
                            _cdc_trf_state 01D1                   ??i1_USBTransferOnePacket 0074  
           APP_LEDUpdateUSBStatus@ledCount 01BB                                    _pCDCDst 01BD  
                                  _pCDCSrc 01BF                      __size_of_getsUSBUSART 0062  
          ??_USBIncrement1msInternalTimers 0070                       ?_USBStdSetCfgHandler 0070  
                                _CDCInitEP 0AB5                 __size_of_USBEnableEndpoint 0020  
                               _readBuffer 02A0                       ??_USBCheckStdRequest 006E  
            __size_of_USBCtrlTrfOutHandler 0030                           ??_USBDeviceTasks 00E4  
                        ??_USBStallHandler 0070       __size_of_APP_DeviceCDCBasicDemoTasks 006D  
                         ?i1_USBDeviceInit 0070                       __size_of_putUSBUSART 001B  
                       getsUSBUSART@buffer 016B                            __size_of_memset 0018  
                __end_of_configDescriptor1 044B                                    __ptext1 04C9  
                                  __ptext2 09E3                                    __ptext3 0963  
                                  __ptext4 09C8                                    __ptext5 08D6  
                                  __ptext6 0F24                                    __ptext7 07CE  
                                  __ptext8 09AD                                    __ptext9 0DF7  
                                  _inPipes 00EA                _USBDeferOUTDataStagePackets 01C7  
                             ??_USBSuspend 0068                         __end_of_USB_CD_Ptr 0408  
               __size_of_SYSTEM_Initialize 0018            __size_of_USBCtrlTrfSetupHandler 004C  
                                  clrloop0 03F9                       end_of_initialization 0045  
                             _getsUSBUSART 0DF7                         __end_of_USB_SD_Ptr 0406  
                      _pBDTEntryEP0OutNext 00E9                                    init_ram 08D0  
                                  memset@c 0072                                    memset@n 0074  
                                  memset@p 0076                                    initloop 08D1  
                          _USB1msTickCount 01AB            _dummy_encapsulated_cmd_response 01D8  
                 ?_USBStdFeatureReqHandler 0070                      ??_USBStdSetCfgHandler 0068  
                               ?_CDCInitEP 0070                         __end_of_USBSuspend 0A1F  
                  _USBCtrlEPAllowDataStage 0CE0                               __pstringtext 0400  
                 _USBCtrlEPServiceComplete 0749                 _USBStatusStageEnabledFlag1 01CA  
               _USBStatusStageEnabledFlag2 01CB                         USBEnableEndpoint@p 007A  
                                _PORTAbits 000C                                  _TRISBbits 008D  
                                _TRISCbits 008E                         _BothEP0OutUOWNsSet 01C1  
                USBStdSetCfgHandler@i_1543 006B                  USBConfigureEndpoint@EPNum 0075  
               ?_USBCtrlEPAllowStatusStage 0070        USER_USB_CALLBACK_EVENT_HANDLER@size 0066  
  APP_DeviceCDCBasicDemoTasks@numBytesRead 01EB                                  _USTATcopy 01EA  
                 i1USBTransferOnePacket@ep 0076               __end_of_USBTransferOnePacket 0CE0  
                           __end_of_LED_On 09AD            __size_ofi1_USBTransferOnePacket 004C  
                        putUSBUSART@length 0160                         __CFG_PLLEN$ENABLED 0000  
                    i1USBDeviceInit@i_1199 0073                     _USBCtrlTrfSetupHandler 0C47  
                 __end_of_BUTTON_IsPressed 0933                      __end_of_USBDeviceInit 057C  
    __end_of_USBIncrement1msInternalTimers 0963     __size_of_USBIncrement1msInternalTimers 0018  
            _USBIncrement1msInternalTimers 094B                                 LED_Off@led 0070  
                       putrsUSBUSART@pData 0161                             __end_of_memset 094B  
                        _USBBusIsSuspended 01C5                        start_initialization 0012  
                  ?_USBStdGetStatusHandler 0070                      __end_of_BUTTON_Enable 08E1  
            USBCtrlTrfRxService@byteToRead 0075                                _cdc_data_rx 0120  
                              _cdc_data_tx 00A0               __end_of_USBConfigureEndpoint 0B64  
          __end_of_USBStdFeatureReqHandler 0150                                   ??_LED_On 0070  
        __end_of_USBCtrlEPAllowStatusStage 0F24                   __end_of_USBCtrlEPService 03F8  
                ??_USBCtrlEPAllowDataStage 0073                                ??_CDCInitEP 0060  
                           USBDeviceInit@i 0164                             USBDeviceInit@p 0161  
                   _pBDTEntryEP0OutCurrent 00E8                    USBTransferOnePacket@dir 0160  
                  USBTransferOnePacket@len 0163                        _USBStdGetDscHandler 0308  
                              __pdataBANK4 0220                                   ??_memset 0076  
                   i1_USBTransferOnePacket 0BAF                     BUTTON_IsPressed@button 0160  
                   _USBActiveConfiguration 01E9             __end_of_USBStdGetStatusHandler 0BAF  
                i1USBTransferOnePacket@dir 0070                  i1USBTransferOnePacket@len 0073  
                                 ?_LED_Off 0070                                  ___latbits 0002  
                            __pcstackBANK0 0060                              __pcstackBANK1 00E0  
                            __pcstackBANK2 0160                              __pcstackBANK3 01EB  
             __size_of_USBCtrlTrfInHandler 0064                       ?_USBStdGetDscHandler 0070  
               __end_of_USBWakeFromSuspend 0A5F                            _USBStallHandler 0A5F  
                             _pBDTEntryOut 01B8                 __end_of_USBCheckCDCRequest 0D95  
                 __size_of_USBDeviceAttach 001D                                  __pswtext1 081A  
                                __pswtext2 0800                                  __pswtext3 0824  
                                __pswtext4 082E                       _USBTransferOnePacket 0C93  
                    __end_of_putrsUSBUSART 07FF               __end_of_USBCtrlTrfOutHandler 0AB5  
                    ??_USBStdGetDscHandler 0070                                _ep_data_out 01B2  
      __end_of_APP_DeviceCDCBasicDemoTasks 0F91                _APP_DeviceCDCBasicDemoTasks 0F24  
             __size_of_USBCtrlTrfRxService 0095              USBConfigureEndpoint@direction 0070  
             __size_of_USBCtrlTrfTxService 006F                                   _LATCbits 010E  
               ??_USBCtrlEPServiceComplete 0075                                  clear_ram0 03F8  
                                 _PIE2bits 0092                                   _PIR2bits 0012  
                USBCtrlEPService@setup_cnt 00E3                              ??_putUSBUSART 0161  
                                 _UEP0bits 0E98                 _USBDeferINDataStagePackets 01C6  
              __size_of_USBCheckStdRequest 0062                                   _UCONbits 0E8E  
                     _USBConfigureEndpoint 0B27           __size_of_USBStdFeatureReqHandler 0108  
                               _ADCON0bits 009D                      ?_USBTransferOnePacket 0160  
                        _SYS_InterruptHigh 0004                              ?_CDCTxService 0070  
                             _RemoteWakeup 01C4                           __size_of_LED_Off 0019  
                       ?_SYS_InterruptHigh 0070                   __size_ofi1_USBDeviceInit 00A9  
                  __end_of_USBStallHandler 0A85                          putrsUSBUSART@data 0162  
              ??_USBCtrlEPAllowStatusStage 0070                __end_of_USBStdSetCfgHandler 0749  
                      ??_SYS_InterruptHigh 00E7                         __end_of_device_dsc 04C5  
                 ??_APP_LEDUpdateUSBStatus 0071                    ?_USBCtrlTrfSetupHandler 0070  
                  USBStdGetStatusHandler@p 0071                     USBTransferOnePacket@ep 0166  
                                 _SetupPkt 0050                      ?_USBConfigureEndpoint 0070  
                        ??_USBDeviceAttach 0160                          ?_BUTTON_IsPressed 0070  
                __end_of_SYS_InterruptHigh 0010                         ??_BUTTON_IsPressed 0160  
                      __end_of_putUSBUSART 09C8                                _line_coding 01E0  
                               _ANSELBbits 018D                             ??_CDCTxService 0168  
                  __size_of_USBDeviceTasks 00E4                                   __ptext10 0234  
                                 __ptext11 0C93                                   __ptext20 0387  
                                 __ptext12 091C                                   __ptext21 0C47  
                                 __ptext30 0AEE                                   __ptext22 0749  
                                 __ptext14 0150                                   __ptext31 0D35  
                                 __ptext23 0CE0                                   __ptext15 057C  
                                 __ptext40 0A85                                   __ptext32 0BFB  
                                 __ptext24 0D95                                   __ptext16 0A3F  
                                 __ptext41 0625                                   __ptext33 0994  
                                 __ptext25 06BA                                   __ptext17 0A00  
                                 __ptext42 0EBD                                   __ptext34 097B  
                                 __ptext26 0933                                   __ptext18 0A5F  
                                 __ptext43 0E59                                   __ptext35 08F3  
                                 __ptext27 0B64                                   __ptext19 094B  
                                 __ptext44 0F91                                   __ptext36 0AB5  
                                 __ptext28 0308                                   __ptext37 0BAF  
                                 __ptext29 0048                                   __ptext38 0A1F  
                                 __ptext39 0B27             __end_of_USBCtrlTrfSetupHandler 0C93  
                            __size_of_main 0016                          ?_USBCtrlEPService 0070  
                       ??_USBCtrlEPService 00E0                        _USBCtrlTrfInHandler 0E59  
                      BUTTON_Enable@button 0160                                   _outPipes 01A0  
                     _USBCtrlTrfOutHandler 0A85                    ?i1_USBTransferOnePacket 0070  
                _USBCtrlEPAllowStatusStage 0EBD                                 _LED_Enable 09C8  
                   ??_USBTransferOnePacket 0164                           putrsUSBUSART@len 0163  
                _USBDeferStatusStagePacket 01C8                   CDCTxService@byte_to_send 016D  
                         i1USBDeviceInit@i 0074                           i1USBDeviceInit@p 0071  
                               _INTCONbits 000B                       ?_USBCtrlTrfInHandler 0070  
            USBCtrlTrfTxService@byteToSend 0072                                   memset@p1 0070  
                         ?_USBStallHandler 0070                   USBStdFeatureReqHandler@p 006D  
                                 intlevel1 0000                     __size_of_USBDeviceInit 00B3  
  __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0B27   __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0039  
         ?_USER_USB_CALLBACK_EVENT_HANDLER 0062          ??_USER_USB_CALLBACK_EVENT_HANDLER 007E  
          _USER_USB_CALLBACK_EVENT_HANDLER 0AEE                          ??i1_USBDeviceInit 0070  
                        __CFG_CLKOUTEN$OFF 0000            __size_of_APP_LEDUpdateUSBStatus 004C  
           __end_ofi1_USBTransferOnePacket 0BFB                     ??_USBConfigureEndpoint 0071  
                    ?_USBCtrlTrfOutHandler 0070                     __size_of_BUTTON_Enable 000B  
                              _putUSBUSART 09AD                       __CFG_CPUDIV$NOCLKDIV 0000  
                      _USBCtrlTrfRxService 0625                         _USBWakeFromSuspend 0A3F  
                  _USBStdFeatureReqHandler 0048                         _USBCheckCDCRequest 0D35  
                      _USBCtrlTrfTxService 0F91                 __size_of_SYS_InterruptHigh 000C  
                      ?_USBWakeFromSuspend 0070                      ??_USBCtrlTrfInHandler 0073  
                    _USBAlternateInterface 01E7                        ?_USBCheckCDCRequest 0070  
                      USBEnableEndpoint@ep 007C                            _endpoint_number 01D5  
                     ?_USBCtrlTrfRxService 0070                              ?_getsUSBUSART 0168  
                 ?_USBCtrlEPAllowDataStage 0070                       ?_USBCtrlTrfTxService 0070  
             _USBStatusStageTimeoutCounter 01CC                       ??_USBWakeFromSuspend 0068  
               USBTransferOnePacket@handle 0167                       __end_of_CDCTxService 0308  
                     ??_USBCheckCDCRequest 0070                                 _USB_CD_Ptr 0406  
